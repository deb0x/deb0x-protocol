{"version":3,"sources":["photos/icons/avatars/animal-45.svg","photos/icons/avatars/animal-46.svg","photos/icons/avatars/animal-47.svg","photos/icons/avatars/animal-48.svg","photos/icons/avatars/animal-49.svg","photos/icons/avatars/animal-5.svg","photos/icons/avatars/animal-50.svg","photos/icons/avatars/animal-6.svg","photos/icons/avatars/animal-7.svg","photos/icons/avatars/animal-8.svg","photos/icons/avatars/animal-9.svg","photos/icons/theme-switch-dark.svg","photos/icons/theme-switch-light.svg","connectors.ts","hooks.ts","photos/icons/ios-compose.svg","photos/icons/trophy.svg","ethereum/deb0xerc20.js","components/Contexts/ContactsContext.tsx","components/ContactsSetter.tsx","components/App/PermanentDrawer.tsx","components/Common/ScreenSize.tsx","components/App/Stepper.tsx","components/Common/AccountName.tsx","components/Contexts/ReadedMessagesContext.tsx","components/Contexts/ReadedMessagesProvider.tsx","components/App/Decrypt.tsx","photos/icons/token.svg","photos/icons/coin-bag-solid--light.svg","photos/icons/coin-bag-solid--dark.svg","photos/icons/wallet--light.svg","photos/icons/wallet--dark.svg","photos/icons/trophyRewards.svg","components/App/Stake.tsx","components/App/Sent.tsx","components/Contexts/ThemeContext.tsx","components/Contexts/ThemeProvider.tsx","components/Contexts/ContactsProvider.tsx","photos/icons/elephant.svg","photos/icons/logo-green.svg","components/App/Spinner.tsx","components/ThemeSetter.tsx","components/App/AppBar.tsx","components/HowTo.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/App/Encrypt.tsx","photos/icons/clouds/cloud-2.svg","photos/icons/clouds/cloud-1.svg","photos/icons/clouds/cloud-3.svg","photos/icons/airplane-black.svg","photos/icons/avatars sync /^/.//animal/-.*/.svg$","ethereum/deb0x.js","components/App/Snackbar.tsx","photos/icons/avatars/animal-1.svg","photos/icons/avatars/animal-10.svg","photos/icons/avatars/animal-11.svg","photos/icons/avatars/animal-12.svg","photos/icons/avatars/animal-13.svg","photos/icons/avatars/animal-14.svg","photos/icons/avatars/animal-15.svg","photos/icons/avatars/animal-16.svg","photos/icons/avatars/animal-17.svg","photos/icons/avatars/animal-18.svg","photos/icons/avatars/animal-19.svg","photos/icons/avatars/animal-2.svg","photos/icons/avatars/animal-20.svg","photos/icons/avatars/animal-21.svg","photos/icons/avatars/animal-22.svg","photos/icons/avatars/animal-23.svg","photos/icons/avatars/animal-24.svg","photos/icons/avatars/animal-25.svg","photos/icons/avatars/animal-26.svg","photos/icons/avatars/animal-27.svg","photos/icons/avatars/animal-28.svg","photos/icons/avatars/animal-29.svg","photos/icons/avatars/animal-3.svg","photos/icons/avatars/animal-30.svg","photos/icons/avatars/animal-31.svg","photos/icons/avatars/animal-32.svg","photos/icons/avatars/animal-33.svg","photos/icons/avatars/animal-34.svg","photos/icons/avatars/animal-35.svg","photos/icons/avatars/animal-36.svg","photos/icons/avatars/animal-37.svg","photos/icons/avatars/animal-38.svg","photos/icons/avatars/animal-39.svg","photos/icons/avatars/animal-4.svg","photos/icons/avatars/animal-40.svg","photos/icons/avatars/animal-41.svg","photos/icons/avatars/animal-42.svg","photos/icons/avatars/animal-43.svg","photos/icons/avatars/animal-44.svg"],"names":["injected","InjectedConnector","supportedChainIds","network","NetworkConnector","urls","defaultChainId","useEagerConnect","useWeb3React","activate","active","useState","tried","setTried","useEffect","isAuthorized","then","undefined","catch","abi","require","signerOrProvider","address","ethers","Contract","initialContacts","contacts","name","setContacts","_values","ContactsContext","createContext","ContactsSetter","props","useContext","setName","setAddress","ref","useRef","onClickOutside","localStorage","getItem","theme","setTheme","notificationState","setNotificationState","setItem","JSON","stringify","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","Snackbar","state","Modal","open","show","Box","className","placeholder","onChange","e","currentTarget","value","readOnly","type","onClick","some","message","severity","push","ConnectorNames","deb0xERC20Address","Injected","PermanentDrawer","context","connector","library","account","chainId","deactivate","error","activatingConnector","setActivatingConnector","selectedIndex","setSelectedIndex","setEnsName","userUnstakedAmount","setUserUnstakedAmount","anchorEl","dimensions","Boolean","width","height","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","ScreenSize","setNetworkName","setShow","setUnstakedAmount","deb0xERC20Contract","Deb0xERC20","balanceOf","balance","utils","formatEther","lookupAddress","handleChange","text","index","removeItem","checkENS","forEach","providers","getNetwork","setTimeout","sx","display","Drawer","variant","anchor","List","map","ListItem","button","selected","ListItemIcon","src","add","trophy","ListItemText","primary","contact","IconButton","size","navigator","clipboard","writeText","fontSize","contactsList","filter","_","i","deleteContact","Add","href","deb0xAddress","steps","HorizontalLinearStepper","encryptionKey","setEncryptionKey","activeStep","setActiveStep","whichStepFailed","setStepFailed","loading","setLoading","handleNext","prevActiveStep","provider","request","method","params","result","getSigner","signer","deb0xContract","Deb0x","setKey","wait","onDeboxInitialization","maxWidth","Stepper","label","labelProps","optional","Typography","color","Step","StepLabel","length","flexDirection","pt","LoadingButton","marginLeft","formatAccountName","substring","readedMessages","readed","parse","setReaded","ReadedMessagesContext","ReadedMessagesProvider","children","Provider","Decrypt","encryptionKeyInitialized","setEncryptionKeyInitialized","savedContacts","getPublicEncryptionKey","getKey","key","decrypt","encryptedMessage","decryptedMessage","fetchMessage","axios","get","Message","encryptMessage","fetchedMessage","data","setMessage","ensName","timestamp","messageTime","isDecrypted","setIsDecrypted","Math","floor","random","randomImage","isReaded","setIsReaded","checkMessageInLocalStorage","element","sender","setPreviousIndex","hideMessage","checkSenderInLocalStorage","user","previousIndex","disablePadding","secondaryAction","edge","ListItemButton","decryptMessage","includes","default","alt","filteredPerson","dangerouslySetInnerHTML","__html","Announcement","Encrypt","GetMessages","setFetchedMessages","sortedMessages","setSortedMessages","fetchMessageSenders","senderAddresses","cidsPromises","fetchMessages","cids","Promise","all","encryptedMessagesPromisesArray","cidArray","encryptedMessagesPromises","cid","unixTimestamp","blockTimestamp","toString","dateObject","Date","humanDateFormat","toLocaleString","promise","encryptedMessages","sortedEncryptedMessages","flat","reverse","processMessages","CircularProgress","Pagination","count","Stake","FeesPanel","feesUnclaimed","setFeesUnclaimed","getUnclaimedFees","unclaimedRewards","claimFees","feesAccrued","Card","CardContent","component","trophyRewards","CardActions","disabled","RewardsPanel","rewardsUnclaimed","setRewardsUnclaimed","feeSharePercentage","setFeeSharePercentage","getUnclaimedRewards","getUserWithdrawableStake","userWithdrawableStake","parseFloat","currentStartedCycle","currentCycle","summedCycleStakes","totalSupply","feeShare","round","toFixed","claimRewards","rewardsAccrued","StakeUnstake","alignment","setAlignment","userStakedAmount","setUserStakedAmount","totalStaked","setTotalStaked","amountToUnstake","setAmountToUnstake","amountToStake","setAmountToStake","approved","setApproved","allowance","approve","parseEther","unstake","stakeDBX","setStakedAmount","totalAmountStaked","setApproval","ToggleButtonGroup","exclusive","newAlignment","ToggleButton","coinBagDark","coinBagLight","walletDark","walletLight","Divider","Grid","container","spacing","item","TextField","id","Button","TotalStaked","currentStake","token","Sent","recipients","setRecipients","onlyUnique","self","indexOf","recipientsTemp","recipient","recipientsFiltered","handleDecryptMessage","fetchedMessages","fetchSentMessages","sentMessages","sentMessagesRetrieved","contentData","fetchedMessageContent","messages","cloud2","cloud1","cloud3","initialThemeState","_value","ThemeContext","ThemeProvider","savedThemeLocal","ContactsProvider","Spinner","rest","viewBox","xmlns","stroke","fill","fillRule","transform","strokeWidth","strokeOpacity","cx","cy","r","d","attributeName","from","to","dur","repeatCount","ThemeSetter","checked","setChecked","Switch","connectorsByName","AppBarComponent","networkName","setAnchorEl","handleClick","filterFrom","filters","Transfer","filterTo","on","removeAllListeners","currentConnector","activating","connected","toLowerCase","Popper","HowTo","create","host","port","protocol","Network","getLibrary","Web3Provider","pollingInterval","App","errorMsg","selectedOption","setSelectedOption","isVisible","setIsVisible","triedEager","ethereum","displayErrorMsg","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","symbol","decimals","suppress","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","switchNetwork","err","style","alignItems","marginTop","marginBottom","newValue","textAlign","mt","elephant","logoGreen","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","BigNumber","ethUtil","projectIdAndSecret","process","client","headers","authorization","Buffer","replyAddress","textToEncrypt","setTextToEncrypt","senderAddress","setSenderAddress","messageSessionSentCounter","setMessageSessionSentCounter","estimatedReward","addressList","setAddressList","setError","input","evt","preventDefault","trim","isValid","paste","clipboardData","getData","isInList","isAddress","isInitialized","encryptionKeys","encryptText","messageToEncrypt","destinationAddresses","getAddress","destinationAddressEncryptionKey","bufferToHex","encrypt","publicKey","version","path","overrides","parseUnits","gasLimit","constants","AddressZero","tx","setEditorState","EditorState","createEmpty","match","editorState","sendContent","draftToHtml","convertToRaw","getCurrentContent","noValidate","autoComplete","onPaste","onKeyDown","direction","margin","onDelete","deleteIcon","onEditorStateChange","toolbarClassName","wrapperClassName","editorClassName","justifyContent","mr","endIcon","airplaneBlack","loadingPosition","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports","Alert","forwardRef","elevation","SnackbarNotification","setState","handleClose","reason","autoHideDuration","onClose"],"mappings":"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CAAE5B,MAAO,QAApE,SACGvC,EAAMe,WAId,C,6ECrCD,OAAe,cAA0B,oC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,oC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,oC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,oC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,qC","file":"static/js/main.aa659117.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/animal-45.b167c63d.svg\";","export default __webpack_public_path__ + \"static/media/animal-46.42d27fee.svg\";","export default __webpack_public_path__ + \"static/media/animal-47.b5150579.svg\";","export default __webpack_public_path__ + \"static/media/animal-48.e200a64c.svg\";","export default __webpack_public_path__ + \"static/media/animal-49.b1bca8d7.svg\";","export default __webpack_public_path__ + \"static/media/animal-5.05a5a1db.svg\";","export default __webpack_public_path__ + \"static/media/animal-50.eb779e9c.svg\";","export default __webpack_public_path__ + \"static/media/animal-6.85ab4489.svg\";","export default __webpack_public_path__ + \"static/media/animal-7.43eccf57.svg\";","export default __webpack_public_path__ + \"static/media/animal-8.ca62010f.svg\";","export default __webpack_public_path__ + \"static/media/animal-9.cfc3406b.svg\";","export default __webpack_public_path__ + \"static/media/theme-switch-dark.ceaa0b87.svg\";","export default __webpack_public_path__ + \"static/media/theme-switch-light.09f6f25e.svg\";","\nimport { InjectedConnector } from '@web3-react/injected-connector'\nimport { NetworkConnector } from '@web3-react/network-connector'\n\n// const POLLING_INTERVAL = 12000\nconst RPC_URLS: { [chainId: number]: string } = {\n    4: 'https://rinkeby.infura.io/v3/84842078b09946638c03157f83405213'\n}\n\nexport const injected = new InjectedConnector({ supportedChainIds: [4] })\n\nexport const network = new NetworkConnector({\n    urls: { 4: RPC_URLS[4] },\n    defaultChainId: 4\n  })","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from './connectors'\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect((): any => {\n    const { ethereum } = window as any\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        activate(injected)\n      }\n      const handleChainChanged = (chainId: string | number) => {\n        activate(injected)\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        if (accounts.length > 0) {\n          activate(injected)\n        }\n      }\n      const handleNetworkChanged = (networkId: string | number) => {\n        activate(injected)\n      }\n\n      ethereum.on('connect', handleConnect)\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n      ethereum.on('networkChanged', handleNetworkChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate])\n}","export default __webpack_public_path__ + \"static/media/ios-compose.9c72b916.svg\";","export default __webpack_public_path__ + \"static/media/trophy.2c553cfd.svg\";","import { ethers } from \"ethers\";\n\nconst {abi} = require(\"./Deb0xERC20.json\");\n\nexport default (signerOrProvider, address) => {\n    return new ethers.Contract(address, abi, signerOrProvider);\n}","import { createContext } from \"react\";\n\nexport const initialContacts = {\n    contacts: [{\n        name: \"Deb0x Bot\",\n        address: \"0x31dcF3b5F43e7017425E25E5A0F006B6f065c349\"\n    }],\n    setContacts: (_values: any) => {}\n}\n\nconst ContactsContext = createContext(initialContacts);\nexport default ContactsContext;\n","import { Add, SettingsPhoneTwoTone } from \"@mui/icons-material\";\nimport { Box, IconButton, Modal } from \"@mui/material\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport SnackbarNotification from '../components/App/Snackbar';\n\n\nimport ContactsContext from \"./Contexts/ContactsContext\";\n\nexport default function ContactsSetter(props: any) {\n    const useContacts = () => useContext(ContactsContext);\n    const { contacts, setContacts } = useContacts()!;\n    const [name, setName] = useState<string>(\"\");\n    const [address, setAddress] = useState<string>(props.props);\n    const ref = useRef<any>(null);\n    const { onClickOutside } = props;\n    const [theme, setTheme] = useState(localStorage.getItem('globalTheme'));\n    const [notificationState, setNotificationState] = useState({})\n    var found: any;\n\n    const addContact = () => {\n        found = contacts.some(e => e.address == address)\n        if (!found) {\n            contacts.push({name: name, address: address});\n            setContacts([...contacts])\n            onClickOutside && onClickOutside();\n        } else {\n            setNotificationState({\n                message: \"This address is already saved\", open: true,\n                severity: \"error\"\n            })\n        }\n    }\n\n    function handleOnCancel() {\n        onClickOutside && onClickOutside();\n    }\n\n    function handleChange(event: any) {\n        if(event.target)\n            setAddress(event.target.value)\n    }\n\n    useEffect(() => {\n        setTheme(localStorage.getItem('globalTheme'));\n    });\n\n    useEffect(() => {\n        localStorage.setItem('contacts', JSON.stringify(contacts));\n    }, [contacts, localStorage]);\n\n    useEffect(() => {\n        const handleClickOutside = (event: any) => {\n            if (ref.current && !ref.current.contains(event.target)) {\n                onClickOutside && onClickOutside();\n            }\n        };\n        document.addEventListener('click', handleClickOutside, true);\n        return () => {\n            document.removeEventListener('click', handleClickOutside, true);\n        };\n    }, [ onClickOutside ]);\n\n    return (\n        <>\n            <SnackbarNotification state={notificationState} \n                setNotificationState={setNotificationState} />\n            <Modal open={props.show}>\n                <Box ref={ref} className={`modal-box ${theme === \"classic\" ? \"classic\" : \"dark\"}` }>\n                    <form>\n                        <div className=\"add-contact-text\">Add Contact</div>\n                        <div className=\"form-group for-field\">\n                            <label className=\"for-label\">Name</label>\n                            <input key=\"name\" className=\"form-control inputs\" placeholder=\"Type here\"\n                                onChange={(e) => setName(e.currentTarget.value)}/>\n                        </div>\n                        <div className=\"form-group for-field\">\n                            <label className=\"for-label\">Address</label>\n                            { address ?\n                                <input readOnly key=\"address\" className=\"form-control inputs\"\n                                    value={address}/> :\n                                <input key=\"address\" className=\"form-control inputs\" placeholder=\"Type here\" onChange={handleChange} />    \n                            }\n                        </div>\n                        <div className=\"buttons-container\">\n                            <button className=\"btn mt-3 cancel-button\" type=\"button\"\n                                onClick={() => handleOnCancel()}>\n                                Cancel\n                            </button>\n                            <button className=\"btn mt-3 add-button\" type=\"button\"\n                                onClick={addContact}>\n                                OK / SAVE / ADD\n                            </button>\n                        </div>\n                    </form>\n                </Box>\n            </Modal>\n        </>\n    );\n}","import React, { useState, useEffect, useContext } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport SendIcon from '@mui/icons-material/Send';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport add from '../../photos/icons/ios-compose.svg';\nimport trophy from '../../photos/icons/trophy.svg';\nimport Button from '@mui/material/Button'\nimport Popper from '@mui/material/Popper'\nimport { injected } from '../../connectors';\nimport { Spinner } from './Spinner'\nimport { useEagerConnect } from '../../hooks';\nimport IconButton from \"@mui/material/IconButton\";\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport Deb0xERC20 from \"../../ethereum/deb0xerc20\"\nimport { ethers } from \"ethers\";\nimport \"../../componentsStyling/permanentDrawer.scss\";\nimport ThemeSetter from '../ThemeSetter';\nimport ScreenSize from '../Common/ScreenSize';\nimport ContactsContext from '../Contexts/ContactsContext';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport SnackbarNotification from './Snackbar';\nimport { Add } from '@mui/icons-material';\nimport ContactsSetter from '../ContactsSetter';\n\nconst deb0xERC20Address = \"0x98583dd5310725eBDFd1123CA1FDE765Ef6eAFb8\"\nenum ConnectorNames { Injected = 'Injected' };\n\nconst connectorsByName: { [connectorName in ConnectorNames]: any } = {\n    [ConnectorNames.Injected]: injected\n}\n\ndeclare global {\n    interface Window {\n        ethereum: any;\n    }\n}\n\nexport function PermanentDrawer(props: any): any {\n    const context = useWeb3React()\n    const { connector, library, chainId, account, activate, deactivate, active, error } = context\n    const [activatingConnector, setActivatingConnector] = useState<any>()\n    const triedEager = useEagerConnect()\n    const [selectedIndex, setSelectedIndex] = useState<any>(1);\n    const [searchBarValue, setSearchBarValue] = useState<any>(\"search\");\n    const [ensName, setEnsName] = useState<any>(\"\");\n    // const [balance, setBalance] = useState<any>(\"8.13\");\n    const [userUnstakedAmount,setUserUnstakedAmount] = useState<any>(0);\n    const menuItems = ['Compose', 'Deb0x', 'Stake', 'Sent'];\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popper' : undefined;\n    const dimensions = ScreenSize();\n    const useContacts = () => useContext(ContactsContext);\n    const { contacts, setContacts } = useContacts()!;\n    const [notificationState, setNotificationState] = useState({});\n    const [networkName, setNetworkName] = useState<any>();\n    let errorMessage;\n    let [show, setShow] = useState(false);\n\n    if(library){\n        checkENS();\n        setUnstakedAmount();\n    }\n\n    useEffect(() => {\n        injected.supportedChainIds?.forEach(chainId => \n            setNetworkName((ethers.providers.getNetwork(chainId).name)));\n        if (activatingConnector && activatingConnector === connector) {\n            setActivatingConnector(undefined)\n        }\n    }, [activatingConnector, connector])\n\n    async function setUnstakedAmount() {\n        const deb0xERC20Contract = Deb0xERC20(library, deb0xERC20Address)\n        if(account){\n            const balance = await deb0xERC20Contract.balanceOf(account)\n            setUserUnstakedAmount(ethers.utils.formatEther(balance))\n        }\n    }\n\n    async function checkENS(){\n \n        var name = await library.lookupAddress(account);\n        if(name !== null)\n        {   \n            setEnsName(name);\n        }\n    }\n\n    useEffect(() => {\n        setUnstakedAmount();\n    },[userUnstakedAmount])\n\n    function handleClick (event: React.MouseEvent<HTMLElement>) {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n    };\n\n    function handleChange(text: any, index: any) {\n        setSelectedIndex(index)\n        props.onChange(text)\n        if(index !== 0)\n            localStorage.removeItem('input')\n    }\n\n    function deleteContact(index: any) {\n        const contactsList = contacts.filter((_, i) => i !== index);\n        setContacts(contactsList);\n    }\n\n    const [display, setDisplay] = useState();\n\n    function getErrorMessage(error: string) {\n        errorMessage = error;\n        return errorMessage;\n    }\n\n    useEffect(() => {\n        setTimeout(() => {setNotificationState({})}, 2000)\n    }, [notificationState])\n\n    return (\n        <>\n            {/* <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                {!!errorMessage && \n                    <p className='alert alert-danger position-fixed' style={{ marginTop: '4rem', marginBottom: '0' }}>\n                        {getErrorMessage(errorMessage)}\n                    </p>\n                }\n            </div> */}\n            <SnackbarNotification state={notificationState} \n                setNotificationState={setNotificationState} />\n            <Box className=\"side-menu-box\" sx={{ display: 'flex' }}>\n                <Drawer variant=\"permanent\"\n                    anchor={dimensions.width > 768 ? 'left' : 'bottom'}\n                    className=\"side-menu\">\n                    <div className=\"image-container\">\n                        <div className=\"img\"></div>\n                    </div>\n                    { account  && \n                        <List className=\"menu-list\">\n                            {menuItems.map((text, index) => (\n                                <>\n                                    <ListItem button key={text} \n                                        selected={selectedIndex === index} \n                                        onClick={() => handleChange(text, index)}\n                                        className={`list-item ${index === 0 ? \"send-item\" : \"\"}` }>\n                                        \n                                        <ListItemIcon className=\"icon\" >\n                                            {index === 0 && <img src={add} />}\n                                            {index === 1 && <InboxIcon />} \n                                            {index === 2 && <img src={trophy} />}\n                                            {index === 3 && <SendIcon className=\"sent-icon-color\"/>}\n                                        </ListItemIcon>\n                                        <ListItemText className=\"text\" primary={text} />\n                                    </ListItem>\n                                </>\n                            ))}\n                        </List>\n                    }\n                    \n                    <div className=\"side-menu--bottom\">\n                        <>\n                            { account && \n                                <div className=\"contacts\">\n                                    <List>\n                                        {\n                                            contacts.map((contact: any, index: any) => (\n                                                    <>\n                                                    <ListItem button key={contact.name}>\n                                                        <ListItemText className=\"text\" primary={contact.name}/>\n                                                        <div className=\"col-4 buttons\">\n                                                                <IconButton size=\"small\"\n                                                                    onClick={() => {\n                                                                            navigator.clipboard.writeText(contact.address);\n                                                                            setNotificationState({\n                                                                                message: \"Address added to clipboard.\",\n                                                                                open: true,\n                                                                                severity: \"success\"\n                                                                            })\n                                                                        }}>\n                                                                    <ContentCopyIcon className=\"copy-icon\" fontSize=\"small\"/>\n                                                                </IconButton>\n                                                                <IconButton size=\"small\"\n                                                                    onClick={() => {\n                                                                        // setNotificationState({})\n                                                                        localStorage.setItem(\"input\", JSON.stringify(contact.address))\n                                                                        handleChange(\"Compose\", 0)\n                                                                    }}>\n                                                                    <SendIcon className=\"send-icon\" fontSize=\"small\"/>\n                                                                </IconButton>\n                                                                <IconButton size=\"small\"\n                                                                    onClick={() => {\n                                                                        deleteContact(index)\n                                                                    }}>\n                                                                    <DeleteIcon className=\"delete-icon\" fontSize=\"small\"/>\n                                                                </IconButton>\n                                                            </div>\n                                                    </ListItem>\n                                                    </>\n                                            ))\n                                        }\n                                    </List>\n                                    <>\n                                        <IconButton className='add-new-all' onClick={() => setShow(true)}>\n                                            <Add className=\"add-button\"/>\n                                            <p className='add-new mb-0'>Add new</p>\n                                        </IconButton>\n                                        {show ? \n                                            <ContactsSetter show={show} onClickOutside={() => setShow(false)}/> : \n                                            <></>\n                                        }    \n                                    </>\n                                </div>\n                            }\n                            <div className=\"content\">\n                                <a href=\"https://github.com/deb0x\" target=\"_blank\" className='logo-text-color'>\n                                <GitHubIcon  />\n                                </a>\n                                <a href=\"https://www.deb0x.org\" target=\"_blank\" className='logo-text-color'>\n                                    www.deb0x.org\n                                </a>\n                            </div>\n                        </>\n                    </div>\n                </Drawer>\n            </Box>\n        </>\n    );\n}","import React, { useState, useEffect } from 'react'\n\nexport default function useWindowSize() {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n      width: 0,\n      height: 0,\n    });\n    useEffect(() => {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight,\n        });\n      }\n      // Add event listener\n      window.addEventListener(\"resize\", handleResize);\n      // Call handler right away so state gets updated with initial window size\n      handleResize();\n      // Remove event listener on cleanup\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n    return windowSize;\n  }","import {useState, Fragment} from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport Typography from '@mui/material/Typography';\nimport Deb0x from \"../../ethereum/deb0x\"\nimport SnackbarNotification from './Snackbar';\nimport '../../componentsStyling/stepper.scss';\nconst deb0xAddress = \"0xb6057a156D1D5BAB08DAb590dC052B66051394e2\";\nconst steps = ['Provide public encryption key', 'Initialize Deb0x'];\n\nexport default function HorizontalLinearStepper(props: any) {\n    const { account, library } = useWeb3React()\n    const [encryptionKey, setEncryptionKey] = useState('')\n    const [activeStep, setActiveStep] = useState(0);\n    const [whichStepFailed, setStepFailed] = useState<number | undefined>(undefined)\n    const [loading, setLoading] = useState(false)\n    const [notificationState, setNotificationState] = useState({})\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    async function getEncryptionKey() {\n        setLoading(true)\n\n        library.provider.request({\n            method: 'eth_getEncryptionPublicKey',\n            params: [account],\n        })\n            .then((result: any) => {\n                setEncryptionKey(result);\n                handleNext()\n                setStepFailed(undefined)\n                setLoading(false)\n                \n            })\n            .catch((error: any) => {\n                setNotificationState({message: \"You rejected to provide the public encryption key.\", open: true,\n                severity:\"info\"})\n                setStepFailed(0)\n                setLoading(false)\n            });\n        \n    }\n\n    async function initializeDeb0x() {\n        setLoading(true)\n\n        const signer = await library.getSigner(0)\n\n        const deb0xContract = Deb0x(signer, deb0xAddress)\n\n        try {\n            const tx = await deb0xContract.setKey(encryptionKey)\n\n            tx.wait()\n            .then((result: any) => {\n                setNotificationState({message: \"Deb0x was succesfully initialized.\", open: true,\n                severity:\"success\"})\n                setLoading(false)\n                props.onDeboxInitialization(true)\n                \n            })\n            .catch((error: any) => {\n                setNotificationState({message: \"Deb0x couldn't be initialized!\", open: true,\n                severity:\"error\"})\n                setLoading(false)\n            })\n        } catch(error: any) {\n            setNotificationState({message: \"You rejected the transaction. Deb0x was not initialized.\", open: true,\n                severity:\"info\"})\n                setLoading(false)\n        }\n\n    }\n\n    return (\n        <>\n            <SnackbarNotification state={notificationState} setNotificationState={setNotificationState}/>\n            <Box className=\"stepper-box\" sx={{ width: '100%', maxWidth: 1080 }}>\n                <Stepper activeStep={activeStep} className=\"stepper\">\n                    {steps.map((label, index) => {\n                        const stepProps: { completed?: boolean } = {};\n                        const labelProps: {\n                            optional?: React.ReactNode;\n                            error?: boolean;\n                        } = {};\n                        if (whichStepFailed === index) {\n                            labelProps.optional = (\n                            <Typography variant=\"caption\" color=\"error\">\n                                {(activeStep === 0) ? \"User didn't provide encryption key\" : \"User rejected transaction\"}\n                            </Typography>\n                            );\n                            labelProps.error = true;\n                        }\n                        return (\n                            <Step key={label} {...stepProps}>\n                                <StepLabel {...labelProps} >{label} </StepLabel>\n                            </Step>\n                        );\n                    })}\n                </Stepper>\n                {<Fragment>\n                    <Box\n                        className={activeStep === steps.length - 1 ? 'right button-box' : 'left button-box'}\n                        sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n                        <LoadingButton className='init-btn' loading={loading} sx={{ marginLeft: 5 }} variant=\"contained\" onClick={\n                            (activeStep === 0) ? getEncryptionKey : initializeDeb0x\n                        }>\n                            {activeStep === steps.length - 1 ? 'Initialize' : 'Provide'}\n                        </LoadingButton>\n                    </Box>\n                </Fragment>\n                }\n            </Box>\n        </>\n    );\n}\n","export default function formatAccountName(account: string)\n{   \n    return `${account.substring(0, 5)}...${account.substring(account.length - 4)}`\n}","import { createContext } from \"react\";\n\ntype ReadedMessages = {\n    readed: string[],\n    setReaded: (_values: any) => void\n}\n\nexport const readedMessages: ReadedMessages = {\n    readed: JSON.parse(localStorage.getItem('messages') || '[]'),\n    setReaded: (_values: any) => {}\n};\n\nconst ReadedMessagesContext = createContext(readedMessages);\nexport default ReadedMessagesContext;","import { useState, useEffect } from \"react\";\nimport ReadedMessagesContext, { readedMessages } from './ReadedMessagesContext';\n\ntype Props = {\n    children: JSX.Element|JSX.Element[],\n};\n\nconst ReadedMessagesProvider = ( { children }: Props ) => {\n    const [readed, setReaded] = useState<any>(readedMessages.readed);\n  \n    const localStorage = window.localStorage;  \n  \n    useEffect(() => {\n        localStorage.setItem('messages', JSON.stringify(readed));\n    }, [readed, localStorage]);\n    \n    return (\n      <ReadedMessagesContext.Provider value={{ readed, setReaded }}>\n        <>{children}</>\n      </ReadedMessagesContext.Provider>\n    );\n  };\n  \n  export default ReadedMessagesProvider;","import { useState, useEffect, useContext, createContext } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport Deb0x from \"../../ethereum/deb0x\"\nimport { ethers } from \"ethers\";\nimport {\n    Tooltip, List, ListItem, ListItemText, ListItemButton, Typography, Box, \n    CircularProgress,\n    Button,\n    Modal\n} from '@mui/material';\nimport Stepper from './Stepper'\nimport IconButton from \"@mui/material/IconButton\";\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport Pagination from \"@mui/material/Pagination\";\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\nimport axios from 'axios';\nimport formatAccountName from \"../Common/AccountName\";\nimport \"../../componentsStyling/decrypt.scss\"\nimport { Add } from '@mui/icons-material';\nimport { Announcement } from '@mui/icons-material';\nimport ContactsSetter from '../ContactsSetter';\nimport lock from '../../photos/lock.svg';\nimport airplane from '../../photos/airplane.svg';\nimport users from '../../photos/users.svg';\nimport hand from '../../photos/hand.svg';\nimport avatar from '../../photos/icons/avatars/test-avatar-1.svg';\nimport ReadedMessagesContext from '../Contexts/ReadedMessagesContext';\nimport ReadedMessagesProvider from '../Contexts/ReadedMessagesProvider';\nimport { Encrypt } from './Encrypt';\n\nconst deb0xAddress = \"0xb6057a156D1D5BAB08DAb590dC052B66051394e2\";\n\nexport function Decrypt(props: any): any {\n    const { account, library } = useWeb3React()\n    const [loading, setLoading] = useState(true)\n    const [encryptionKeyInitialized, setEncryptionKeyInitialized] = \n        useState<boolean|undefined>(undefined);\n    const [decrypted, setDecrypted] = useState<any>();\n    const savedContacts = JSON.parse(localStorage.getItem('contacts') || 'null'); \n\n\n    useEffect(() => {\n        setLoading(true)\n        getPublicEncryptionKey()\n    }, [account]);\n\n    const getPublicEncryptionKey = async () => {\n        const deb0xContract = Deb0x(library, deb0xAddress)\n        const key = await deb0xContract.getKey(account)\n        const initialized = (key != '') ? true : false\n        setEncryptionKeyInitialized(initialized)\n    }\n\n    async function decrypt(encryptedMessage: any) {\n        try {\n            const decryptedMessage = await library.provider.request({\n                method: 'eth_decrypt',\n                params: [encryptedMessage, account],\n            });\n            return decryptedMessage\n        } catch (error) {\n            return undefined\n        }\n    }\n\n    async function fetchMessage(message: any) {\n        return await axios.get(`https://deb0x-test.infura-ipfs.io/ipfs/${message}`)\n    }\n\n    function Message(props: any) {\n        const encryptMessage = props.message.fetchedMessage.data\n        const [message, setMessage] =\n            useState(props.message.fetchedMessage.data)\n        const [ensName,setEnsName] = useState(\"\");\n        //const [sender, setSender] = useState(props.messsage.sender)\n        const [messageTime, setMessageTime] = useState(props.message.timestamp)\n        const [isDecrypted, setIsDecrypted] = useState(false);\n        const min = 1;\n        const max = 50;\n        const [randomImage] = useState<number>(Math.floor(Math.random() * (max - min + 1)) + min);\n        let [show, setShow] = useState(false);\n        const [isReaded, setIsReaded] = useState(false);\n        \n        const useMessages = () => useContext(ReadedMessagesContext)\n        const {readed, setReaded} = useMessages()!;\n\n        useEffect(()=>{\n            checkENS();\n        },[])\n\n        const addMessage = () => {\n            let messageList = JSON.parse(localStorage.getItem('messages') || 'null');\n            if(!messageList.includes(message)) {\n                readed.push(message);\n                setReaded([...readed]);\n            }\n        }\n\n        useEffect(() => {\n            localStorage.setItem('messages', JSON.stringify(readed));\n            checkMessageInLocalStorage();\n        })\n\n        const checkMessageInLocalStorage = () => {\n            let messageList = JSON.parse(localStorage.getItem('messages') || 'null');\n            messageList.map((element: any) => {\n                if (element === message)\n                    setIsReaded(true);\n            })\n        }\n\n        useEffect(()=>{\n            if(props.index !== props.previousIndex && isDecrypted===true){\n                hideMessage();\n            }\n\n        },[props.previousIndex])\n\n\n        async function checkENS() {\n            let name = await library.lookupAddress(props.message.sender);\n            if(name !== null) {   \n                setEnsName(name);\n            }\n        }\n\n        async function decryptMessage() {\n            const decryptedMessage = await decrypt(message)\n            \n            if(decryptedMessage) {\n                setIsDecrypted(false);\n                setMessage(decryptedMessage);\n                setIsDecrypted(true);\n                props.setPreviousIndex(props.index);\n            }\n\n            checkMessageInLocalStorage();\n        }\n\n        async function hideMessage() {\n            setMessage(encryptMessage);\n            setIsDecrypted(false);\n        }\n\n        function checkSenderInLocalStorage(sender: any) {\n            let user: any;\n\n            if (ensName !== \"\") {\n                user = ensName;\n            } else {\n                savedContacts.map((contact: any) => {\n                    if (sender == contact.address) {\n                        user = true;\n                    }\n                })\n            }\n\n           return user;\n        }\n\n\n        return (\n            <ReadedMessagesProvider>\n                <ListItem\n                    disablePadding \n                    key={props.index}    \n                    secondaryAction={ \n                        <IconButton className={`${\n                                (message !== props.message.fetchedMessage.data) ? \n                                \"list-item-btn\" : \"\"}`\n                            }  \n                            onClick={()=>{hideMessage()}}  \n                            edge=\"end\" \n                            aria-label=\"comments\">\n                            { (message !== props.message.fetchedMessage.data) ? \n                                <VisibilityOffIcon className='visibility-icon' /> : null\n                            }\n                        </IconButton>  \n                    }\n                    className={`messages-list-item card ${isReaded ? \"read\" : \"unread\"}` }>\n                    <ListItemButton \n                        className={`list-item-button ${isDecrypted ? \"active\" : \"\"}` }\n                        onClick={() => {\n                            if(message === props.message.fetchedMessage.data) {\n                                decryptMessage()\n                            }\n                            addMessage();\n\n                        }}>\n                        <div>\n                            <img width=\"58px\" height=\"58px\" src={require(`../../photos/icons/avatars/animal-${randomImage}.svg`).default} alt=\"avatar\"/>\n                        </div>\n                        <ListItemText primary={\n                            <>\n                                <div className=\"message-left\">\n                                    <div className=\"message-heading\">\n                                        <p>From: \n                                            {\n                                                checkSenderInLocalStorage(props.message.sender) ?\n                                                savedContacts.filter((contact: any) => props.message.sender == contact.address)\n                                                    .map((filteredPerson: any) => (\n                                                        filteredPerson.name\n                                                    )) :\n                                                    formatAccountName(\n                                                        props.message.sender\n                                                    )\n                                            }\n                                        </p>\n                                        <p className=\"time-stamp\">\n                                            {messageTime}\n                                        </p>\n                                    </div>\n                                    <div className=\"message-container\">\n                                        <p className=\"message message-overflow\"\n                                            dangerouslySetInnerHTML={{ __html: message }} />\n                                        <Announcement className=\"new-message-icon\" />\n                                    </div>\n                                </div>\n                                \n                            </> \n                        }/>\n                    </ListItemButton>\n                    {isDecrypted ? \n                        <div className=\"message-right\">\n                            <div className=\"message-right--container\">\n                                <div className=\"message-heading\">\n                                    <div className=\"address\">\n                                        <p>From: \n                                            <strong>\n                                            {\n                                                checkSenderInLocalStorage(props.message.sender) ?\n                                                    savedContacts.filter((contact: any) => props.message.sender == contact.address)\n                                                        .map((filteredPerson: any) => (\n                                                            filteredPerson.name\n                                                        )) :\n                                                        formatAccountName(\n                                                            props.message.sender\n                                                        )\n                                            }\n                                            </strong>\n                                        </p>\n                                        <>\n                                            {!checkSenderInLocalStorage(props.message.sender) ? \n                                                <IconButton onClick={() => setShow(true)}>\n                                                    <Add />\n                                                </IconButton> :\n                                                <></>\n                                            }\n                                            \n                                            <ContactsSetter show={show} props={props.message.sender} \n                                                onClickOutside={() => setShow(false)}/>\n                                        </>\n                                    </div>\n                                    <p className=\"time-stamp\">\n                                        <small>\n                                            {messageTime}\n                                        </small>\n                                    </p>\n                                </div>\n                                <p className=\"message\" \n                                    dangerouslySetInnerHTML={{ __html: message }} />\n                                <Encrypt props={props.message.sender}/>\n                            </div>\n                        </div> : \n                        <></> \n                    }\n                </ListItem>\n            </ReadedMessagesProvider>\n        )\n    }\n\n    function GetMessages() {\n        const [fetchedMessages, setFetchedMessages] = useState<any>([])\n        const [sortedMessages, setSortedMessages] = useState<any>([])\n        const [previousIndex, setPreviousIndex] = useState<number>();\n\n        useEffect(() => {\n            processMessages()\n        }, []);\n\n\n\n        async function processMessages() {\n            const deb0xContract = Deb0x(library, deb0xAddress)\n            const senderAddresses = \n                await deb0xContract.fetchMessageSenders(account)\n            const cidsPromises = \n                senderAddresses.map(async function(sender:any) {\n                    return { \n                        cids: await deb0xContract.fetchMessages(account, sender),\n                        sender: sender\n                    }\n                })\n\n            const cids = await Promise.all(cidsPromises)\n\n            const encryptedMessagesPromisesArray = \n                cids.map(async function(cidArray: any) {\n                    const encryptedMessagesPromises = \n                        cidArray.cids.map(async function (cid: any) {\n                            const unixTimestamp = cid.blockTimestamp.toString()\n\n                            const milliseconds = unixTimestamp * 1000 \n\n                            const dateObject = new Date(milliseconds)\n\n                            const humanDateFormat = dateObject.toLocaleString()\n                            return { \n                                fetchedMessage: await fetchMessage(cid.cid),\n                                sender: cidArray.sender,\n                                timestamp: humanDateFormat\n                            }\n                        })\n                    const promise = await Promise.all(encryptedMessagesPromises)\n\n                    return promise\n                })\n\n            const encryptedMessages = await Promise.all(encryptedMessagesPromisesArray)\n            const sortedEncryptedMessages = encryptedMessages?.flat().reverse()\n            setFetchedMessages(encryptedMessages.flat())\n            setSortedMessages(sortedEncryptedMessages)\n            setLoading(false)\n\n        }\n\n        if(!loading) {\n            if (sortedMessages.length === 0) {\n                return (\n                    <div className='clouds'>\n                        <div className=\"cloudOne\">\n                            <img src={require(`../../photos/icons/clouds/cloud-2.svg`).default} alt=\"cloud-1\" />\n                        </div>\n                        <div className=\"cloudTwo\">\n                            <img src={require(`../../photos/icons/clouds/cloud-1.svg`).default} alt=\"cloud-2\" />\n                        </div>\n                        <div className=\"cloudThree\">\n                            <img src={require(`../../photos/icons/clouds/cloud-3.svg`).default} alt=\"cloud-3\" />\n                        </div>\n                        <div className=\"cloudText\">\n                            Cloudy with a chance of messages\n                        </div>\n                    </div>\n                )\n            } else {\n                return (\n                    <div className=\"row messages-list\">\n                        <List className=\"col-md-4 col-sm-12\">\n                            <Box className=\"pagination\" sx={{display:\"flex\"}}>\n                                <Pagination count={1} />\n                                <IconButton size=\"large\" onClick={()=> setLoading(true) }>\n                                    <RefreshIcon fontSize=\"large\"/>\n                                </IconButton>\n                            </Box>\n                            {sortedMessages.map((message: any, i: any) => {\n                                return (\n                                    <Message message={message} index={i} \n                                        key={i} previousIndex={previousIndex} \n                                        setPreviousIndex={setPreviousIndex} />\n                                )\n                            })}\n                        </List>\n                        <Box className=\"corner-image col-md-8\">\n                            <div>\n                                \n                            </div>\n                        </Box>\n                    </div>\n                )\n            }\n        } else {\n            return (\n                <div className=\"spinner\">\n                    <CircularProgress/>\n                </div>\n            )\n        }\n    }\n    \n    if (encryptionKeyInitialized === true) {\n        return (\n            <div className=\"content-box\">\n                <GetMessages />\n            </div>\n        )\n    } else if (encryptionKeyInitialized === false) {\n        return (\n            <Stepper onDeboxInitialization={getPublicEncryptionKey}/>\n        )\n    } else {\n        return(\n            <div className=\"spinner\">\n                <CircularProgress/>\n            </div>\n        )\n    }\n}","export default __webpack_public_path__ + \"static/media/token.0bd78e9a.svg\";","export default __webpack_public_path__ + \"static/media/coin-bag-solid--light.d9344235.svg\";","export default __webpack_public_path__ + \"static/media/coin-bag-solid--dark.b9b74873.svg\";","export default __webpack_public_path__ + \"static/media/wallet--light.60fbc32b.svg\";","export default __webpack_public_path__ + \"static/media/wallet--dark.307c5384.svg\";","export default __webpack_public_path__ + \"static/media/trophyRewards.b26a8588.svg\";","import { useState, useEffect } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport {\n    Card, CardActions, CardContent, Button, Grid,\n    Typography, TextField, Divider,Box\n} from '@mui/material';\n\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport Deb0x from \"../../ethereum/deb0x\"\nimport Deb0xERC20 from \"../../ethereum/deb0xerc20\"\nimport SnackbarNotification from './Snackbar';\nimport { ethers } from \"ethers\";\nimport \"../../componentsStyling/stake.scss\";\nimport token from \"../../photos/icons/token.svg\"\nimport coinBagLight from \"../../photos/icons/coin-bag-solid--light.svg\";\nimport coinBagDark from \"../../photos/icons/coin-bag-solid--dark.svg\";\nimport walletLight from \"../../photos/icons/wallet--light.svg\";\nimport walletDark from \"../../photos/icons/wallet--dark.svg\";\nimport trophyRewards from \"../../photos/icons/trophyRewards.svg\";\n\nconst deb0xAddress = \"0xb6057a156D1D5BAB08DAb590dC052B66051394e2\"\nconst deb0xERC20Address = \"0x98583dd5310725eBDFd1123CA1FDE765Ef6eAFb8\"\n\nexport function Stake(props: any): any {\n\n    const { account, library } = useWeb3React()\n    const [notificationState, setNotificationState] = useState({})\n\n    function FeesPanel() {\n        const [feesUnclaimed, setFeesUnclaimed] = useState(\"\")\n        const [loading, setLoading] = useState(false)\n\n        useEffect(() => {\n            feesAccrued()\n        }, [feesUnclaimed]);\n\n        async function feesAccrued() {\n            const deb0xContract = await Deb0x(library, deb0xAddress)\n\n            const unclaimedRewards = await deb0xContract.getUnclaimedFees(account);\n\n            setFeesUnclaimed(ethers.utils.formatEther(unclaimedRewards))\n        }\n\n        async function claimFees() {\n            setLoading(true)\n\n            const signer = await library.getSigner(0)\n\n            const deb0xContract = Deb0x(signer, deb0xAddress)\n\n            try {\n                const tx = await deb0xContract.claimFees()\n\n                tx.wait()\n                    .then((result: any) => {\n                        setNotificationState({\n                            message: \"You succesfully claimed your fees.\", open: true,\n                            severity: \"success\"\n                        })\n                        //setLoading(false)\n\n                    })\n                    .catch((error: any) => {\n                        setNotificationState({\n                            message: \"Fees couldn't be claimed!\", open: true,\n                            severity: \"error\"\n                        })\n                        setLoading(false)\n                    })\n            } catch (error: any) {\n                setNotificationState({\n                    message: \"You rejected the transaction. Your fees haven't been claimed.\", open: true,\n                    severity: \"info\"\n                })\n            }\n\n        }\n\n        return (\n            <>\n            <Card variant=\"outlined\" className=\"card-container\">\n                <CardContent className=\"row\">\n                    <div className=\"col-12 col-md-6 mb-2\">\n                        <Typography variant=\"h4\" component=\"div\" className=\"rewards mb-3\">\n                            FEES\n                        </Typography>\n                        <Typography >\n                            Your unclaimed fees:\n                        </Typography>\n                        <Typography variant=\"h6\" className=\"mb-3\">\n                            <strong>{feesUnclaimed}</strong>\n                        </Typography>\n                    </div>\n                    <div className='col-12 col-md-6 d-flex justify-content-end align-items-start'>\n                        <img src={trophyRewards} alt=\"trophyRewards\" className=\"p-3\"/>\n                    </div>\n                </CardContent>\n                <CardActions className='button-container'>\n                    <LoadingButton className=\"collect-btn\" disabled={feesUnclaimed==\"0.0\"} loading={loading} variant=\"contained\" onClick={claimFees}>Collect</LoadingButton>\n                </CardActions>\n            </Card>\n            </>\n        )\n    }\n\n    function RewardsPanel() {\n        \n\n        const [rewardsUnclaimed, setRewardsUnclaimed] = useState(\"\")\n        const [feeSharePercentage, setFeeSharePercentage] = useState(\"\")\n        const [loading, setLoading] = useState(false)\n\n        useEffect(() => {\n            rewardsAccrued()\n        }, [rewardsUnclaimed]);\n\n        useEffect(() => {\n            feeShare()\n        }, [feeSharePercentage]);\n\n        async function rewardsAccrued() {\n            const deb0xContract = await Deb0x(library, deb0xAddress)\n\n            const unclaimedRewards = await deb0xContract.getUnclaimedRewards(account);\n\n            setRewardsUnclaimed(ethers.utils.formatEther(unclaimedRewards))\n        }\n\n        async function feeShare() {\n            const deb0xContract = await Deb0x(library, deb0xAddress)\n\n            const unclaimedRewards = await deb0xContract.getUnclaimedRewards(account);\n\n            const userWithdrawableStake = await deb0xContract.getUserWithdrawableStake(account)\n            \n            let balance = parseFloat((ethers.utils.formatEther(unclaimedRewards.add(userWithdrawableStake))))\n            \n            const currentCycle = await deb0xContract.currentStartedCycle()\n\n            const totalSupply = await deb0xContract.summedCycleStakes(currentCycle)\n\n            const feeShare = balance * 100 / totalSupply\n            setFeeSharePercentage(((Math.round(feeShare * 100) / 100).toFixed(2)).toString() + \"%\")\n        }\n\n        async function claimRewards() {\n            setLoading(true)\n\n            const signer = await library.getSigner(0)\n\n            const deb0xContract = Deb0x(signer, deb0xAddress)\n\n            try {\n                const tx = await deb0xContract.claimRewards()\n\n                tx.wait()\n                    .then((result: any) => {\n                        setNotificationState({\n                            message: \"You succesfully claimed your rewards.\", open: true,\n                            severity: \"success\"\n                        })\n                        //setLoading(false)\n\n                    })\n                    .catch((error: any) => {\n                        setNotificationState({\n                            message: \"Rewards couldn't be claimed!\", open: true,\n                            severity: \"error\"\n                        })\n                        setLoading(false)\n                    })\n            } catch (error: any) {\n                setNotificationState({\n                    message: \"You rejected the transaction. Your rewards haven't been claimed.\", open: true,\n                    severity: \"info\"\n                })\n            }\n\n\n        }\n\n        return (\n            <>\n            <Card variant=\"outlined\" className=\"card-container\">\n                <CardContent className=\"row\">\n                    <div className=\"col-12 col-md-6 mb-2\">\n                        <Typography variant=\"h4\" component=\"div\" className=\"rewards mb-3\">\n                            REWARDS\n                        </Typography>\n                        <Typography >\n                            Your unclaimed rewards:\n                        </Typography>\n                        <Typography variant=\"h6\" className=\"mb-3\">\n                            <strong>{rewardsUnclaimed}</strong>\n                        </Typography>\n                        <Typography>\n                            Your share from fees:\n                        </Typography>\n                        <Typography variant=\"h6\" className=\"mb-3\">\n                            <strong>{feeSharePercentage}</strong>\n                        </Typography>\n                    </div>\n                    <div className='col-12 col-md-6 d-flex justify-content-end align-items-start'>\n                        <img src={trophyRewards} alt=\"trophyRewards\" className=\"p-3\"/>\n                    </div>\n                </CardContent>\n                <CardActions className='button-container'>\n                    <LoadingButton className=\"collect-btn\" loading={loading} variant=\"contained\" onClick={claimRewards}>Collect</LoadingButton>\n                </CardActions>\n            </Card>\n            </>\n        )\n    }\n\n\n\n    function StakeUnstake() {\n        const [alignment, setAlignment] = useState(\"stake\");\n\n        const [userStakedAmount, setUserStakedAmount] = useState(\"\")\n        const [userUnstakedAmount, setUserUnstakedAmount] = useState(\"\")\n        const [totalStaked, setTotalStaked] = useState(\"\")\n        const [amountToUnstake, setAmountToUnstake] = useState(\"\")\n        const [amountToStake, setAmountToStake] = useState(\"\")\n        const [loading, setLoading] = useState(false)\n        const [approved, setApproved] = useState<Boolean | null>(false)\n        \n        const handleChange = (\n            event: React.MouseEvent<HTMLElement>,\n            newAlignment: string,\n        ) => {\n            setAlignment(newAlignment);\n        };\n        \n        const [theme, setTheme] = useState(localStorage.getItem('globalTheme'));\n        useEffect(() => {\n            setTheme(localStorage.getItem('globalTheme'));\n        });\n\n        useEffect(() => {\n            setStakedAmount()\n        }, [userStakedAmount]);\n\n        useEffect(() => {\n            totalAmountStaked()\n        }, [totalStaked]);\n\n        useEffect(() => {\n            setUnstakedAmount()\n        }, [userUnstakedAmount]);\n\n        useEffect(() => {\n            setApproval()\n        }, [approved]);\n\n        async function setStakedAmount() {\n\n            const deb0xContract = await Deb0x(library, deb0xAddress)\n\n            const balance = await deb0xContract.getUserWithdrawableStake(account)\n\n            setUserStakedAmount(ethers.utils.formatEther(balance))\n        }\n\n        async function setUnstakedAmount() {\n            const deb0xERC20Contract = await Deb0xERC20(library, deb0xERC20Address)\n\n            const balance = await deb0xERC20Contract.balanceOf(account)\n\n            setUserUnstakedAmount(parseFloat(ethers.utils.formatEther(balance)).toFixed(2))\n        }\n\n        async function setApproval() {\n            const deb0xERC20Contract = await Deb0xERC20(library, deb0xERC20Address)\n\n            const allowance = await deb0xERC20Contract.allowance(account, deb0xAddress)\n\n            allowance > 0 ? setApproved(true) : setApproved(false)\n        }\n\n        async function totalAmountStaked() {\n\n            const deb0xContract = await Deb0x(library, deb0xAddress)\n\n            const currentCycle = await deb0xContract.currentStartedCycle()\n\n            const totalSupply = await deb0xContract.summedCycleStakes(currentCycle)\n\n            setTotalStaked(ethers.utils.formatEther(totalSupply))\n        }\n\n        async function approveStaking() {\n            setLoading(true)\n\n            const signer = await library.getSigner(0)\n\n            const deb0xERC20Contract = await Deb0xERC20(signer, deb0xERC20Address)\n\n            try {\n                const tx = await deb0xERC20Contract.approve(deb0xAddress, ethers.utils.parseEther(\"1000000\"))\n\n                tx.wait()\n                    .then((result: any) => {\n                        setNotificationState({\n                            message: \"Your succesfully approved contract for staking.\", open: true,\n                            severity: \"success\"\n                        })\n                        setLoading(false)\n\n                    })\n                    .catch((error: any) => {\n                        setNotificationState({\n                            message: \"Contract couldn't be approved for staking!\", open: true,\n                            severity: \"error\"\n                        })\n                        setLoading(false)\n                    })\n            } catch (error) {\n                setNotificationState({\n                    message: \"You rejected the transaction. Contract hasn't been approved for staking.\", open: true,\n                    severity: \"info\"\n                })\n                setLoading(false)\n            }\n        }\n\n        async function unstake() {\n            setLoading(true)\n\n            const signer = await library.getSigner(0)\n\n            const deb0xContract = Deb0x(signer, deb0xAddress)\n\n            try {\n                const tx = await deb0xContract.unstake(ethers.utils.parseEther(amountToUnstake.toString()))\n\n                tx.wait()\n                    .then((result: any) => {\n                        setNotificationState({\n                            message: \"Your tokens were succesfully unstaked.\", open: true,\n                            severity: \"success\"\n                        })\n                        setLoading(false)\n\n                    })\n                    .catch((error: any) => {\n                        setLoading(false)\n                        setNotificationState({\n                            message: \"Your tokens couldn't be unstaked!\", open: true,\n                            severity: \"error\"\n                        })\n\n                    })\n\n            } catch (error: any) {\n                setNotificationState({\n                    message: \"You rejected the transaction. Your tokens haven't been unstaked.\", open: true,\n                    severity: \"info\"\n                })\n                setLoading(false)\n            }\n        }\n\n        async function stake() {\n            setLoading(true)\n\n            const signer = await library.getSigner(0)\n\n            const deb0xContract = Deb0x(signer, deb0xAddress)\n\n            try {\n                const tx = await deb0xContract.stakeDBX(ethers.utils.parseEther(amountToStake.toString()))\n\n                tx.wait()\n                    .then((result: any) => {\n                        setNotificationState({\n                            message: \"Your tokens were succesfully staked.\", open: true,\n                            severity: \"success\"\n                        })\n                        //setLoading(false)\n\n                    })\n                    .catch((error: any) => {\n                        setNotificationState({\n                            message: \"Your tokens couldn't be staked!\", open: true,\n                            severity: \"error\"\n                        })\n                        setLoading(false)\n                    })\n\n            } catch (error: any) {\n                setNotificationState({\n                    message: \"You rejected the transaction. Your tokens haven't been staked.\", open: true,\n                    severity: \"info\"\n                })\n                setLoading(false)\n            }\n        }\n\n        return (\n            <Card variant = \"outlined\" className=\"card-container\">\n                <ToggleButtonGroup\n                    color=\"primary\"\n                    value={alignment}\n                    exclusive\n                    onChange={handleChange}\n                    className=\"tab-container\"\n                >\n                    <ToggleButton className=\"tab-btn\" value=\"stake\">Stake</ToggleButton>\n                    <ToggleButton className=\"tab-btn\" value=\"unstake\">Unstake</ToggleButton>\n\n                </ToggleButtonGroup>\n              \n            {\n                alignment === \"stake\" ?\n                \n                <>\n                <CardContent className=\"row\">\n                    <div className=\"col-6 p-1\">\n                        <img className=\"display-element\" src={theme === \"classic\" ? coinBagDark : coinBagLight} alt=\"coinbag\" />\n                        <Typography className=\"d-flex justify-content-center p-1\">\n                            Your staked amount:\n                        </Typography>\n                        <Typography variant=\"h6\" className=\"d-flex justify-content-center p-1\">\n                            <strong>{userStakedAmount} DBX</strong>\n                        </Typography>\n                    </div>\n                    <div className=\"col-6 p-1\">\n                        <img className=\"display-element\" src={theme === \"classic\" ? walletDark : walletLight} alt=\"coinbag\" />\n                        <Typography className=\"d-flex justify-content-center p-1\">\n                            Your tokens in wallet:\n                        </Typography>\n                        <Typography variant=\"h6\" className=\"d-flex justify-content-center p-1\">\n                            <strong>{userUnstakedAmount} DBX</strong>\n                        </Typography>\n                    </div>\n                    <Divider className=\"divider-pink \" />\n                    {approved && <Grid className=\"amount-row\" container spacing={2}>\n                        <Grid item>\n                            <TextField id=\"outlined-basic\"\n                                label=\"Amount to stake\"\n                                variant=\"outlined\"\n                                type=\"number\"\n                                value={amountToStake}\n                                onChange={e => setAmountToStake(e.target.value)} />\n                        </Grid>\n                        <Grid className=\"max-btn-container\" item>\n                            <Button className=\"max-btn\" \n                                size=\"small\" variant=\"contained\" color=\"error\" \n                               onClick = {()=>setAmountToStake(userUnstakedAmount)  }>\n                                max\n                            </Button>\n                        </Grid>\n                    </Grid>}\n                </CardContent>\n                <CardActions>\n                    {approved && <LoadingButton disabled={!amountToStake} className=\"submit-btn \" loading={loading} variant=\"contained\" onClick={stake}>Stake</LoadingButton>}\n                    {!approved && <LoadingButton className=\"submit-btn\" loading={loading} variant=\"contained\" onClick={approveStaking}>Approve Staking</LoadingButton>}\n                </CardActions>\n                </>\n                : \n\n                <>\n                <CardContent>\n                    <div className=\"row\">\n                        <div className=\"col-6 p-1\">\n                            <img className=\"display-element\" src={theme === \"classic\" ? coinBagDark : coinBagLight} alt=\"coinbag\" />\n                            <Typography className=\"d-flex justify-content-center p-1\">\n                                Your staked amount:\n                            </Typography>\n                            <Typography variant=\"h6\" className=\"d-flex justify-content-center p-1\">\n                                <strong>{userStakedAmount} DBX</strong>\n                            </Typography>\n                        </div>\n                        <div className=\"col-6 p-1\">\n                            <img className=\"display-element\" src={theme === \"classic\" ? walletDark : walletLight} alt=\"coinbag\" />\n                            <Typography className=\"d-flex justify-content-center p-1\">\n                                Your tokens in wallet:\n                            </Typography>\n                            <Typography variant=\"h6\" className=\"d-flex justify-content-center p-1\">\n                                <strong>{userUnstakedAmount} DBX</strong>\n                            </Typography>\n                        </div>\n                    </div>\n                  \n\n                    <Grid className=\"amount-row\" container spacing={2}>\n                        <Grid item>\n                            <TextField value={amountToUnstake}\n                                id=\"outlined-basic\"\n                                className=\"max-field\"\n                                label=\"Amount to unstake\"\n                                variant=\"outlined\"\n                                onChange={e => setAmountToUnstake(e.target.value)}\n                                type=\"number\" />\n                        </Grid>\n                        <Grid className=\"max-btn-container\" item>\n                            <Button className=\"max-btn\"\n                                size=\"small\" variant=\"contained\" color=\"error\" \n                                onClick = {()=>setAmountToUnstake(userStakedAmount)  }>\n                                max\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n                <CardActions>\n                    <LoadingButton className=\"submit-btn\" disabled={!amountToUnstake} loading={loading} variant=\"contained\" onClick={unstake}>Unstake</LoadingButton>\n                </CardActions>\n                </>\n            }\n\n            </Card>\n\n        )\n    }\n\n    function TotalStaked() {\n        const [totalStaked, setTotalStaked] = useState(\"\")\n        useEffect(() => {\n            totalAmountStaked()\n        }, [totalStaked]);\n    \n        async function totalAmountStaked() {\n    \n            const deb0xContract = await Deb0x(library, deb0xAddress)\n\n            const currentCycle= await deb0xContract.currentStartedCycle()\n\n            const currentStake = await deb0xContract.summedCycleStakes(currentCycle)\n    \n            // setTotalStaked(ethers.utils.formatEther(currentStake))\n\n            setTotalStaked(parseFloat(ethers.utils.formatEther(currentStake)).toFixed(2))\n\n        }\n\n        return (\n            <Card className=\"heading-card\">\n                <CardContent>\n                    <Typography variant=\"h5\">\n                        Total tokens staked:\n                    </Typography>\n                    <Typography variant=\"h4\">\n                        <img className=\"logo\" src={token} />\n                        {totalStaked} DBX\n                    </Typography>\n                </CardContent>\n            </Card>\n        )\n    }\n\n    return (\n        <>\n            <SnackbarNotification state={notificationState} setNotificationState={setNotificationState} />\n            <Box className=\"container\">\n                <div className=\"cards-grid\">\n                    <div className='row'>\n                        <Grid item className=\"col col-md-6 \">\n                            <TotalStaked/>                        \n                            <RewardsPanel />\n                        </Grid>\n                        <Grid item className=\"col col-md-6\">\n                            <StakeUnstake/>\n                            <FeesPanel />\n                        </Grid>\n                    </div>\n                </div>\n            </Box>\n        </>\n    )\n}","import { useState, useEffect } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport Deb0x from \"../../ethereum/deb0x\"\nimport {\n    List, ListItem, Chip,\n    ListItemText, ListItemButton, \n    Box, CircularProgress, Stack\n} from '@mui/material';\nimport Stepper from './Stepper'\nimport IconButton from \"@mui/material/IconButton\";\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport Pagination from \"@mui/material/Pagination\";\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport '../../componentsStyling/decrypt.scss';\nimport formatAccountName from '../Common/AccountName';\nimport cloud1 from '../../photos/icons/clouds/cloud-1.svg';\nimport cloud2 from '../../photos/icons/clouds/cloud-2.svg';\nimport cloud3 from '../../photos/icons/clouds/cloud-3.svg';\n\nconst axios = require('axios')\nconst deb0xAddress = \"0xb6057a156D1D5BAB08DAb590dC052B66051394e2\"\n\nexport function Sent(props: any): any {\n    const { account, library } = useWeb3React()\n    const [loading, setLoading] = useState(true)\n    const [encryptionKeyInitialized, setEncryptionKeyInitialized] = useState<boolean|undefined>(undefined)\n    const [messageSent, setmessageSent] = useState(false);\n\n    useEffect(() => {\n        setLoading(true)\n        getPublicEncryptionKey()\n    }, [account]);\n\n    const getPublicEncryptionKey = async () => {\n        const deb0xContract = Deb0x(library, deb0xAddress)\n        const key = await deb0xContract.getKey(account)\n        const initialized = (key != '') ? true : false\n        setEncryptionKeyInitialized(initialized)\n    }\n\n    async function decrypt(encryptedMessage: any) {\n        try {\n            const decryptedMessage = await library.provider.request({\n                method: 'eth_decrypt',\n                params: [encryptedMessage, account],\n            });\n            return decryptedMessage\n        } catch (error) {\n            return undefined\n        }\n    }\n\n    async function fetchMessage(message: any) {\n        return await axios.get(`https://deb0x-test.infura-ipfs.io/ipfs/${message}`)\n    }\n\n    function Message(props: any) {\n        const encryptMessage = props.message.fetchedMessage.data\n        const [message, setMessage] = useState(props.message.fetchedMessage.data)\n        const [recipients, setRecipients] = useState<string[]>([]);\n        //const [sender, setSender] = useState(props.messsage.sender)\n        const [messageTime,setMessageTime] = useState(props.message.timestamp)\n        const [ensName,setEnsName] = useState(\"\");\n        const [isDecrypted, setIsDecrypted] = useState(false);\n        const savedContacts = JSON.parse(localStorage.getItem('contacts') || 'null'); \n        const min = 1;\n        const max = 50;\n        const [randomImage] = useState<number>(Math.floor(Math.random() * (max - min + 1)) + min);\n        \n        useEffect(()=> {\n            checkENS();\n        },[])\n\n        useEffect(()=>{\n            if(props.index !== props.previousIndex && isDecrypted===true){\n                hideMessage();\n            }\n\n        },[props.previousIndex])\n\n        function onlyUnique(value: any, index: any, self: string | any[]) {\n            return self.indexOf(value) === index;\n        }\n\n        async function checkENS() {\n            let recipientsTemp:any = []\n            const recipients = props.message.recipients.filter((recipient:any) => recipient != account);\n\n            var recipientsFiltered = recipients.filter(onlyUnique);\n\n            for(let recipient of recipientsFiltered) {\n                let name = await library.lookupAddress(recipient);\n                if(name !== null)\n                {   \n                    recipientsTemp = [...recipientsTemp, name];\n                } else {\n                    recipientsTemp = [...recipientsTemp, recipient];\n                }\n            }\n\n            setRecipients(recipientsTemp)\n        }\n\n        async function decryptMessage() {\n            const decryptedMessage = await decrypt(message)\n            if(decryptedMessage) {\n                setIsDecrypted(false);\n                setMessage(decryptedMessage);\n                setIsDecrypted(true);\n                props.setPreviousIndex(props.index);\n            }\n        }\n\n        async function hideMessage(){\n            setMessage(encryptMessage);\n            setIsDecrypted(false);\n        }\n\n        function checkSenderInLocalStorage(sender: any) {\n            let user: any;\n\n            if (ensName !== \"\") {\n                user = ensName;\n            } else {\n                savedContacts.map((contact: any) => {\n                    if (sender == contact.address) {\n                        user = true;\n                    }\n                })\n            }\n\n           return user;\n        }\n\n        function handleDecryptMessage() {\n            if(message === props.message.fetchedMessage.data) {\n                decryptMessage()\n            }\n        }\n    \n        return (\n            <ListItem disablePadding key={props.index}\n                secondaryAction={ \n                    <IconButton \n                        className={`${(message != props.message.fetchedMessage.data) ? \"list-item-btn\" : \"\"}`}  \n                        onClick={()=> hideMessage() }  edge=\"end\" aria-label=\"comments\">\n                        { (message != props.message.fetchedMessage.data) ? <VisibilityOffIcon  />: null}\n                    </IconButton>  \n                }\n                className=\"messages-list-item\"\n            >\n                <ListItemButton className={`list-item-button ${isDecrypted ? \"active\" : \"\"}` }\n                    onClick={() => handleDecryptMessage()}>\n                    <div>\n                        <img width=\"58px\" height=\"58px\" src={require(`../../photos/icons/avatars/animal-${randomImage}.svg`).default} alt=\"avatar\"/>\n                    </div>\n                    <ListItemText primary={\n                        <>\n                            <div className=\"message-left\">\n                                <div className=\"message-heading\">\n                                    <div className=\"d-flex align-items-center\">\n                                        <small>To: </small>\n                                        <div className=\"message-overflow\">\n                                            {\n                                                recipients.length > 0 ?\n                                                recipients.map((recipient: any) => {\n                                                    return (\n                                                        <span\n                                                            key={recipient}>\n                                                                {\n                                                                checkSenderInLocalStorage(recipient) ?\n                                                                    savedContacts.filter((contact: any) => recipient == contact.address)\n                                                                        .map((filteredPerson: any) => (\n                                                                            filteredPerson.name\n                                                                        )) :\n                                                                        formatAccountName(recipient)\n                                                                }\n                                                                {\n                                                                    recipients.length > 1 ? <>, </> : <></>\n                                                                }\n                                                        </span>\n                                                    )\n                                                }) :\n                                                account\n                                            }\n                                        </div>\n                                        {\n                                            recipients.length > 1 ? <span>({recipients.length})</span> : <></>\n                                        }\n                                    </div>\n                                    <p className=\"time-stamp\">\n                                        <small>\n                                            {messageTime}\n                                        </small>\n                                    </p>\n                                </div>\n                                <p className={`message message-overflow\n                                        ${message === props.message.fetchedMessage.data ? \n                                        \"message-overflow\" : \"\"}` }\n                                    dangerouslySetInnerHTML={{ __html: message }}>\n                                </p>\n                            </div>\n                        </>\n                    }/>\n                </ListItemButton>\n                {isDecrypted ? \n                    <div className=\"message-right\">\n                        <div className=\"message-right--container\">\n                            <div className=\"message-heading\">\n                                <div className=\"address\">\n                                    <p>To:\n                                        <strong>\n                                        {\n                                            recipients.map((recipient: any) => {\n                                                return (\n                                                    <span\n                                                        key={recipient}>\n                                                            {\n                                                            checkSenderInLocalStorage(recipient) ?\n                                                                savedContacts.filter((contact: any) => recipient == contact.address)\n                                                                    .map((filteredPerson: any) => (\n                                                                        filteredPerson.name\n                                                                    )) :\n                                                                    recipient\n                                                            }\n                                                                                                                        {\n                                                                    recipients.length > 1 ? <> | </> : <></>\n                                                                }\n                                                    </span>\n                                                )\n                                            }) \n                                        }\n                                        </strong>\n                                    </p>\n                                </div>\n                                <p className=\"time-stamp\">\n                                    <small>\n                                        {messageTime}\n                                    </small>\n                                </p>\n                            </div>\n                            <p className={`message ${message === props.message.fetchedMessage.data ? \"message-overflow\" : \"\"}` }\n                                dangerouslySetInnerHTML={{ __html: message }}>\n                            </p>\n                        </div>\n                    </div> : \n                    <></>\n                }\n            </ListItem>\n            )\n    }\n\n    function GetMessages() {\n        const [fetchedMessages, setFetchedMessages] = useState<any>([]);\n        const [sortedMessages, setSortedMessages] = useState<any>([]);\n        const [previousIndex,setPreviousIndex] = useState<number>();\n\n        useEffect(() => {\n            processMessages()\n        }, []);\n\n        async function processMessages() {\n            const deb0xContract = Deb0x(library, deb0xAddress)\n            \n            const sentMessages = await deb0xContract.fetchSentMessages(account)  \n\n            const sentMessagesRetrieved = sentMessages.map(async function (item: any) {\n                const fetchedMessageContent = await fetchMessage(item.contentData.cid)\n                const unixTimestamp = item.contentData.blockTimestamp.toString()\n\n                const milliseconds = unixTimestamp * 1000 \n\n                const dateObject = new Date(milliseconds)\n\n                const humanDateFormat = dateObject.toLocaleString()\n                return { fetchedMessage: fetchedMessageContent,\n                         recipients: item.recipients,\n                         timestamp: humanDateFormat}\n            })\n\n            const messages = await Promise.all(sentMessagesRetrieved)\n            setFetchedMessages(messages)\n            setSortedMessages(messages.reverse())\n            setLoading(false)\n        }\n\n        if(!loading) {\n            if (fetchedMessages.length === 0) {\n                return (\n                    <>\n                        <div className='clouds'>\n                            <div className=\"cloudOne\">\n                                <img src={cloud2} alt=\"cloud-2\" />\n                            </div>\n                            <div className=\"cloudTwo\">\n                                <img src={cloud1} alt=\"cloud-1\" />\n                            </div>\n                            <div className=\"cloudThree\">\n                                <img src={cloud3} alt=\"cloud-3\" />\n                            </div>\n                            <div className=\"cloudText\">\n                                Cloudy with a chance of messages\n                            </div>\n                        </div>\n                    </>\n                )\n            } else {\n                return (\n                    <div className=\"row messages-list\">\n                        <List className=\"col-md-4 col-sm-12\">\n                            <Box className=\"pagination\" sx={{display:\"flex\"}}>\n                                <Pagination count={1} />\n                                <IconButton size=\"large\" onClick={()=> setLoading(true) }>\n                                    <RefreshIcon fontSize=\"large\"/>\n                                </IconButton>\n                            </Box>\n                            {sortedMessages.map((message: any, i: any) => {\n                                return (\n                                    <Message message={message} index={i} \n                                        key={i} previousIndex={previousIndex} \n                                        setPreviousIndex={setPreviousIndex} />\n                                )\n                            })}\n                        </List>\n                        <Box className=\"intro-box sent col-md-8\">\n                            <div className=\"open-message\">\n                                <p>Come on, don't be shy. Open a message</p>\n                            </div>\n                        </Box>\n                    </div>\n                )\n            }\n        } else {\n            return (\n                <div className=\"spinner\">\n                    <CircularProgress/>\n                </div>\n            )\n        }\n\n    }\n    \n    if(encryptionKeyInitialized == true){\n        return (\n            <div className=\"content-box\">\n                <GetMessages />\n           </div>\n        )\n    } else if(encryptionKeyInitialized == false){\n        return (\n            <Stepper onDeboxInitialization={getPublicEncryptionKey}/>\n        )\n    } else{\n        return(\n            <div className=\"spinner\">\n                <CircularProgress/>\n            </div>\n        )\n    }\n}","import { createContext } from \"react\";\n\nexport const initialThemeState = {\n  theme: \"classic\",\n  setTheme: (_value: string) => {}\n};\n\nconst ThemeContext = createContext(initialThemeState);\nexport default ThemeContext;","import { useState, useEffect } from \"react\";\nimport ThemeContext, { initialThemeState } from \"./ThemeContext\";\n\ntype Props = {\n    children: JSX.Element|JSX.Element[],\n};\n\nconst ThemeProvider = ( { children }: Props ) => {\n  const [theme, setTheme] = useState<any>(initialThemeState.theme);\n\n  const localStorage = window.localStorage;\n\n  useEffect(() => {\n    const savedThemeLocal = localStorage.getItem(\"globalTheme\");\n\n    if (!!savedThemeLocal) {\n      setTheme(savedThemeLocal);\n    }\n  }, [localStorage]);\n\n  useEffect(() => {\n    localStorage.setItem(\"globalTheme\", theme);\n  }, [theme, localStorage]);\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      <div className={`theme theme--${theme}`}>{children}</div>\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeProvider;\n","import { useState, useEffect } from \"react\";\nimport ContactsContext, { initialContacts } from './ContactsContext';\n\ntype Props = {\n    children: JSX.Element|JSX.Element[],\n};\n\nconst ContactsProvider = ( { children }: Props ) => {\n    const [contacts, setContacts] = useState<any>(initialContacts.contacts);\n  \n    const localStorage = window.localStorage;\n  \n    useEffect(() => {\n        const savedContacts = JSON.parse(localStorage.getItem('contacts') || 'null');\n        \n        if (!!savedContacts) {\n            setContacts(savedContacts);\n        }\n    }, [localStorage]);\n  \n  \n    useEffect(() => {\n        localStorage.setItem('contacts', JSON.stringify(contacts));\n    }, [contacts, localStorage]);\n    \n    return (\n      <ContactsContext.Provider value={{ contacts, setContacts }}>\n        <>{children}</>\n      </ContactsContext.Provider>\n    );\n  };\n  \n  export default ContactsProvider;","export default __webpack_public_path__ + \"static/media/elephant.2a77170b.svg\";","export default __webpack_public_path__ + \"static/media/logo-green.a6b7a360.svg\";","// <!-- By Sam Herbert (@sherb), for everyone. More @ http://goo.gl/7AJzbL -->\nexport function Spinner({ color, ...rest }: any) {\n    return (\n        <svg width=\"38\" height=\"38\" viewBox=\"0 0 38 38\" \n            xmlns=\"http://www.w3.org/2000/svg\" stroke={color} {...rest}>\n            <g fill=\"none\" fillRule=\"evenodd\">\n                <g transform=\"translate(1 1)\" strokeWidth=\"2\">\n                    <circle strokeOpacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\" />\n                    <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n                    <animateTransform\n                        attributeName=\"transform\"\n                        type=\"rotate\"\n                        from=\"0 18 18\"\n                        to=\"360 18 18\"\n                        dur=\"1s\"\n                        repeatCount=\"indefinite\" />\n                    </path>\n                </g>\n            </g>\n        </svg>\n    )\n}","import Switch from \"@mui/material/Switch\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport '../componentsStyling/themeSetter.scss';\n\nimport ThemeContext from \"./Contexts/ThemeContext\";\n\nexport default function ThemeSetter() {\n    const useTheme = () => useContext(ThemeContext);\n    const { theme, setTheme } = useTheme()!;\n    const [checked, setChecked] = useState<boolean>(theme === \"classic\" ? true : false);\n\n    useEffect(() => {\n        if(theme === \"classic\") {\n            setChecked(true);\n        } else {\n            setChecked(false);\n        }\n    }, [])\n\n    const handleChange = (event: any) => {\n        setChecked(event.target.checked);\n        event.target.checked ? setTheme(\"classic\") : setTheme(\"dark\")\n    };\n\n  return (\n    <>\n        <Switch\n        className=\"theme-switcher\"\n        checked={checked}\n        onChange={handleChange}\n        value=\"checked\"\n        />\n        <img className=\"theme-icon-dark\" src={require('../photos/icons/theme-switch-dark.svg').default}/>\n        <img className=\"theme-icon-light\" src={require('../photos/icons/theme-switch-light.svg').default}/>\n    </>\n\n\n    \n  );\n}\n\nconst themeOptions = [{ value: \"classic\" }, { value: \"dark\" }];","import React, { useEffect, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport { injected } from '../../connectors';\nimport { useWeb3React } from '@web3-react/core';\nimport ThemeSetter from '../ThemeSetter';\nimport { Spinner } from './Spinner';\nimport { ethers } from 'ethers';\nimport { useEagerConnect } from '../../hooks';\nimport { id } from 'ethers/lib/utils';\nimport formatAccountName from '../Common/AccountName';\nimport Deb0xERC20 from \"../../ethereum/deb0xerc20\";\nimport Popper from '@mui/material/Popper';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport '../../componentsStyling/appBar.scss';\n\nconst deb0xERC20Address = \"0x98583dd5310725eBDFd1123CA1FDE765Ef6eAFb8\"\nenum ConnectorNames { Injected = 'Injected' };\n\nconst connectorsByName: { [connectorName in ConnectorNames]: any } = {\n    [ConnectorNames.Injected]: injected\n}\n\nexport function AppBarComponent(props: any): any {\n    const context = useWeb3React();\n    const { connector, library, chainId, account, activate, deactivate, active, error } = context\n    const [activatingConnector, setActivatingConnector] = useState<any>();\n    const [networkName, setNetworkName] = useState<any>();\n    const [userUnstakedAmount,setUserUnstakedAmount] = useState<any>(0);\n    const triedEager = useEagerConnect();\n    const [ensName, setEnsName] = useState<any>(\"\");\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popper' : undefined;\n\n    if(library){\n        checkENS();\n        setUnstakedAmount();\n    }\n\n    useEffect(() => {\n        injected.supportedChainIds?.forEach(chainId => \n            setNetworkName((ethers.providers.getNetwork(chainId).name)));\n        if (activatingConnector && activatingConnector === connector) {\n            setActivatingConnector(undefined)\n        }\n    }, [activatingConnector, connector]);\n\n    async function setUnstakedAmount() {\n        const deb0xERC20Contract = Deb0xERC20(library, deb0xERC20Address)\n        if(account){\n            const balance = await deb0xERC20Contract.balanceOf(account)\n            setUserUnstakedAmount(ethers.utils.formatEther(balance))\n        }\n    }\n\n    useEffect(() => {\n        const deb0xERC20Contract = Deb0xERC20(library, deb0xERC20Address)\n        const filterFrom = deb0xERC20Contract.filters.Transfer(account)\n        const filterTo =  deb0xERC20Contract.filters.Transfer(null, account)\n        deb0xERC20Contract.on(filterFrom, () => {\n            setUnstakedAmount()\n        })\n        deb0xERC20Contract.on(filterTo, () => {\n            setUnstakedAmount()\n        })\n\n        return () => {\n            deb0xERC20Contract.removeAllListeners()\n        }\n    },[])\n\n    useEffect(() => {\n        setUnstakedAmount();\n    },[userUnstakedAmount])\n\n    async function checkENS(){\n \n        var name = await library.lookupAddress(account);\n        if(name !== null)\n        {   \n            setEnsName(name);\n        }\n    }\n\n    function handleClick (event: React.MouseEvent<HTMLElement>) {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n    };\n\n    function handleChange(text: any, index: any) {\n        // setSelectedIndex(index)\n        // props.onChange(text)\n        if(index !== 0)\n            localStorage.removeItem('input')\n    }\n    \n    return (\n        <>\n            <div className=\"app-bar--top\">\n                <Box className=\"main-menu--right\">\n                {account  ? \n                    <Button variant =\"contained\"\n                            onClick={() => handleChange(\"Stake\", 2)}>\n                        {userUnstakedAmount} DBX\n                    </Button> : \n                    <></> \n                }\n                \n                { (() =>  {\n                    const currentConnector = connectorsByName[ConnectorNames.Injected]\n                    const activating = currentConnector === activatingConnector\n                    const connected = currentConnector === connector\n                    const disabled = !triedEager || !!activatingConnector || connected || !!error\n\n                    return (\n                        <Button variant=\"contained\"\n                            key={ConnectorNames.Injected}\n                            aria-describedby={id}\n                            onClick={!connected ? \n                                () => {\n                                    setActivatingConnector(currentConnector)\n                                    activate(currentConnector)\n                                } : \n                                handleClick\n                            }>\n                            \n                            { activating ? \n                                <Spinner color={'black'} /> :\n                                !connected ? \n                                    \"Connect Wallet\" :\n                                    <span>\n                                        {account === undefined ? \n                                            `Unsupported Network. Switch to ${networkName}` : \n                                            account ? \n                                                ensName === \"\" ? \n                                                    `${formatAccountName(account)}` :\n                                                    `${ensName.toLowerCase()} \n                                                    (${formatAccountName(account)})`\n                                            : ''}\n                                    </span>\n                            }\n                        </Button>\n                    )\n                }) ()}\n                        \n                    <ThemeSetter />\n                </Box>\n            </div>\n            <Popper className=\"popper\" id={id} open={open} anchorEl={anchorEl}>\n                        <Button \n                            onClick={(event: any) => {\n                                handleClick(event)\n                                deactivate()\n                            }}\n                            className=\"logout-btn\">\n                            Logout \n                        </Button>\n            </Popper>\n        </>\n    );\n}\n","import { Add, SettingsPhoneTwoTone } from \"@mui/icons-material\";\nimport { Box, IconButton, Modal } from \"@mui/material\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport icon1 from '../photos/icons/icon-1.png';\nimport icon2 from '../photos/icons/icon-2.png';\nimport icon3 from '../photos/icons/icon-3.png';\n\nexport default function HowTo(props: any) {\n    const [name, setName] = useState<string>(\"\");\n    const [address, setAddress] = useState<string>(props.props);\n    const ref = useRef<any>(null);\n    const { onClickOutside } = props;\n    const [theme, setTheme] = useState(localStorage.getItem('globalTheme'));\n\n    function handleOnCancel() {\n        onClickOutside && onClickOutside();\n    }\n\n    useEffect(() => {\n        const handleClickOutside = (event: any) => {\n            if (ref.current && !ref.current.contains(event.target)) {\n                onClickOutside && onClickOutside();\n            }\n        };\n        document.addEventListener('click', handleClickOutside, true);\n        return () => {\n            document.removeEventListener('click', handleClickOutside, true);\n        };\n    }, [ onClickOutside ]);\n\n    return (\n        <>\n            <Modal open={props.show} className=\"initial-page-popup\">\n                <Box ref={ref} className={`modal-box ${theme === \"classic\" ? \"classic\" : \"dark\"}` }>\n                   \n                </Box>\n            </Modal>\n        </>\n    );\n}","import { useState, useEffect } from 'react';\nimport './App.css';\nimport { \n    Web3ReactProvider,\n    useWeb3React,\n    UnsupportedChainIdError\n} from '@web3-react/core';\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { ethers } from \"ethers\";\nimport { useEagerConnect, useInactiveListener } from './hooks'\nimport { PermanentDrawer } from './components/App/PermanentDrawer'\nimport { create } from 'ipfs-http-client'\nimport { Encrypt } from './components/App/Encrypt';\nimport { Decrypt } from './components/App/Decrypt';\nimport {Stake} from './components/App/Stake';\nimport { Sent } from './components/App/Sent';\nimport { Box,Typography, Fab, Button} from '@mui/material';\nimport ThemeProvider from './components/Contexts/ThemeProvider';\nimport './index.scss';\nimport { injected, network } from './connectors';\nimport ContactsProvider from './components/Contexts/ContactsProvider';\nimport elephant from './photos/icons/elephant.svg';\nimport logoGreen from './photos/icons/logo-green.svg';\nimport logoDark from \"./photos/logo-dark.svg\";\nimport { Spinner } from './components/App/Spinner';\nimport { AppBarComponent } from './components/App/AppBar';\nimport IconButton from \"@mui/material/IconButton\";\nimport { Add } from '@mui/icons-material';\nimport HowTo from './components/HowTo'\n\nconst client = create({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'http'\n})\n\nconst ethUtil = require('ethereumjs-util')\n//old address: 0x218c10BAb451BE6A897db102b2f608bC7D3441a0\n// 0xb6057a156D1D5BAB08DAb590dC052B66051394e2\nconst deb0xAddress = \"0xb6057a156D1D5BAB08DAb590dC052B66051394e2\";\n\n\nenum ConnectorNames { Injected = 'Injected', Network = 'Network' };\n\nconst connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.Network]: network\n}\n\nfunction getErrorMessage(error: Error) {\n    let networkName;\n\n    injected.supportedChainIds?.forEach(chainId => networkName = (ethers.providers.getNetwork(chainId)).name)\n    if (error instanceof NoEthereumProviderError) {\n        return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\n    } else if (error instanceof UnsupportedChainIdError) {\n        return `You're connected to an unsupported network. Switch to ${networkName}`\n    } else if (\n        error instanceof UserRejectedRequestErrorInjected\n    ) {\n        return 'Please authorize this website to access your Ethereum account.'\n    } else {\n        console.error(error)\n        return 'An unknown error occurred. Check the console for more details.'\n    }\n}\n\nfunction getLibrary(provider: any): ethers.providers.Web3Provider {\n  const library = new ethers.providers.Web3Provider(provider)\n\n  library.pollingInterval = 12000\n  return library\n}\n\nexport default function () {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  )\n}\n\nfunction App() {\n    const context = useWeb3React<ethers.providers.Web3Provider>()\n    const { connector, library, chainId, account, active, error, activate } = context\n\n    // handle logic to recognize the connector currently being activated\n    const [activatingConnector, setActivatingConnector] = useState<any>()\n    const [selectedOption, setSelectedOption] = useState('Deb0x');\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const [networkName, setNetworkName] = useState<any>();\n    let errorMsg;\n    const [isVisible, setIsVisible] = useState(false);\n    let [show, setShow] = useState(false);\n\n    useEffect(() => {\n        injected.supportedChainIds?.forEach(chainId => \n            setNetworkName((ethers.providers.getNetwork(chainId).name)));\n        if (activatingConnector && activatingConnector === connector) {\n            setActivatingConnector(undefined)\n            setIsVisible(true);\n        }\n    }, [activatingConnector, connector])\n\n    // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n    const triedEager = useEagerConnect()\n\n    // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n    useInactiveListener(!triedEager || !!activatingConnector)\n\n    function handleChange(newValue: any) {\n        setSelectedOption(newValue)\n    }\n\n    useEffect(() => {\n        localStorage.removeItem('input');\n        setIsVisible(false);\n    }, [])\n\n    function handleClick (event: React.MouseEvent<HTMLElement>) {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n    };\n\n    useEffect(() => {    \n        window.ethereum ?\n            window.ethereum.request({method: \"eth_requestAccounts\"}).then(() => {\n                switchNetwork();               \n            }).catch((err: any) => displayErrorMsg(err))\n            : displayErrorMsg(\"Please install MetaMask\")\n        }, [])\n\n    async function switchNetwork() {\n        try {\n            await window.ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{ chainId: \"0x4\"}],\n            }).then(\n                displayErrorMsg(\"You have switched to the right network\")\n            );            \n        } catch (switchError) {\n            try {\n                await window.ethereum.request({\n                method: 'wallet_addEthereumChain',\n                params: [\n                    {\n                        chainId: '0x4', \n                        chainName:'Rinkeby Test Network',\n                        rpcUrls:['https://rinkeby.infura.io/v3/'],                   \n                        blockExplorerUrls:['https://rinkeby.etherscan.io'],  \n                        nativeCurrency: { \n                        symbol:'ETH',   \n                        decimals: 18\n                        }     \n                    }\n                    ]});\n            } catch (err) {\n                displayErrorMsg(\"Cannot switch to the network\");\n            }\n        }\n        \n    }\n\n    function displayErrorMsg(error: string) {\n        errorMsg = error;\n        return errorMsg;\n    }\n    \n    useEffect(() => {\n        setTimeout(() => {setIsVisible(true)}, 2000)\n    }, [account])\n    \n    return (\n\n    <>\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        {!!errorMsg &&\n            <p className='alert alert-danger position-fixed' style={{ marginTop: '4rem', marginBottom: '0' }}>\n                {displayErrorMsg(errorMsg)}\n            </p>\n        }\n    </div>\n    <ThemeProvider>\n        {\n            account ? \n            <ContactsProvider>\n                <div className=\"app-container container-fluid\">\n                    <div className=\"row main-row\">\n                        <div className=\"col col-md-3 col-sm-12 p-0 side-menu-container\">\n                            <PermanentDrawer onChange={handleChange}/>\n                        </div>\n                        <div className=\"col col-md-9 col-sm-12\">\n                        <AppBarComponent />\n                        {account ? \n                            !!(library && account) && (\n                                <Box className=\"main-container\" sx={{marginTop: 12}}>\n                                    {selectedOption === \"Compose\" && <Encrypt />}\n                                    {selectedOption === \"Deb0x\" && <Decrypt account={account}/>}\n                                    {selectedOption === \"Stake\" && <Stake />}\n                                    {selectedOption === \"Sent\" && <Sent />}\n                                </Box>\n                            ):\n                                <Box className=\"home-page-box\">\n                                    <Typography sx={{textAlign:\"center\",color:\"gray\"}} variant=\"h1\">\n                                        The End To End Encrypted \n                                        <br></br>\n                                        Decentralized Email Protocol \n                                        <br></br> \n                                        Owned By Its Users\n                                    </Typography>\n                                    <Typography sx={{ mt:10,textAlign:\"center\"}} variant=\"h3\">\n                                        Please connect your wallet\n                                    </Typography>\n                                </Box>\n                        }\n                        </div>\n                    </div>\n                </div>\n            </ContactsProvider> :\n            <div className={`app-container p-0 ${isVisible ? \"\" : \"d-none\"}` }>\n                <div className=\"initial-page\">\n                    <div className=\"row\">\n                        <div className=\"col-md-7 img-container mr-4\">\n                            <img className=\"image--left\" src={elephant} />\n                            <div className=\"img-content\">\n                                <p>Let's get you started</p>\n                                \n                                <p>Connect your wallet & start using <img className=\"content-logo\" src={logoGreen} /></p>\n                                <p>Here's how to do this in <IconButton className='info show-popup' onClick={() => setShow(true)}>3 easy steps</IconButton></p>\n                                {show ? \n                                    <HowTo show={show} onClickOutside={() => setShow(false)}/> : \n                                        <></>\n                                }\n                                <div>\n                                { (() =>  {\n                                    const currentConnector = connectorsByName[ConnectorNames.Injected]\n                                    const activating = currentConnector === activatingConnector\n                                    const connected = currentConnector === connector\n                                    const disabled = !triedEager || !!activatingConnector || connected || !!error\n                                    console.log(window.ethereum);\n\n                                    return (\n                                        <Button variant=\"contained\"\n                                            key={ConnectorNames.Injected}\n                                            // aria-describedby={id}\n                                            onClick={!connected ? \n                                                () => {\n                                                    setActivatingConnector(currentConnector)\n                                                    activate(currentConnector)\n                                                } : \n                                                handleClick}\n                                                className=\"connect-button\">\n                                            \n                                            { activating ? \n                                                <Spinner color={'black'} /> :\n                                                !connected ? \n                                                    \"Connect Wallet\" :\n                                                    <span>\n                                                        {typeof window.ethereum === 'undefined' ? \n                                                            `Check your prerequisites` : \n                                                            account === undefined ? `Unsupported Network. Switch to ${networkName}` : ''}\n                                                    </span>\n                                            }\n                                        </Button>\n                                    )\n                                }) ()}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-5 text-center\">\n                            <div className=\"text-container\">\n                                <img className=\"dark-logo\" src={logoGreen} />\n                                <p>\n                                    The End to End Encrypted Decentralized \n                                    Email Protocol <br />\n                                    <span className=\"text-green\">\n                                        Owned by its Users\n                                    </span>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mobile-message\">\n                    <img className=\"dark-logo\" src={logoGreen} />\n                    <p>In order to use the app please log in from Desktop</p>\n                    <img className=\"elephant-img\" src={elephant} />\n                </div>\n            </div>\n        }\n    </ThemeProvider>\n    </>\n  )\n}\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { useState, useEffect, useContext } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { encrypt } from '@metamask/eth-sig-util'\nimport Deb0x from \"../../ethereum/deb0x\"\nimport { create } from 'ipfs-http-client'\nimport SendIcon from '@mui/icons-material/Send';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport {\n    Box, TextField, Typography\n} from '@mui/material';\nimport { ethers } from \"ethers\";\nimport SnackbarNotification from './Snackbar';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport '../../componentsStyling/encrypt.scss';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { Editor } from 'react-draft-wysiwyg';\nimport airplaneBlack from '../../photos/icons/airplane-black.svg';\n\nconst { BigNumber } = require(\"ethers\");\nconst deb0xAddress = \"0xb6057a156D1D5BAB08DAb590dC052B66051394e2\";\nconst ethUtil = require('ethereumjs-util')\n\nconst projectId = process.env.REACT_APP_PROJECT_ID\nconst projectSecret = process.env.REACT_APP_PROJECT_SECRET\nconst projectIdAndSecret = `${projectId}:${projectSecret}`\n\nconst client = create({\n    host: 'ipfs.infura.io',\n    port: 5001,\n    protocol: 'https',\n  headers: {\n    authorization: `Basic ${Buffer.from(projectIdAndSecret).toString(\n      'base64'\n    )}`,\n  },\n})\n\nexport function Encrypt(replyAddress: any): any {\n    const { account, library } = useWeb3React()\n    const [encryptionKey, setKey] = useState('')\n    const [textToEncrypt, setTextToEncrypt] = useState('')\n    const [encryptionKeyInitialized, setEncryptionKeyInitialized] = useState('')\n    const [senderAddress, setSenderAddress] = useState('')\n    const [notificationState, setNotificationState] = useState({})\n    const [messageSessionSentCounter, setMessageSessionSentCounter] = useState(0)\n    const [loading, setLoading] = useState(false)\n    const [estimatedReward, setEstimatedReward] = useState(\"9.32\");\n    const [addressList, setAddressList] = useState<string[]>([])\n    const [error, setError] = useState<string | null>(null);\n    const [ input, setInput ] = useState(JSON.parse(localStorage.getItem('input') || 'null'));\n    const [address, setAddress] = useState<string>(replyAddress.props);\n\n    useEffect(() => {\n        if(input !== null && input.match(/^0x[a-fA-F0-9]{40}$/g))\n            addressList.push(input)\n        \n        if(address)\n            addressList.push(address)\n    }, []);\n\n    useEffect(() => {\n        if (!encryptionKeyInitialized) {\n            getPublicEncryptionKey()\n        }\n    }, []);\n\n    async function handleKeyDown(evt: any) {\n        if ([\"Enter\", \"Tab\", \",\"].includes(evt.key)) {\n            evt.preventDefault();\n\n            var value = senderAddress.trim();\n\n            if (value && await isValid(value)) {\n                setAddressList([...addressList, senderAddress])\n                setSenderAddress(\"\")\n            }\n        }\n    }\n\n    function handleChange(evt: any) {\n        setSenderAddress(evt.target.value)\n        setError(null)\n    }\n\n    function handleDelete(item: any) {\n        setAddressList(addressList.filter(i => i !== item))\n    }\n\n    async function handlePaste(evt: any) {\n        evt.preventDefault()\n        var paste = evt.clipboardData.getData(\"text\")\n        if(await isValid(paste)) {\n            setAddressList([...addressList, paste])\n        }\n    }\n\n    async function isValid(address: any) {\n        let error = null;\n\n        if (isInList(address)) {\n            error = `${address} has already been added.`;\n        }\n\n        if (!isAddress(address)) {\n            error = `${address} is not a valid ethereum address.`;\n        } else if (await isInitialized(address) == \"\") {\n            error = `${address} has not initialized deb0x.`;\n        }\n\n        if (error) {\n            setNotificationState({\n                message: error, open: true,\n                severity: \"error\"\n            })\n            setError(error);\n\n            return false;\n        }\n\n        return true;\n    }\n\n    async function isInitialized(address: any) {\n        const deb0xContract = Deb0x(library, deb0xAddress)\n        return await deb0xContract.encryptionKeys(address);\n    }\n\n    function isInList(address: any) {\n        return addressList.includes(address);\n    }\n\n    function isAddress(address: any) {\n        return ethers.utils.isAddress(address);\n    }\n\n    async function encryptText(messageToEncrypt: any, destinationAddresses: any)\n    {\n        setLoading(true);\n        const signer = await library.getSigner(0);\n        let cids:any = []\n        let recipients = replyAddress.props ? [replyAddress.props].flat() : destinationAddresses.flat()\n        recipients.push(await signer.getAddress())\n        const deb0xContract = Deb0x(signer, deb0xAddress);\n        for (let address of recipients) {\n            const destinationAddressEncryptionKey = await deb0xContract.getKey(address);\n            const encryptedMessage = ethUtil.bufferToHex(\n                Buffer.from(\n                    JSON.stringify(\n                        encrypt({\n                            publicKey: destinationAddressEncryptionKey,\n                            data: messageToEncrypt,\n                            version: 'x25519-xsalsa20-poly1305'\n                        }\n                        )\n                    ),\n                    'utf8'\n                )\n            )\n            const message = await client.add(encryptedMessage)\n            cids.push(message.path)\n        }\n\n        try {\n            const overrides = \n                { value: ethers.utils.parseUnits(\"0.1\", \"ether\"),\n                    gasLimit:BigNumber.from(\"1000000\") }\n            const tx = await deb0xContract[\"send(address[],string[],address,uint256,uint256)\"](recipients,\n                cids,\n                ethers.constants.AddressZero,\n                0,\n                0,\n                overrides)\n\n            await tx.wait()\n                .then((result: any) => {\n                    setNotificationState({\n                        message: \"Message was succesfully sent.\",\n                        open: true,\n                        severity: \"success\"\n                    })\n\n                    let count = messageSessionSentCounter + 1;\n                    setMessageSessionSentCounter(count);\n                    setEditorState(EditorState.createEmpty());\n                })\n                .catch((error: any) => {\n                    setNotificationState({\n                        message: \"Message couldn't be sent!\",\n                        open: true,\n                        severity: \"error\"\n                    })\n                })\n        } catch (error: any) {\n            setNotificationState({\n                message: \"You rejected the transaction. Message was not sent.\",\n                open: true,\n                severity: \"info\"\n            })\n        }\n\n        setTextToEncrypt('');\n        setSenderAddress(\"\");\n        setAddressList([]);\n        setLoading(false);\n\n    }\n\n    async function initializeDeb0x() {\n        const signer = await library.getSigner(0);\n        const deb0xContract = Deb0x(signer, deb0xAddress);\n        const tx = await deb0xContract.setKey(encryptionKey);\n        const receipt = await tx.wait();\n\n        return receipt.transactionHash;\n    }\n\n    async function getEncryptionKey() {\n        library.provider.request({\n            method: 'eth_getEncryptionPublicKey',\n            params: [account],\n        })\n            .then((result: any) => {\n                setKey(result);\n            });\n    }\n\n    const getPublicEncryptionKey = async () => {\n        const deb0xContract = Deb0x(library, deb0xAddress)\n        const key = await deb0xContract.getKey(account)\n        setEncryptionKeyInitialized(key)\n    }\n    const [editorState, setEditorState] = useState(() =>\n        EditorState.createEmpty()\n    );\n\n    const handleEditorChange = (state: any) => {\n        setEditorState(state);\n        sendContent();\n    };\n\n    const sendContent = () => {\n        setTextToEncrypt(draftToHtml(convertToRaw(editorState.getCurrentContent())));\n    };\n\n    return (\n        <>\n            <SnackbarNotification state={notificationState} \n                setNotificationState={setNotificationState} />\n            <div className=\"form-container content-box\">\n                <Box component=\"form\"\n                    noValidate\n                    autoComplete=\"off\">\n                    {!address && \n                        <>\n                            <TextField id=\"standard-basic\"\n                                placeholder=\"Ethereum address (e.g.0x31dc...) or ENS domain name (e.g test.deb0x.eth)\"\n                                value={senderAddress}\n                                onPaste={handlePaste}\n                                onKeyDown={handleKeyDown}\n                                onChange={handleChange} />\n                            <Stack direction=\"row\" spacing={1}>\n                                <Box sx={{ width: '100%', margin: '0 auto' }}\n                                    className=\"address-list\">\n                                    {\n                                        addressList.map((address: any) => {\n                                            return (\n                                                <Chip\n                                                    key={address}\n                                                    label={address}\n                                                    onDelete={() => handleDelete(address)}\n                                                    deleteIcon={<DeleteIcon />}\n                                                />\n                                            )\n                                        })\n                                    }\n                                </Box>\n                            </Stack>\n                        </>\n                    }\n                    \n                    <Editor\n                        editorState={editorState}\n                        onEditorStateChange={handleEditorChange}\n                        toolbarClassName=\"toolbar\"\n                        wrapperClassName=\"wrapper\"\n                        editorClassName=\"editor\"\n                    />\n                    { messageSessionSentCounter === 0 ?\n                        <Box sx={{ display: \"flex\", \n                            alignItems: \"end\", \n                            justifyContent: \"flex-end\", \n                            flexDirection: \"column\", \n                            mr: 1 }}>\n                            {textToEncrypt != '' && senderAddress != '' ?\n                                <Box>\n                                    <Typography>\n                                        <small>\n                                            est. rewards: {estimatedReward} DBX\n                                        </small>\n                                    </Typography>\n                                </Box> : \n                                null\n                            }\n\n                            <LoadingButton className=\"send-btn\" \n                                loading={loading} \n                                endIcon={ loading ? \n                                    null : \n                                    <img src={airplaneBlack} className=\"send-papper-airplane\" alt=\"send-button\"></img>\n                                }\n                                loadingPosition=\"end\"\n                                sx={{ marginLeft: 2, marginTop: 1 }}\n                                disabled={textToEncrypt == '' || addressList == []}\n                                onClick={() => {\n                                    encryptText(textToEncrypt, addressList)\n                                }\n                                    \n                                } >\n                            </LoadingButton>\n                        </Box>\n                        :\n                        <Box sx={{ display: \"flex\", \n                            alignItems: \"end\", \n                            justifyContent: \"flex-end\",\n                            flexDirection: \"column\",\n                            mr: 1 }}>\n                            {textToEncrypt != '' && senderAddress != '' ?\n                                <Box>\n                                    <Typography>\n                                        <small>\n                                            est. rewards: {estimatedReward} DBX\n                                        </small>\n                                    </Typography>\n                                </Box> : \n                                null\n                            }\n\n                            <LoadingButton className=\"send-btn\" \n                                 loading={loading} \n                                 endIcon={ loading ? \n                                     null : \n                                     <img src={airplaneBlack} className=\"send-papper-airplane\" alt=\"send-button\"></img>\n                                 }\n                                 loadingPosition=\"end\"\n                                 sx={{ marginLeft: 2, marginTop: 1 }}\n                                onClick={() => encryptText(textToEncrypt, addressList)}>\n                            </LoadingButton>\n                        </Box>\n                    }\n                </Box>\n            </div>\n        </>\n    )\n}","export default __webpack_public_path__ + \"static/media/cloud-2.38b567a5.svg\";","export default __webpack_public_path__ + \"static/media/cloud-1.ef57dc90.svg\";","export default __webpack_public_path__ + \"static/media/cloud-3.e5323624.svg\";","export default __webpack_public_path__ + \"static/media/airplane-black.e8545508.svg\";","var map = {\n\t\"./animal-1.svg\": 961,\n\t\"./animal-10.svg\": 962,\n\t\"./animal-11.svg\": 963,\n\t\"./animal-12.svg\": 964,\n\t\"./animal-13.svg\": 965,\n\t\"./animal-14.svg\": 966,\n\t\"./animal-15.svg\": 967,\n\t\"./animal-16.svg\": 968,\n\t\"./animal-17.svg\": 969,\n\t\"./animal-18.svg\": 970,\n\t\"./animal-19.svg\": 971,\n\t\"./animal-2.svg\": 972,\n\t\"./animal-20.svg\": 973,\n\t\"./animal-21.svg\": 974,\n\t\"./animal-22.svg\": 975,\n\t\"./animal-23.svg\": 976,\n\t\"./animal-24.svg\": 977,\n\t\"./animal-25.svg\": 978,\n\t\"./animal-26.svg\": 979,\n\t\"./animal-27.svg\": 980,\n\t\"./animal-28.svg\": 981,\n\t\"./animal-29.svg\": 982,\n\t\"./animal-3.svg\": 983,\n\t\"./animal-30.svg\": 984,\n\t\"./animal-31.svg\": 985,\n\t\"./animal-32.svg\": 986,\n\t\"./animal-33.svg\": 987,\n\t\"./animal-34.svg\": 988,\n\t\"./animal-35.svg\": 989,\n\t\"./animal-36.svg\": 990,\n\t\"./animal-37.svg\": 991,\n\t\"./animal-38.svg\": 992,\n\t\"./animal-39.svg\": 993,\n\t\"./animal-4.svg\": 994,\n\t\"./animal-40.svg\": 995,\n\t\"./animal-41.svg\": 996,\n\t\"./animal-42.svg\": 997,\n\t\"./animal-43.svg\": 998,\n\t\"./animal-44.svg\": 999,\n\t\"./animal-45.svg\": 1000,\n\t\"./animal-46.svg\": 1001,\n\t\"./animal-47.svg\": 1002,\n\t\"./animal-48.svg\": 1003,\n\t\"./animal-49.svg\": 1004,\n\t\"./animal-5.svg\": 1005,\n\t\"./animal-50.svg\": 1006,\n\t\"./animal-6.svg\": 1007,\n\t\"./animal-7.svg\": 1008,\n\t\"./animal-8.svg\": 1009,\n\t\"./animal-9.svg\": 1010\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 435;","import { sign } from \"crypto\";\nimport { Contract, ethers } from \"ethers\";\n\nconst {abi} = require(\"./Deb0x.json\");\n\nexport default (signerOrProvider, address) => {\n    return new ethers.Contract(address, abi, signerOrProvider);\n}","import { useState, forwardRef, useEffect } from 'react'\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\n\nconst Alert = forwardRef<HTMLDivElement, AlertProps>(function Alert(\n  props,\n  ref,\n) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nexport default function SnackbarNotification(props: any) {\n\n  const [state, setState] = useState({ severity: props.state.severity, open: props.state.open, message: props.state.message })\n\n  useEffect(() => {\n    setState({severity: props.state.severity, open: props.state.open, message: props.state.message})\n  }, [props])\n\n  const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setState({\n      message: state.message, open: false,\n      severity: state.severity\n    })\n  };\n\n  return (\n    <Snackbar open={state.open} autoHideDuration={6000} onClose={handleClose}>\n      <Alert onClose={handleClose} severity={state.severity} sx={{ width: '100%' }}>\n        {state.message}\n      </Alert>\n    </Snackbar>\n  )\n}","export default __webpack_public_path__ + \"static/media/animal-1.ce0a7c89.svg\";","export default __webpack_public_path__ + \"static/media/animal-10.1ec63741.svg\";","export default __webpack_public_path__ + \"static/media/animal-11.60d27046.svg\";","export default __webpack_public_path__ + \"static/media/animal-12.96b14f32.svg\";","export default __webpack_public_path__ + \"static/media/animal-13.cc352efd.svg\";","export default __webpack_public_path__ + \"static/media/animal-14.c036bd2f.svg\";","export default __webpack_public_path__ + \"static/media/animal-15.f66fd334.svg\";","export default __webpack_public_path__ + \"static/media/animal-16.f1d1c8e7.svg\";","export default __webpack_public_path__ + \"static/media/animal-17.54c2921c.svg\";","export default __webpack_public_path__ + \"static/media/animal-18.a79f5287.svg\";","export default __webpack_public_path__ + \"static/media/animal-19.4e1f038c.svg\";","export default __webpack_public_path__ + \"static/media/animal-2.3cbc9f33.svg\";","export default __webpack_public_path__ + \"static/media/animal-20.582e64c1.svg\";","export default __webpack_public_path__ + \"static/media/animal-21.f994a910.svg\";","export default __webpack_public_path__ + \"static/media/animal-22.614f36ff.svg\";","export default __webpack_public_path__ + \"static/media/animal-23.fe8cb713.svg\";","export default __webpack_public_path__ + \"static/media/animal-24.14d93b91.svg\";","export default __webpack_public_path__ + \"static/media/animal-25.f89249c7.svg\";","export default __webpack_public_path__ + \"static/media/animal-26.eadc71e3.svg\";","export default __webpack_public_path__ + \"static/media/animal-27.bf6ff131.svg\";","export default __webpack_public_path__ + \"static/media/animal-28.09ad8851.svg\";","export default __webpack_public_path__ + \"static/media/animal-29.c4891a44.svg\";","export default __webpack_public_path__ + \"static/media/animal-3.b9cd90a5.svg\";","export default __webpack_public_path__ + \"static/media/animal-30.32b79d90.svg\";","export default __webpack_public_path__ + \"static/media/animal-31.cbbd4ac7.svg\";","export default __webpack_public_path__ + \"static/media/animal-32.dd4496ad.svg\";","export default __webpack_public_path__ + \"static/media/animal-33.bf71ffc1.svg\";","export default __webpack_public_path__ + \"static/media/animal-34.a42b2762.svg\";","export default __webpack_public_path__ + \"static/media/animal-35.05a0f752.svg\";","export default __webpack_public_path__ + \"static/media/animal-36.87183ca8.svg\";","export default __webpack_public_path__ + \"static/media/animal-37.601a5569.svg\";","export default __webpack_public_path__ + \"static/media/animal-38.7c8e43d8.svg\";","export default __webpack_public_path__ + \"static/media/animal-39.a19f4cd1.svg\";","export default __webpack_public_path__ + \"static/media/animal-4.3b05a1a7.svg\";","export default __webpack_public_path__ + \"static/media/animal-40.81b1b2fa.svg\";","export default __webpack_public_path__ + \"static/media/animal-41.98e86830.svg\";","export default __webpack_public_path__ + \"static/media/animal-42.db86b736.svg\";","export default __webpack_public_path__ + \"static/media/animal-43.1b46c38c.svg\";","export default __webpack_public_path__ + \"static/media/animal-44.b84c6b0e.svg\";"],"sourceRoot":""}