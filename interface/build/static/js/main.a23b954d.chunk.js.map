{"version":3,"sources":["photos/icons/avatars/animal-42.svg","photos/icons/avatars/animal-43.svg","photos/icons/avatars/animal-44.svg","photos/icons/avatars/animal-45.svg","photos/icons/avatars/animal-46.svg","photos/icons/avatars/animal-47.svg","photos/icons/avatars/animal-48.svg","photos/icons/avatars/animal-49.svg","photos/icons/avatars/animal-5.svg","photos/icons/avatars/animal-50.svg","photos/icons/avatars/animal-6.svg","photos/icons/avatars/animal-7.svg","photos/icons/avatars/animal-8.svg","photos/icons/avatars/animal-9.svg","connectors.ts","hooks.ts","photos/icons/ios-compose.svg","photos/icons/trophy.svg","components/App/Spinner.tsx","ethereum/deb0xerc20.js","components/Common/AccountName.tsx","components/Contexts/ThemeContext.tsx","components/ThemeSetter.tsx","components/Contexts/ContactsContext.tsx","components/App/PermanentDrawer.tsx","components/Common/ScreenSize.tsx","components/App/Stepper.tsx","components/ContactsSetter.tsx","components/Contexts/ReadedMessagesContext.tsx","components/Contexts/ReadedMessagesProvider.tsx","components/App/Decrypt.tsx","photos/icons/token.svg","components/App/Stake.tsx","components/App/Sent.tsx","components/Contexts/ThemeProvider.tsx","App.tsx","components/Contexts/ContactsProvider.tsx","photos/icons/elephant.svg","photos/icons/logo-green.svg","reportWebVitals.ts","index.tsx","components/App/Snackbar.tsx","photos/icons/avatars sync /^/.//animal/-.*/.svg$","photos/icons/clouds/cloud-2.svg","photos/icons/clouds/cloud-1.svg","photos/icons/clouds/cloud-3.svg","components/App/Encrypt.tsx","ethereum/deb0x.js","photos/icons/plus-circle-fill.svg","photos/icons/avatars/animal-1.svg","photos/icons/avatars/animal-10.svg","photos/icons/avatars/animal-11.svg","photos/icons/avatars/animal-12.svg","photos/icons/avatars/animal-13.svg","photos/icons/avatars/animal-14.svg","photos/icons/avatars/animal-15.svg","photos/icons/avatars/animal-16.svg","photos/icons/avatars/animal-17.svg","photos/icons/avatars/animal-18.svg","photos/icons/avatars/animal-19.svg","photos/icons/avatars/animal-2.svg","photos/icons/avatars/animal-20.svg","photos/icons/avatars/animal-21.svg","photos/icons/avatars/animal-22.svg","photos/icons/avatars/animal-23.svg","photos/icons/avatars/animal-24.svg","photos/icons/avatars/animal-25.svg","photos/icons/avatars/animal-26.svg","photos/icons/avatars/animal-27.svg","photos/icons/avatars/animal-28.svg","photos/icons/avatars/animal-29.svg","photos/icons/avatars/animal-3.svg","photos/icons/avatars/animal-30.svg","photos/icons/avatars/animal-31.svg","photos/icons/avatars/animal-32.svg","photos/icons/avatars/animal-33.svg","photos/icons/avatars/animal-34.svg","photos/icons/avatars/animal-35.svg","photos/icons/avatars/animal-36.svg","photos/icons/avatars/animal-37.svg","photos/icons/avatars/animal-38.svg","photos/icons/avatars/animal-39.svg","photos/icons/avatars/animal-4.svg","photos/icons/avatars/animal-40.svg","photos/icons/avatars/animal-41.svg"],"names":["injected","InjectedConnector","supportedChainIds","network","NetworkConnector","urls","defaultChainId","useEagerConnect","useWeb3React","activate","active","useState","tried","setTried","useEffect","isAuthorized","then","undefined","catch","Spinner","color","rest","width","height","viewBox","xmlns","stroke","fill","fillRule","transform","strokeWidth","strokeOpacity","cx","cy","r","d","attributeName","type","from","to","dur","repeatCount","abi","require","signerOrProvider","address","ethers","Contract","formatAccountName","account","substring","length","initialThemeState","theme","setTheme","_value","ThemeContext","createContext","ThemeSetter","useContext","checked","setChecked","Switch","className","onChange","event","target","value","ConnectorNames","initialContacts","contacts","name","setContacts","_values","ContactsContext","deb0xERC20Address","connectorsByName","Injected","PermanentDrawer","props","context","connector","library","chainId","deactivate","error","activatingConnector","setActivatingConnector","selectedIndex","setSelectedIndex","ensName","setEnsName","userUnstakedAmount","setUserUnstakedAmount","anchorEl","setAnchorEl","open","Boolean","id","dimensions","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","ScreenSize","notificationState","setNotificationState","networkName","setNetworkName","setUnstakedAmount","a","deb0xERC20Contract","Deb0xERC20","balanceOf","balance","utils","formatEther","lookupAddress","handleClick","currentTarget","handleChange","text","index","localStorage","removeItem","checkENS","forEach","providers","getNetwork","display","setDisplay","Snackbar","state","Box","sx","CssBaseline","AppBar","Button","variant","onClick","currentConnector","activating","connected","toLowerCase","Popper","List","ListItem","Drawer","anchor","map","button","selected","ListItemIcon","src","add","trophy","ListItemText","primary","contact","displayAddress","IconButton","size","navigator","clipboard","writeText","message","severity","fontSize","setItem","JSON","stringify","default","alt","href","deb0xAddress","steps","HorizontalLinearStepper","encryptionKey","setEncryptionKey","activeStep","setActiveStep","whichStepFailed","setStepFailed","loading","setLoading","handleNext","prevActiveStep","provider","request","method","params","result","getSigner","signer","deb0xContract","Deb0x","setKey","wait","onDeboxInitialization","maxWidth","Stepper","label","labelProps","optional","Typography","Step","StepLabel","flexDirection","pt","LoadingButton","marginLeft","ContactsSetter","setName","ref","useRef","onClickOutside","handleClickOutside","current","contains","document","Modal","show","e","readOnly","push","readedMessages","readed","parse","getItem","setReaded","ReadedMessagesContext","ReadedMessagesProvider","children","Provider","Decrypt","encryptionKeyInitialized","setEncryptionKeyInitialized","savedContacts","getPublicEncryptionKey","getKey","key","decrypt","encryptedMessage","decryptedMessage","fetchMessage","axios","get","Message","encryptMessage","fetchedMessage","data","setMessage","messageTime","isDecrypted","setIsDecrypted","Math","floor","random","randomImage","setShow","isReaded","setIsReaded","checkMessageInLocalStorage","element","sender","setPreviousIndex","hideMessage","checkSenderInLocalStorage","user","previousIndex","disablePadding","secondaryAction","edge","ListItemButton","decryptMessage","includes","dangerouslySetInnerHTML","__html","Announcement","Add","GetMessages","fetchedMessages","setFetchedMessages","fetchMessageSenders","senderAddresses","cidsPromises","fetchMessages","cids","Promise","all","encryptedMessagesPromisesArray","cidArray","encryptedMessagesPromises","cid","promise","encryptedMessages","flat","processMessages","CircularProgress","i","Pagination","count","Stake","RewardsPanel","rewardsUnclaimed","setRewardsUnclaimed","feeSharePercentage","setFeeSharePercentage","earnedNative","unclaimedRewards","console","log","parseFloat","balanceERC20","totalSupply","feeShare","round","toFixed","toString","getRewardNative","rewardsAccrued","Card","CardContent","component","CardActions","StakeUnstake","alignment","setAlignment","userStakedAmount","setUserStakedAmount","totalStaked","setTotalStaked","amountToUnstake","setAmountToUnstake","amountToStake","setAmountToStake","approved","setApproved","allowance","approve","parseEther","unStakeERC20","stakeERC20","setStakedAmount","totalAmountStaked","setApproval","ToggleButtonGroup","exclusive","newAlignment","ToggleButton","Divider","Grid","container","spacing","item","TextField","disabled","TotalStaked","token","Sent","recipients","setRecipients","recipientsTemp","recipientsFiltered","filter","recipient","border","marginBottom","Tooltip","title","placement","Stack","direction","Chip","fetchSentMessages","sentMessages","sentMessagesRetrieved","messages","showFirstButton","showLastButton","ThemeProvider","savedThemeLocal","ContactsProvider","create","host","port","protocol","Network","getLibrary","Web3Provider","pollingInterval","App","errorMsg","selectedOption","setSelectedOption","triedEager","ethereum","displayErrorMsg","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","symbol","decimals","suppress","on","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","switchNetwork","err","style","alignItems","marginTop","newValue","Encrypt","textAlign","mt","elephant","logoGreen","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","Alert","forwardRef","elevation","SnackbarNotification","setState","handleClose","reason","autoHideDuration","onClose","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports","ethUtil","client","textToEncrypt","setTextToEncrypt","senderAddress","setSenderAddress","messageSessionSentCounter","setMessageSessionSentCounter","estimatedReward","addressList","setAddressList","setError","input","isInList","encryptText","messageToEncrypt","destinationAddresses","getAddress","destinationAddressEncryptionKey","bufferToHex","Buffer","encrypt","publicKey","version","path","overrides","parseUnits","send","tx","match","EditorState","createEmpty","editorState","setEditorState","sendContent","draftToHtml","convertToRaw","getCurrentContent","noValidate","autoComplete","placeholder","onPaste","evt","preventDefault","addresses","clipboardData","getData","toBeAdded","onKeyDown","trim","isAddress","isValid","margin","onDelete","deleteIcon","onEditorStateChange","toolbarClassName","wrapperClassName","editorClassName","justifyContent","mr","endIcon","loadingPosition"],"mappings":"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","file":"static/js/main.a23b954d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/animal-42.db86b736.svg\";","export default __webpack_public_path__ + \"static/media/animal-43.1b46c38c.svg\";","export default __webpack_public_path__ + \"static/media/animal-44.b84c6b0e.svg\";","export default __webpack_public_path__ + \"static/media/animal-45.b167c63d.svg\";","export default __webpack_public_path__ + \"static/media/animal-46.42d27fee.svg\";","export default __webpack_public_path__ + \"static/media/animal-47.b5150579.svg\";","export default __webpack_public_path__ + \"static/media/animal-48.e200a64c.svg\";","export default __webpack_public_path__ + \"static/media/animal-49.b1bca8d7.svg\";","export default __webpack_public_path__ + \"static/media/animal-5.05a5a1db.svg\";","export default __webpack_public_path__ + \"static/media/animal-50.eb779e9c.svg\";","export default __webpack_public_path__ + \"static/media/animal-6.85ab4489.svg\";","export default __webpack_public_path__ + \"static/media/animal-7.43eccf57.svg\";","export default __webpack_public_path__ + \"static/media/animal-8.ca62010f.svg\";","export default __webpack_public_path__ + \"static/media/animal-9.cfc3406b.svg\";","\nimport { InjectedConnector } from '@web3-react/injected-connector'\nimport { NetworkConnector } from '@web3-react/network-connector'\n\n// const POLLING_INTERVAL = 12000\nconst RPC_URLS: { [chainId: number]: string } = {\n    4: 'https://rinkeby.infura.io/v3/84842078b09946638c03157f83405213'\n}\n\nexport const injected = new InjectedConnector({ supportedChainIds: [4] })\n\nexport const network = new NetworkConnector({\n    urls: { 4: RPC_URLS[4] },\n    defaultChainId: 4\n  })","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from './connectors'\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect((): any => {\n    const { ethereum } = window as any\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\")\n        activate(injected)\n      }\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\n        activate(injected)\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n        if (accounts.length > 0) {\n          activate(injected)\n        }\n      }\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\n        activate(injected)\n      }\n\n      ethereum.on('connect', handleConnect)\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n      ethereum.on('networkChanged', handleNetworkChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate])\n}","export default __webpack_public_path__ + \"static/media/ios-compose.9c72b916.svg\";","export default __webpack_public_path__ + \"static/media/trophy.2c553cfd.svg\";","// <!-- By Sam Herbert (@sherb), for everyone. More @ http://goo.gl/7AJzbL -->\nexport function Spinner({ color, ...rest }: any) {\n    return (\n        <svg width=\"38\" height=\"38\" viewBox=\"0 0 38 38\" \n            xmlns=\"http://www.w3.org/2000/svg\" stroke={color} {...rest}>\n            <g fill=\"none\" fillRule=\"evenodd\">\n                <g transform=\"translate(1 1)\" strokeWidth=\"2\">\n                    <circle strokeOpacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\" />\n                    <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n                    <animateTransform\n                        attributeName=\"transform\"\n                        type=\"rotate\"\n                        from=\"0 18 18\"\n                        to=\"360 18 18\"\n                        dur=\"1s\"\n                        repeatCount=\"indefinite\" />\n                    </path>\n                </g>\n            </g>\n        </svg>\n    )\n}","import { ethers } from \"ethers\";\n\nconst {abi} = require(\"./Deb0xERC20.json\");\n\nexport default (signerOrProvider, address) => {\n    return new ethers.Contract(address, abi, signerOrProvider);\n}","export default function formatAccountName(account: string)\n{\n    return `${account.substring(0, 5)}...${account.substring(account.length - 4)}`\n}","import { createContext } from \"react\";\n\nexport const initialThemeState = {\n  theme: \"classic\",\n  setTheme: (_value: string) => {}\n};\n\nconst ThemeContext = createContext(initialThemeState);\nexport default ThemeContext;","import Switch from \"@mui/material/Switch\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport '../componentsStyling/themeSetter.scss';\n\nimport ThemeContext from \"./Contexts/ThemeContext\";\n\nexport default function ThemeSetter() {\n    const useTheme = () => useContext(ThemeContext);\n    const { theme, setTheme } = useTheme()!;\n    const [checked, setChecked] = useState<boolean>()\n\n    useEffect(() => {\n        if(theme === \"classic\") {\n            setChecked(true);\n        } else {\n            setChecked(false);\n        }\n    }, [])\n\n    const handleChange = (event: any) => {\n        setChecked(event.target.checked);\n        event.target.checked ? setTheme(\"classic\") : setTheme(\"dark\")\n    };\n\n  return (\n    <Switch\n        className=\"theme-switcher\"\n        checked={checked}\n        onChange={handleChange}\n        value=\"checked\"\n    />\n  );\n}\n\nconst themeOptions = [{ value: \"classic\" }, { value: \"dark\" }];","import { createContext } from \"react\";\n\nexport const initialContacts = {\n    contacts: [{\n        name: \"Alex Males\",\n        address: \"0x31dcF3b5F43e7017425E25E5A0F006B6f065c349\"\n    }],\n    setContacts: (_values: any) => {}\n}\n\nconst ContactsContext = createContext(initialContacts);\nexport default ContactsContext;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport AppBar from '@mui/material/AppBar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport SendIcon from '@mui/icons-material/Send';\nimport add from '../../photos/icons/ios-compose.svg';\nimport trophy from '../../photos/icons/trophy.svg';\nimport Button from '@mui/material/Button'\nimport Popper from '@mui/material/Popper'\nimport { injected } from '../../connectors';\nimport { Spinner } from './Spinner'\nimport { useEagerConnect } from '../../hooks';\nimport IconButton from \"@mui/material/IconButton\";\nimport logoDark from \"../../photos/logo-dark.svg\";\nimport logoLight from \"../../photos/logo-light.svg\";\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport Deb0xERC20 from \"../../ethereum/deb0xerc20\"\nimport { ethers } from \"ethers\";\nimport formatAccountName from \"../Common/AccountName\";\nimport \"../../componentsStyling/permanentDrawer.scss\";\nimport ThemeSetter from '../ThemeSetter';\nimport ScreenSize from '../Common/ScreenSize';\nimport ContactsContext from '../Contexts/ContactsContext';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport SnackbarNotification from './Snackbar';\n\nconst deb0xERC20Address = \"0xEde2f177d6Ae8330860B6b37B2F3D767cd2630fe\"\nenum ConnectorNames { Injected = 'Injected' };\n\nconst connectorsByName: { [connectorName in ConnectorNames]: any } = {\n    [ConnectorNames.Injected]: injected\n}\n\ndeclare global {\n    interface Window {\n        ethereum: any;\n    }\n}\n\nexport function PermanentDrawer(props: any): any {\n    const context = useWeb3React()\n    const { connector, library, chainId, account, activate, deactivate, active, error } = context\n    const [activatingConnector, setActivatingConnector] = useState<any>()\n    const triedEager = useEagerConnect()\n    const [selectedIndex, setSelectedIndex] = useState<any>(1);\n    const [searchBarValue, setSearchBarValue] = useState<any>(\"search\");\n    const [ensName, setEnsName] = useState<any>(\"\");\n    // const [balance, setBalance] = useState<any>(\"8.13\");\n    const [userUnstakedAmount,setUserUnstakedAmount] = useState<any>(0);\n    const menuItems = ['Compose', 'Deb0x', 'Stake', 'Sent'];\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popper' : undefined;\n    const dimensions = ScreenSize();\n    const useContacts = () => useContext(ContactsContext);\n    const { contacts, setContacts } = useContacts()!;\n    const [notificationState, setNotificationState] = useState({});\n    const [networkName, setNetworkName] = useState<any>();\n    let errorMessage;\n\n    if(library){\n        checkENS();\n        setUnstakedAmount();\n    }\n\n    useEffect(() => {\n        injected.supportedChainIds?.forEach(chainId => \n            setNetworkName((ethers.providers.getNetwork(chainId).name)));\n        if (activatingConnector && activatingConnector === connector) {\n            setActivatingConnector(undefined)\n        }\n    }, [activatingConnector, connector])\n\n    async function setUnstakedAmount() {\n        const deb0xERC20Contract = Deb0xERC20(library, deb0xERC20Address)\n        if(account){\n            const balance = await deb0xERC20Contract.balanceOf(account)\n            setUserUnstakedAmount(ethers.utils.formatEther(balance))\n        }\n    }\n\n    async function checkENS(){\n \n        var name = await library.lookupAddress(account);\n        if(name !== null)\n        {   \n            setEnsName(name);\n        }\n    }\n\n    useEffect(() => {\n        setUnstakedAmount();\n    },[userUnstakedAmount])\n\n    function handleClick (event: React.MouseEvent<HTMLElement>) {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n    };\n\n    function handleChange(text: any, index: any) {\n        setSelectedIndex(index)\n        props.onChange(text)\n        if(index !== 0)\n            localStorage.removeItem('input')\n    }\n\n    const [display, setDisplay] = useState();\n\n    function displayAddress(index: any) {\n        display === index ? setDisplay(undefined) : setDisplay(index);\n    }\n\n    function getErrorMessage(error: string) {\n        errorMessage = error;\n        return errorMessage;\n    }\n\n    return (\n        <>\n            {/* <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                {!!errorMessage && \n                    <p className='alert alert-danger position-fixed' style={{ marginTop: '4rem', marginBottom: '0' }}>\n                        {getErrorMessage(errorMessage)}\n                    </p>\n                }\n            </div> */}\n            <SnackbarNotification state={notificationState} \n                setNotificationState={setNotificationState} />\n            <Box sx={{ display: 'flex' }}>\n                <CssBaseline />\n                <AppBar className=\"app-bar--top\">\n                    <Box className=\"main-menu--right\">\n                    { account  ? \n                        <>\n                            {/* <Paper component=\"form\">\n                                <InputBase\n                                    placeholder=\"Search messages\"\n                                    inputProps={{ \"aria-label\": \"search\" }}\n                                    className=\"search-input\" />\n                                <IconButton type=\"submit\" aria-label=\"search\">\n                                    <SearchIcon />\n                                </IconButton>\n                            </Paper> */}\n                            <Button variant =\"contained\"\n                                    onClick={() => handleChange(\"Stake\", 2)}>\n                                {userUnstakedAmount} DBX\n                            </Button>\n                        </>\n                        : \n                        null }\n                    \n                    { (() =>  {\n                        const currentConnector = connectorsByName[ConnectorNames.Injected]\n                        const activating = currentConnector === activatingConnector\n                        const connected = currentConnector === connector\n                        const disabled = !triedEager || !!activatingConnector || connected || !!error\n\n                        return (\n                            <Button variant=\"contained\"\n                                key={ConnectorNames.Injected}\n                                aria-describedby={id}\n                                onClick={!connected ? \n                                    () => {\n                                        setActivatingConnector(currentConnector)\n                                        activate(currentConnector)\n                                    } : \n                                    handleClick\n                                }>\n                                \n                                { activating ? \n                                    <Spinner color={'black'} /> :\n                                    !connected ? \n                                        \"Connect Wallet\" :\n                                        <span>\n                                            {account === undefined ? \n                                                `Unsupported Network. Switch to ${networkName}` : \n                                                account ? \n                                                    ensName === \"\" ? \n                                                        `${formatAccountName(account)}` :\n                                                        `${ensName.toLowerCase()} \n                                                        (${formatAccountName(account)})`\n                                                : ''}\n                                        </span>\n                                }\n                            </Button>\n                        )\n                    }) ()}\n                            \n                        <ThemeSetter />\n                    </Box>\n                </AppBar>\n                <Popper className=\"popper\" id={id} open={open} anchorEl={anchorEl}>\n                    <List>\n                        \n                        <ListItem className='logout'>\n                            <Button \n                                onClick={(event: any) => {\n                                    handleClick(event)\n                                    deactivate()\n                                }}\n                                className=\"logout-btn\">\n                                Logout \n                            </Button>\n                        </ListItem>\n                    </List>\n                </Popper>\n                <Drawer variant=\"permanent\"\n                    anchor={dimensions.width > 768 ? 'left' : 'bottom'}\n                    className=\"side-menu\">\n                    <div className=\"image-container\">\n                        <div className=\"img\"></div>\n                    </div>\n                    { account  && \n                        <List className=\"menu-list\">\n                            {menuItems.map((text, index) => (\n                                <>\n                                    <ListItem button key={text} \n                                        selected={selectedIndex === index} \n                                        onClick={() => handleChange(text, index)}\n                                        className={`list-item ${index === 0 ? \"send-item\" : \"\"}` }>\n                                        \n                                        <ListItemIcon className=\"icon\" >\n                                            {index === 0 && <img src={add} />}\n                                            {index === 1 && <InboxIcon />} \n                                            {index === 2 && <img src={trophy} />}\n                                            {index === 3 && <SendIcon className=\"sent-icon-color\"/>}\n                                        </ListItemIcon>\n                                        <ListItemText className=\"text\" primary={text} />\n                                    </ListItem>\n                                </>\n                            ))}\n                        </List>\n                    }\n                    \n                    <div className=\"side-menu--bottom\">\n                        <>\n                            { account && \n                                <div className=\"contacts\">\n                                    <List>\n                                        <p>Contacts</p>\n                                        {\n                                            contacts.map((contact: any, index: any) => (\n                                                    <>\n                                                    <ListItem button key={contact.name}\n                                                        onClick={() => displayAddress(index)}>\n                                                        <ListItemText className=\"text\" primary={contact.name} />\n                                                    </ListItem>\n                                                    {display == index ? \n                                                        <ListItem className=\"row contact-item\" key={index}>\n                                                            <ListItemText className=\"text col-8\" primary={contact.address} />\n                                                            <div className=\"col-4 buttons\">\n                                                                <IconButton size=\"small\"\n                                                                    onClick={() => {\n                                                                            navigator.clipboard.writeText(contact.address);\n                                                                            setNotificationState({\n                                                                                message: \"Address added to clipboard.\",\n                                                                                open: true,\n                                                                                severity: \"success\"\n                                                                            })\n                                                                        }}>\n                                                                    <ContentCopyIcon fontSize=\"small\"/>\n                                                                </IconButton>\n                                                                <IconButton size=\"small\"\n                                                                    onClick={() => {\n                                                                        setNotificationState({})\n                                                                        localStorage.setItem(\"input\", JSON.stringify(contact.address))\n                                                                        handleChange(\"Compose\", 0)\n                                                                    }}>\n                                                                    <SendIcon fontSize=\"small\"/>\n                                                                </IconButton>\n                                                            </div>\n                                                        </ListItem>\n                                                        : <></>}\n                                                    </>\n                                            ))\n                                        }\n                                    </List>\n                                </div>\n                            }\n                            <div className=\"plus-full-circle\">\n                                <img src={require(`../../photos/icons/plus-circle-fill.svg`).default} alt=\"plus-circle-fill\"></img>\n                                <div className=\"add-new\">Add new</div>\n                            </div>\n                            <div className=\"content\">\n                                <a href=\"https://github.com/deb0x\" target=\"_blank\">\n                                <GitHubIcon  />\n                                </a>\n                                <a href=\"https://www.deb0x.org\" target=\"_blank\">\n                                    www.deb0x.org\n                                </a>\n                            </div>\n                        </>\n                    </div>\n                </Drawer>\n            </Box>\n        </>\n    );\n}","import React, { useState, useEffect } from 'react'\n\nexport default function useWindowSize() {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n      width: 0,\n      height: 0,\n    });\n    useEffect(() => {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight,\n        });\n      }\n      // Add event listener\n      window.addEventListener(\"resize\", handleResize);\n      // Call handler right away so state gets updated with initial window size\n      handleResize();\n      // Remove event listener on cleanup\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n    return windowSize;\n  }","import {useState, Fragment} from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport Typography from '@mui/material/Typography';\nimport Deb0x from \"../../ethereum/deb0x\"\nimport SnackbarNotification from './Snackbar';\nimport '../../componentsStyling/stepper.scss';\nconst deb0xAddress = \"0x13dA6EDcdD7F488AF56D0804dFF54Eb17f41Cc61\";\nconst steps = ['Provide public encryption key', 'Initialize Deb0x'];\n\nexport default function HorizontalLinearStepper(props: any) {\n    const { account, library } = useWeb3React()\n    const [encryptionKey, setEncryptionKey] = useState('')\n    const [activeStep, setActiveStep] = useState(0);\n    const [whichStepFailed, setStepFailed] = useState<number | undefined>(undefined)\n    const [loading, setLoading] = useState(false)\n    const [notificationState, setNotificationState] = useState({})\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    async function getEncryptionKey() {\n        setLoading(true)\n\n        library.provider.request({\n            method: 'eth_getEncryptionPublicKey',\n            params: [account],\n        })\n            .then((result: any) => {\n                setEncryptionKey(result);\n                handleNext()\n                setStepFailed(undefined)\n                setLoading(false)\n                \n            })\n            .catch((error: any) => {\n                setNotificationState({message: \"You rejected to provide the public encryption key.\", open: true,\n                severity:\"info\"})\n                setStepFailed(0)\n                setLoading(false)\n            });\n        \n    }\n\n    async function initializeDeb0x() {\n        setLoading(true)\n\n        const signer = await library.getSigner(0)\n\n        const deb0xContract = Deb0x(signer, deb0xAddress)\n\n        try {\n            const tx = await deb0xContract.setKey(encryptionKey)\n\n            tx.wait()\n            .then((result: any) => {\n                setNotificationState({message: \"Deb0x was succesfully initialized.\", open: true,\n                severity:\"success\"})\n                setLoading(false)\n                props.onDeboxInitialization(true)\n                \n            })\n            .catch((error: any) => {\n                setNotificationState({message: \"Deb0x couldn't be initialized!\", open: true,\n                severity:\"error\"})\n                setLoading(false)\n            })\n        } catch(error: any) {\n            setNotificationState({message: \"You rejected the transaction. Deb0x was not initialized.\", open: true,\n                severity:\"info\"})\n                setLoading(false)\n        }\n\n    }\n\n    return (\n        <>\n            <SnackbarNotification state={notificationState} setNotificationState={setNotificationState}/>\n            <Box className=\"stepper-box\" sx={{ width: '100%', maxWidth: 1080 }}>\n                <Stepper activeStep={activeStep} className=\"stepper\">\n                    {steps.map((label, index) => {\n                        const stepProps: { completed?: boolean } = {};\n                        const labelProps: {\n                            optional?: React.ReactNode;\n                            error?: boolean;\n                        } = {};\n                        if (whichStepFailed === index) {\n                            labelProps.optional = (\n                            <Typography variant=\"caption\" color=\"error\">\n                                {(activeStep === 0) ? \"User didn't provide encryption key\" : \"User rejected transaction\"}\n                            </Typography>\n                            );\n                            labelProps.error = true;\n                        }\n                        return (\n                            <Step key={label} {...stepProps}>\n                                <StepLabel {...labelProps} >{label} </StepLabel>\n                            </Step>\n                        );\n                    })}\n                </Stepper>\n                {<Fragment>\n                    <Box className=\"button-box\" sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n                        <LoadingButton className=\"init-btn\" loading={loading} sx={{ marginLeft: 5 }} variant=\"contained\" onClick={\n                            (activeStep === 0) ? getEncryptionKey : initializeDeb0x\n                        }>\n                            {activeStep === steps.length - 1 ? 'Initialize' : 'Provide'}\n                        </LoadingButton>\n                    </Box>\n                </Fragment>\n                }\n            </Box>\n        </>\n    );\n}\n","import { Add } from \"@mui/icons-material\";\nimport { Box, IconButton, Modal } from \"@mui/material\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\n\nimport ContactsContext from \"./Contexts/ContactsContext\";\n\nexport default function ContactsSetter(props: any) {\n    const useContacts = () => useContext(ContactsContext);\n    const { contacts, setContacts } = useContacts()!;\n    const [name, setName] = useState<string>(\"\");\n    const [address, setAddress] = useState<string>(props.props);\n    const ref = useRef<any>(null);\n    const { onClickOutside } = props;\n\n    const addContact = () => {\n        contacts.push({name: name, address: address})\n        setContacts([...contacts])\n        onClickOutside && onClickOutside();\n    }\n\n    useEffect(() => {\n        localStorage.setItem('contacts', JSON.stringify(contacts));\n    }, [contacts, localStorage]);\n\n    useEffect(() => {\n        const handleClickOutside = (event: any) => {\n            if (ref.current && !ref.current.contains(event.target)) {\n                onClickOutside && onClickOutside();\n            }\n        };\n        document.addEventListener('click', handleClickOutside, true);\n        return () => {\n            document.removeEventListener('click', handleClickOutside, true);\n        };\n    }, [ onClickOutside ]);\n\n    return (\n        <>\n            <Modal open={props.show}>\n                <Box ref={ref} className=\"modal-box\">\n                    <form>\n                        <div className=\"form-group\">\n                            <label>Name</label>\n                            <input key=\"name\" className=\"form-control\"\n                                onChange={(e) => setName(e.currentTarget.value)}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Address</label>\n                            <input readOnly key=\"address\" className=\"form-control\"\n                                value={props.props}/>\n                        </div>\n                        <button className=\"btn btn-outline-dark mt-2\" type=\"button\"\n                            onClick={addContact}>\n                            ADD\n                        </button>\n                    </form>\n                </Box>\n            </Modal>\n        </>\n    );\n}","import { createContext } from \"react\";\n\ntype ReadedMessages = {\n    readed: string[],\n    setReaded: (_values: any) => void\n}\n\nexport const readedMessages: ReadedMessages = {\n    readed: JSON.parse(localStorage.getItem('messages') || '[]'),\n    setReaded: (_values: any) => {}\n};\n\nconst ReadedMessagesContext = createContext(readedMessages);\nexport default ReadedMessagesContext;","import { useState, useEffect } from \"react\";\nimport ReadedMessagesContext, { readedMessages } from './ReadedMessagesContext';\n\ntype Props = {\n    children: JSX.Element|JSX.Element[],\n};\n\nconst ReadedMessagesProvider = ( { children }: Props ) => {\n    const [readed, setReaded] = useState<any>(readedMessages.readed);\n  \n    const localStorage = window.localStorage;  \n  \n    useEffect(() => {\n        localStorage.setItem('messages', JSON.stringify(readed));\n    }, [readed, localStorage]);\n    \n    return (\n      <ReadedMessagesContext.Provider value={{ readed, setReaded }}>\n        <>{children}</>\n      </ReadedMessagesContext.Provider>\n    );\n  };\n  \n  export default ReadedMessagesProvider;","import { useState, useEffect, useContext, createContext } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport Deb0x from \"../../ethereum/deb0x\"\nimport {\n    Tooltip, List, ListItem, ListItemText, ListItemButton, Typography, Box, \n    CircularProgress,\n    Button,\n    Modal\n} from '@mui/material';\nimport Stepper from './Stepper'\nimport IconButton from \"@mui/material/IconButton\";\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport Pagination from \"@mui/material/Pagination\";\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\nimport axios from 'axios';\nimport formatAccountName from \"../Common/AccountName\";\nimport \"../../componentsStyling/decrypt.scss\"\nimport { Add } from '@mui/icons-material';\nimport { Announcement } from '@mui/icons-material';\nimport ContactsSetter from '../ContactsSetter';\nimport lock from '../../photos/lock.svg';\nimport airplane from '../../photos/airplane.svg';\nimport users from '../../photos/users.svg';\nimport hand from '../../photos/hand.svg';\nimport avatar from '../../photos/icons/avatars/test-avatar-1.svg';\nimport ReadedMessagesContext from '../Contexts/ReadedMessagesContext';\nimport ReadedMessagesProvider from '../Contexts/ReadedMessagesProvider';\n\nconst deb0xAddress = \"0x13dA6EDcdD7F488AF56D0804dFF54Eb17f41Cc61\";\n\nexport function Decrypt(props: any): any {\n    const { account, library } = useWeb3React()\n    const [loading, setLoading] = useState(true)\n    const [encryptionKeyInitialized, setEncryptionKeyInitialized] = \n        useState<boolean|undefined>(undefined);\n    const [decrypted, setDecrypted] = useState<any>();\n    const savedContacts = JSON.parse(localStorage.getItem('contacts') || 'null'); \n\n\n    useEffect(() => {\n        setLoading(true)\n        getPublicEncryptionKey()\n    }, [account]);\n\n    const getPublicEncryptionKey = async () => {\n        const deb0xContract = Deb0x(library, deb0xAddress)\n        const key = await deb0xContract.getKey(account)\n        const initialized = (key != '') ? true : false\n        setEncryptionKeyInitialized(initialized)\n    }\n\n    async function decrypt(encryptedMessage: any) {\n        try {\n            const decryptedMessage = await library.provider.request({\n                method: 'eth_decrypt',\n                params: [encryptedMessage, account],\n            });\n            return decryptedMessage\n        } catch (error) {\n            return undefined\n        }\n    }\n\n    async function fetchMessage(message: any) {\n        return await axios.get(`https://ipfs.io/ipfs/${message}`)\n    }\n\n    function Message(props: any) {\n        const encryptMessage = props.message.fetchedMessage.data\n        const [message, setMessage] =\n            useState(props.message.fetchedMessage.data)\n        const [ensName,setEnsName] = useState(\"\");\n        //const [sender, setSender] = useState(props.messsage.sender)\n        const [messageTime, setMessageTime] = useState(\"Mar 17, 18:36\")\n        const [isDecrypted, setIsDecrypted] = useState(false);\n        const min = 1;\n        const max = 50;\n        const [randomImage, ] = useState<number>(Math.floor(Math.random() * (max - min + 1)) + min);\n        let [show, setShow] = useState(false);\n        const [isReaded, setIsReaded] = useState(false);\n        \n        const useMessages = () => useContext(ReadedMessagesContext)\n        const {readed, setReaded} = useMessages()!;\n\n        useEffect(()=>{\n            checkENS();\n        },[])\n\n        const addMessage = () => {\n            let messageList = JSON.parse(localStorage.getItem('messages') || 'null');\n            if(!messageList.includes(message)) {\n                readed.push(message);\n                setReaded([...readed]);\n            }\n        }\n\n        useEffect(() => {\n            localStorage.setItem('messages', JSON.stringify(readed));\n            checkMessageInLocalStorage();\n        })\n\n        const checkMessageInLocalStorage = () => {\n            let messageList = JSON.parse(localStorage.getItem('messages') || 'null');\n            messageList.map((element: any) => {\n                if (element === message)\n                    setIsReaded(true);\n            })\n        }\n\n        useEffect(()=>{\n            if(props.index !== props.previousIndex && isDecrypted===true){\n                hideMessage();\n            }\n\n        },[props.previousIndex])\n\n\n        async function checkENS() {\n            let name = await library.lookupAddress(props.message.sender);\n            if(name !== null) {   \n                setEnsName(name);\n            }\n        }\n\n        async function decryptMessage() {\n            const decryptedMessage = await decrypt(message)\n            \n            if(decryptedMessage) {\n                setIsDecrypted(false);\n                setMessage(decryptedMessage);\n                setIsDecrypted(true);\n                props.setPreviousIndex(props.index);\n            }\n\n            checkMessageInLocalStorage();\n        }\n\n        async function hideMessage() {\n            setMessage(encryptMessage);\n            setIsDecrypted(false);\n        }\n\n        function checkSenderInLocalStorage(sender: any) {\n            let user = '';\n\n            if (ensName !== \"\") {\n                user = ensName;\n            } else {\n                savedContacts.forEach((contact: any) => {\n                    if (sender == contact.address) {\n                        user = contact.name;\n                    } else {\n                        user = formatAccountName(\n                            props.message.sender\n                        )\n                    }\n                })\n            }\n\n            return user;\n        }\n\n        return (\n            <ReadedMessagesProvider>\n                <ListItem\n                    disablePadding \n                    key={props.index}    \n                    secondaryAction={ \n                        <IconButton className={`${\n                                (message !== props.message.fetchedMessage.data) ? \n                                \"list-item-btn\" : \"\"}`\n                            }  \n                            onClick={()=>{hideMessage()}}  \n                            edge=\"end\" \n                            aria-label=\"comments\">\n                            { (message !== props.message.fetchedMessage.data) ? \n                                <VisibilityOffIcon className='visibility-icon' /> : null\n                            }\n                        </IconButton>  \n                    }\n                    className={`messages-list-item card ${isReaded ? \"read\" : \"unread\"}` }>\n                    <ListItemButton \n                        className={`list-item-button ${isDecrypted ? \"active\" : \"\"}` }\n                        onClick={() => {\n                            if(message === props.message.fetchedMessage.data) {\n                                decryptMessage()\n                            }\n                            addMessage();\n\n                        }}>\n                        <div>\n                            <img width=\"58px\" height=\"58px\" src={require(`../../photos/icons/avatars/animal-${randomImage}.svg`).default} alt=\"avatar\"/>\n                        </div>\n                        <ListItemText primary={\n                            <>\n                                <div className=\"message-left\">\n                                    <div className=\"message-heading\">\n                                        <p>From: \n                                            {\n                                                checkSenderInLocalStorage(props.message.sender)\n                                            }\n                                        </p>\n                                        <p className=\"time-stamp\">\n                                            {messageTime}\n                                        </p>\n                                    </div>\n                                    <div className=\"message-container\">\n                                        <p className=\"message message-overflow\"\n                                            dangerouslySetInnerHTML={{ __html: message }} />\n                                        <Announcement className=\"new-message-icon\" />\n                                    </div>\n                                </div>\n                                {isDecrypted ? \n                                    <div className=\"message-right\">\n                                        <div className=\"message-heading\">\n                                            <div className=\"address\">\n                                                <p>From: \n                                                    <strong>\n                                                        {\n                                                            checkSenderInLocalStorage(props.message.sender)\n                                                        }\n                                                    </strong>\n                                                </p>\n                                                <>\n                                                    <IconButton onClick={() => setShow(true)}>\n                                                        <Add />\n                                                    </IconButton>\n                                                    <ContactsSetter show={show} props={props.message.sender} onClickOutside={() => setShow(false)}/>\n                                                </>\n                                            </div>\n                                            \n                                        </div>\n                                        <p className=\"date-for-open-message\">\n                                            <small className=\"for-date\">\n                                                {messageTime}\n                                            </small>\n                                        </p>\n                                        <p className=\"message\" \n                                            dangerouslySetInnerHTML={{ __html: message }} />\n                                    </div> : \n                                    <></> \n                                }\n                            </> \n                        }/>\n                    </ListItemButton>\n                </ListItem>\n            </ReadedMessagesProvider>\n        )\n    }\n\n    function GetMessages() {\n        const [fetchedMessages, setFetchedMessages] = useState<any>([])\n        const [previousIndex, setPreviousIndex] = useState<number>();\n\n        useEffect(() => {\n            processMessages()\n        }, []);\n\n\n\n        async function processMessages() {\n            const deb0xContract = Deb0x(library, deb0xAddress)\n            const senderAddresses = \n                await deb0xContract.fetchMessageSenders(account)\n            const cidsPromises = \n                senderAddresses.map(async function(sender:any) {\n                    return { \n                        cids: await deb0xContract.fetchMessages(account, sender),\n                        sender: sender\n                    }\n                })\n\n            const cids = await Promise.all(cidsPromises)\n\n            const encryptedMessagesPromisesArray = \n                cids.map(async function(cidArray: any) {\n                    const encryptedMessagesPromises = \n                        cidArray.cids.map(async function (cid: any) {\n                            return { \n                                fetchedMessage: await fetchMessage(cid),\n                                sender: cidArray.sender\n                            }\n                        })\n                    const promise = await Promise.all(encryptedMessagesPromises)\n\n                    return promise\n                })\n\n            const encryptedMessages = \n                await Promise.all(encryptedMessagesPromisesArray)\n            \n            setFetchedMessages(encryptedMessages.flat())\n            setLoading(false)\n\n        }\n\n        if(!loading) {\n            if (fetchedMessages.length === 0) {\n                return (\n                    <div className='clouds'>\n                        <div className=\"cloudOne\">\n                            <img src={require(`../../photos/icons/clouds/cloud-2.svg`).default} alt=\"cloud-1\" />\n                        </div>\n                        <div className=\"cloudTwo\">\n                            <img src={require(`../../photos/icons/clouds/cloud-1.svg`).default} alt=\"cloud-2\" />\n                        </div>\n                        <div className=\"cloudThree\">\n                            <img src={require(`../../photos/icons/clouds/cloud-3.svg`).default} alt=\"cloud-3\" />\n                        </div>\n                        <div className=\"cloudText\">\n                            Cloudy with a chance of messages\n                        </div>\n                    </div>\n                )\n            } else {\n                return (\n                    <div className=\"row messages-list\">\n                        <List className=\"col-md-4 col-sm-12\">\n                            {fetchedMessages.map((message: any, i: any) => {\n                                return (\n                                    <Message message={message} index={i} \n                                        key={i} previousIndex={previousIndex} \n                                        setPreviousIndex={setPreviousIndex} />\n                                )\n                            })}\n                        </List>\n                        <Box className=\"corner-image col-md-8\">\n                            <div>\n                                \n                            </div>\n                        </Box>\n                    </div>\n                )\n            }\n        } else {\n            return (\n                <div className=\"spinner\">\n                    <CircularProgress/>\n                </div>\n            )\n        }\n    }\n    \n    if (encryptionKeyInitialized === true) {\n        return (\n            <div className=\"content-box\">\n                <Box>\n                    <Box className=\"pagination\" sx={{display:\"flex\"}}>\n                        <Pagination count={1} />\n                        <IconButton size=\"large\" onClick={()=> setLoading(true) }>\n                            <RefreshIcon fontSize=\"large\"/>\n                        </IconButton>\n                    </Box>\n                    <Box>\n                        <GetMessages />\n                    </Box>\n                </Box>\n            </div>\n        )\n    } else if (encryptionKeyInitialized === false) {\n        return (\n            <Stepper onDeboxInitialization={getPublicEncryptionKey}/>\n        )\n    } else {\n        return(\n            <div className=\"spinner\">\n                <CircularProgress/>\n            </div>\n        )\n    }\n}","export default __webpack_public_path__ + \"static/media/token.0bd78e9a.svg\";","import { useState, useEffect } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport {\n    Card, CardActions, CardContent, Button, Grid,\n    Typography, TextField, Divider,Box\n} from '@mui/material';\n\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport Deb0x from \"../../ethereum/deb0x\"\nimport Deb0xERC20 from \"../../ethereum/deb0xerc20\"\nimport SnackbarNotification from './Snackbar';\nimport { ethers } from \"ethers\";\nimport \"../../componentsStyling/stake.scss\";\nimport token from \"../../photos/icons/token.svg\"\n\nconst deb0xAddress = \"0x13dA6EDcdD7F488AF56D0804dFF54Eb17f41Cc61\"\nconst deb0xERC20Address = \"0xEde2f177d6Ae8330860B6b37B2F3D767cd2630fe\"\n\nexport function Stake(props: any): any {\n    const { account, library } = useWeb3React()\n    const [notificationState, setNotificationState] = useState({})\n\n    useEffect(() => {\n        console.log(\"stake component effect\")\n    });\n    \n    function RewardsPanel() {\n\n        const [rewardsUnclaimed, setRewardsUnclaimed] = useState(\"\")\n        const [feeSharePercentage, setFeeSharePercentage] = useState(\"\")\n        const [loading, setLoading] = useState(false)\n\n        useEffect(() => {\n            console.log(\"rewards effect\")\n            rewardsAccrued()\n        }, [rewardsUnclaimed]);\n\n        useEffect(() => {\n            console.log(\"fee share effect\")\n            feeShare()\n        }, [feeSharePercentage]);\n\n        async function rewardsAccrued() {\n            const deb0xContract = await Deb0x(library, deb0xAddress)\n\n            const unclaimedRewards = await deb0xContract.earnedNative(account);\n\n            setRewardsUnclaimed(ethers.utils.formatEther(unclaimedRewards))\n        }\n\n        async function feeShare() {\n            console.log(\"aicii\")\n            const deb0xContract = await Deb0x(library, deb0xAddress)\n            console.log(\"1\")\n            \n            let balance = parseFloat((ethers.utils.formatEther((await deb0xContract.balanceERC20(account)) )) )\n            console.log(balance + \" balance\")\n            \n            let totalSupply = parseFloat((ethers.utils.formatEther((await deb0xContract.totalSupply())) ))\n            console.log(totalSupply + \" totalSupply\")\n            const feeShare = balance * 100 / totalSupply\n            console.log(feeShare + \" feeShare\")\n            setFeeSharePercentage(((Math.round(feeShare * 100) / 100).toFixed(2)).toString() + \"%\")\n        }\n\n        async function claimRewards() {\n            setLoading(true)\n\n            const signer = await library.getSigner(0)\n\n            const deb0xContract = Deb0x(signer, deb0xAddress)\n\n            try {\n                const tx = await deb0xContract.getRewardNative()\n\n                tx.wait()\n                    .then((result: any) => {\n                        setNotificationState({\n                            message: \"You succesfully claimed your rewards.\", open: true,\n                            severity: \"success\"\n                        })\n                        //setLoading(false)\n\n                    })\n                    .catch((error: any) => {\n                        setNotificationState({\n                            message: \"Rewards couldn't be claimed!\", open: true,\n                            severity: \"error\"\n                        })\n                        setLoading(false)\n                    })\n            } catch (error: any) {\n                setNotificationState({\n                    message: \"You rejected the transaction. Your rewards haven't been claimed.\", open: true,\n                    severity: \"info\"\n                })\n            }\n\n\n        }\n\n        return (\n            <Card variant=\"outlined\" className=\"card-container\">\n                <CardContent>\n                    <Typography variant=\"h4\" component=\"div\">\n                        REWARDS\n                    </Typography>\n                    <Typography>\n                        Your unclaimed rewards:\n                    </Typography>\n                    <Typography variant=\"h6\">\n                        <strong>{rewardsUnclaimed}</strong>\n                    </Typography>\n                    <Typography>\n                        Your share from fees:\n                    </Typography>\n                    <Typography variant=\"h6\">\n                        <strong>{feeSharePercentage}</strong>\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <LoadingButton className=\"submit-btn\" loading={loading} variant=\"contained\" onClick={claimRewards}>Collect</LoadingButton>\n                </CardActions>\n            </Card>\n        )\n    }\n\n\n\n    function StakeUnstake() {\n        const [alignment, setAlignment] = useState(\"stake\");\n\n        const [userStakedAmount, setUserStakedAmount] = useState(\"\")\n        const [userUnstakedAmount, setUserUnstakedAmount] = useState(\"\")\n        const [totalStaked, setTotalStaked] = useState(\"\")\n        const [amountToUnstake, setAmountToUnstake] = useState(\"\")\n        const [amountToStake, setAmountToStake] = useState(\"\")\n        const [loading, setLoading] = useState(false)\n        const [approved, setApproved] = useState<Boolean | null>(false)\n\n        const handleChange = (\n            event: React.MouseEvent<HTMLElement>,\n            newAlignment: string,\n        ) => {\n            setAlignment(newAlignment);\n        };\n\n       \n\n        useEffect(() => {\n            console.log(\"user staked effect\")\n            setStakedAmount()\n        }, [userStakedAmount]);\n\n        useEffect(() => {\n            console.log(\"total staked effect\")\n            totalAmountStaked()\n        }, [totalStaked]);\n\n        useEffect(() => {\n            console.log(\"user unstaked effect\")\n            setUnstakedAmount()\n        }, [userUnstakedAmount]);\n\n        useEffect(() => {\n            console.log(\"approval effect\")\n            setApproval()\n        }, [approved]);\n\n        async function setStakedAmount() {\n\n            const deb0xContract = await Deb0x(library, deb0xAddress)\n\n            const balance = await deb0xContract.balanceERC20(account)\n\n            setUserStakedAmount(ethers.utils.formatEther(balance))\n        }\n\n        async function setUnstakedAmount() {\n            const deb0xERC20Contract = await Deb0xERC20(library, deb0xERC20Address)\n\n            const balance = await deb0xERC20Contract.balanceOf(account)\n\n            setUserUnstakedAmount(ethers.utils.formatEther(balance))\n        }\n\n        async function setApproval() {\n            const deb0xERC20Contract = await Deb0xERC20(library, deb0xERC20Address)\n\n            const allowance = await deb0xERC20Contract.allowance(account, deb0xAddress)\n\n            allowance > 0 ? setApproved(true) : setApproved(false)\n        }\n\n        async function totalAmountStaked() {\n\n            const deb0xContract = await Deb0x(library, deb0xAddress)\n\n            const totalSupply = await deb0xContract.totalSupply()\n\n            setTotalStaked(ethers.utils.formatEther(totalSupply))\n        }\n\n        async function approveStaking() {\n            setLoading(true)\n\n            const signer = await library.getSigner(0)\n\n            const deb0xERC20Contract = await Deb0xERC20(signer, deb0xERC20Address)\n\n            try {\n                const tx = await deb0xERC20Contract.approve(deb0xAddress, ethers.utils.parseEther(\"1000000\"))\n\n                tx.wait()\n                    .then((result: any) => {\n                        setNotificationState({\n                            message: \"Your succesfully approved contract for staking.\", open: true,\n                            severity: \"success\"\n                        })\n                        setLoading(false)\n\n                    })\n                    .catch((error: any) => {\n                        setNotificationState({\n                            message: \"Contract couldn't be approved for staking!\", open: true,\n                            severity: \"error\"\n                        })\n                        setLoading(false)\n                    })\n            } catch (error) {\n                setNotificationState({\n                    message: \"You rejected the transaction. Contract hasn't been approved for staking.\", open: true,\n                    severity: \"info\"\n                })\n                setLoading(false)\n            }\n        }\n\n        async function unstake() {\n            setLoading(true)\n\n            const signer = await library.getSigner(0)\n\n            const deb0xContract = Deb0x(signer, deb0xAddress)\n\n            try {\n                const tx = await deb0xContract.unStakeERC20(ethers.utils.parseEther(amountToUnstake.toString()))\n\n                tx.wait()\n                    .then((result: any) => {\n                        setNotificationState({\n                            message: \"Your tokens were succesfully unstaked.\", open: true,\n                            severity: \"success\"\n                        })\n                        setLoading(false)\n\n                    })\n                    .catch((error: any) => {\n                        setLoading(false)\n                        setNotificationState({\n                            message: \"Your tokens couldn't be unstaked!\", open: true,\n                            severity: \"error\"\n                        })\n\n                    })\n\n            } catch (error: any) {\n                setNotificationState({\n                    message: \"You rejected the transaction. Your tokens haven't been unstaked.\", open: true,\n                    severity: \"info\"\n                })\n                setLoading(false)\n            }\n        }\n\n        async function stake() {\n            setLoading(true)\n\n            const signer = await library.getSigner(0)\n\n            const deb0xContract = Deb0x(signer, deb0xAddress)\n\n            try {\n                const tx = await deb0xContract.stakeERC20(ethers.utils.parseEther(amountToStake.toString()))\n\n                tx.wait()\n                    .then((result: any) => {\n                        setNotificationState({\n                            message: \"Your tokens were succesfully staked.\", open: true,\n                            severity: \"success\"\n                        })\n                        //setLoading(false)\n\n                    })\n                    .catch((error: any) => {\n                        setNotificationState({\n                            message: \"Your tokens couldn't be staked!\", open: true,\n                            severity: \"error\"\n                        })\n                        setLoading(false)\n                    })\n\n            } catch (error: any) {\n                setNotificationState({\n                    message: \"You rejected the transaction. Your tokens haven't been staked.\", open: true,\n                    severity: \"info\"\n                })\n                setLoading(false)\n            }\n        }\n\n        return (\n            <Card variant = \"outlined\" className=\"card-container\">\n                <ToggleButtonGroup\n                    color=\"primary\"\n                    value={alignment}\n                    exclusive\n                    onChange={handleChange}\n                    className=\"tab-container\"\n                >\n                    <ToggleButton className=\"tab-btn\" value=\"stake\">Stake</ToggleButton>\n                    <ToggleButton className=\"tab-btn\" value=\"unstake\">Unstake</ToggleButton>\n\n                </ToggleButtonGroup>\n              \n            {\n                alignment === \"stake\" ?\n                \n                <>\n                <CardContent>\n                    <Typography>\n                        Your staked amount:\n                    </Typography>\n                    <Typography variant=\"h6\">\n                        <strong>{userStakedAmount} DBX</strong>\n                    </Typography>\n                    <Divider className=\"divider-pink\" />\n                    <Typography>\n                        Your tokens in wallet:\n                    </Typography>\n                    <Typography variant=\"h6\">\n                        <strong>{userUnstakedAmount} DBX</strong>\n                    </Typography>\n                    {approved && <Grid className=\"amount-row\" container spacing={2}>\n                        <Grid item>\n                            <TextField id=\"outlined-basic\"\n                                label=\"Amount to stake\"\n                                variant=\"outlined\"\n                                type=\"number\"\n                                value={amountToStake}\n                                onChange={e => setAmountToStake(e.target.value)} />\n                        </Grid>\n                        <Grid className=\"max-btn-container\" item>\n                            <Button className=\"max-btn\" \n                                size=\"small\" variant=\"contained\" color=\"error\" \n                               onClick = {()=>setAmountToStake(userUnstakedAmount)  }>\n                                max\n                            </Button>\n                        </Grid>\n                    </Grid>}\n                </CardContent>\n                <CardActions>\n                    {approved && <LoadingButton disabled={!amountToStake} className=\"submit-btn\" loading={loading} variant=\"contained\" onClick={stake}>Stake</LoadingButton>}\n                    {!approved && <LoadingButton className=\"submit-btn\" loading={loading} variant=\"contained\" onClick={approveStaking}>Approve Staking</LoadingButton>}\n                </CardActions>\n                </>\n                : \n\n                <>\n                <CardContent>\n                    \n                    <Typography>\n                        Your staked amount:\n                    </Typography>\n                    <Typography variant=\"h6\">\n                        <strong>{userStakedAmount} DBX</strong>\n                    </Typography>\n                    <Typography>\n                        Your tokens in wallet:\n                    </Typography>\n                    <Typography variant=\"h6\">\n                        <strong>{userUnstakedAmount} DBX</strong>\n                    </Typography>\n                  \n\n                    <Grid className=\"amount-row\" container spacing={2}>\n                        <Grid item>\n                            <TextField value={amountToUnstake}\n                                id=\"outlined-basic\"\n                                label=\"Amount to unstake\"\n                                variant=\"outlined\"\n                                onChange={e => setAmountToUnstake(e.target.value)}\n                                type=\"number\" />\n                        </Grid>\n                        <Grid className=\"max-btn-container\" item>\n                            <Button className=\"max-btn\"\n                                size=\"small\" variant=\"contained\" color=\"error\" \n                                onClick = {()=>setAmountToUnstake(userStakedAmount)  }>\n                                max\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n                <CardActions>\n                    <LoadingButton className=\"submit-btn\" disabled={!amountToUnstake} loading={loading} variant=\"contained\" onClick={unstake}>Unstake</LoadingButton>\n                </CardActions>\n                </>\n            }\n\n            </Card>\n\n        )\n    }\n\n    function TotalStaked() {\n        const [totalStaked, setTotalStaked] = useState(\"\")\n        useEffect(() => {\n            console.log(\"total staked effect\")\n            totalAmountStaked()\n        }, [totalStaked]);\n    \n        async function totalAmountStaked() {\n    \n            const deb0xContract = await Deb0x(library, deb0xAddress)\n    \n            const totalSupply = await deb0xContract.totalSupply()\n    \n            setTotalStaked(ethers.utils.formatEther(totalSupply))\n        }\n\n        return (\n            <Card className=\"heading-card\">\n                <CardContent>\n                    <Typography variant=\"h5\">\n                        Total tokens staked:\n                    </Typography>\n                    <Typography variant=\"h4\">\n                        <img className=\"logo\" src={token} />\n                        {totalStaked} DBX\n                    </Typography>\n                </CardContent>\n            </Card>\n        )\n    }\n\n    return (\n        <>\n            <SnackbarNotification state={notificationState} setNotificationState={setNotificationState} />\n            <Box className=\"container\">\n                <div className=\"cards-grid\">\n                    <div className='row'>\n                        <Grid item className=\"col col-md-6\">\n                            <TotalStaked/>\n                        </Grid>\n                        <Grid item className=\"col col-md-6\">\n                            <StakeUnstake/>\n                            <RewardsPanel />\n                        </Grid>\n                    </div>\n                </div>\n            </Box>\n        </>\n    )\n}","import { useState, useEffect } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport Deb0x from \"../../ethereum/deb0x\"\nimport {\n    Tooltip, List, ListItem, Chip,\n    ListItemText, ListItemButton, Typography, Box, CircularProgress, Stack\n} from '@mui/material';\nimport Stepper from './Stepper'\nimport IconButton from \"@mui/material/IconButton\";\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport Pagination from \"@mui/material/Pagination\";\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\nimport '../../componentsStyling/decrypt.scss';\nimport empty from '../../photos/empty.png';\nimport formatAccountName from '../Common/AccountName';\n\nconst axios = require('axios')\nconst deb0xAddress = \"0x13dA6EDcdD7F488AF56D0804dFF54Eb17f41Cc61\"\n\nexport function Sent(props: any): any {\n    const { account, library } = useWeb3React()\n    const [loading, setLoading] = useState(true)\n    const [encryptionKeyInitialized, setEncryptionKeyInitialized] = useState<boolean|undefined>(undefined)\n    const [messageSent, setmessageSent] = useState(false);\n\n    useEffect(() => {\n        console.log(\"useEffect\")\n        setLoading(true)\n        getPublicEncryptionKey()\n    }, [account]);\n\n    const getPublicEncryptionKey = async () => {\n        const deb0xContract = Deb0x(library, deb0xAddress)\n        const key = await deb0xContract.getKey(account)\n        const initialized = (key != '') ? true : false\n        setEncryptionKeyInitialized(initialized)\n    }\n\n    async function decrypt(encryptedMessage: any) {\n        try {\n            const decryptedMessage = await library.provider.request({\n                method: 'eth_decrypt',\n                params: [encryptedMessage, account],\n            });\n            return decryptedMessage\n        } catch (error) {\n            return undefined\n        }\n    }\n\n    async function fetchMessage(message: any) {\n        return await axios.get(`https://ipfs.io/ipfs/${message}`)\n    }\n\n    function Message(props: any) {\n        const encryptMessage = props.message.fetchedMessage.data\n        const [message, setMessage] = useState(props.message.fetchedMessage.data)\n        const [recipients, setRecipients] = useState<string[]>([]);\n        //const [sender, setSender] = useState(props.messsage.sender)\n        const [messageTime,setMessageTime] = useState(\"Mar 17, 18:36\")\n        const [ensName,setEnsName] = useState(\"\");\n        const [isDecrypted, setIsDecrypted] = useState(false);\n        const savedContacts = JSON.parse(localStorage.getItem('contacts') || 'null'); \n\n        useEffect(()=> {\n            checkENS();\n        },[])\n\n        useEffect(()=>{\n            if(props.index !== props.previousIndex && isDecrypted===true){\n                hideMessage();\n            }\n\n        },[props.previousIndex])\n\n        async function checkENS(){\n            let recipientsTemp:any = []\n            const recipientsFiltered = props.message.recipients.filter((recipient:any) => recipient != account)\n\n            for(let recipient of recipientsFiltered) {\n                let name = await library.lookupAddress(recipient);\n                if(name !== null)\n                {   \n                    console.log(\"not null\")\n                    recipientsTemp = [...recipientsTemp, name];\n                } else {\n                    recipientsTemp = [...recipientsTemp, recipient];\n                }\n            }\n            \n            setRecipients(recipientsTemp)\n        }\n\n        async function decryptMessage() {\n            const decryptedMessage = await decrypt(message)\n            if(decryptedMessage) {\n                setIsDecrypted(false);\n                setMessage(decryptedMessage);\n                setIsDecrypted(true);\n                props.setPreviousIndex(props.index);\n            }\n        }\n\n        async function hideMessage(){\n            setMessage(encryptMessage);\n            setIsDecrypted(false);\n        }\n\n        function generateRandomNumber() {\n            const min = 1;\n            const max = 50;\n            return Math.floor(Math.random() * (max - min + 1)) + min;\n        }\n\n        \n        function checkSenderInLocalStorage(recipients: any) {\n            let user = '';\n\n            recipients.map((recipient: any) => {\n                if (ensName !== \"\") {\n                    user = ensName;\n                } else {\n                    savedContacts.forEach((contact: any) => {\n                        if (recipient === contact.address) {\n                            user = contact.name;\n                        } else {\n                            user = formatAccountName(\n                                recipient\n                            )\n                        }\n                    })\n                }\n            })\n            return user;\n        }\n    \n        return (\n            <ListItem sx ={{border:1, marginBottom:1}} disablePadding key={props.index}    secondaryAction={ \n                <IconButton className={`${(message != props.message.fetchedMessage.data) ? \"list-item-btn\" : \"\"}`}  \n                        onClick={()=>{hideMessage()}}  edge=\"end\" aria-label=\"comments\">\n                    { (message != props.message.fetchedMessage.data) ? <VisibilityOffIcon  />: null}\n                </IconButton>  \n            }\n                className=\"messages-list-item\"\n            >\n                <Tooltip \n                    title={(message === props.message.fetchedMessage.data) ? \n                    \"Click to decrypt\" : `Sender:${props.message.sender}`} \n                    placement=\"right\">\n                    <ListItemButton className=\"list-item-button\"\n                        onClick={() => {\n                            if(message === props.message.fetchedMessage.data) {\n                                decryptMessage()\n                            }\n                        }}>\n                        <div>\n                        <img width=\"58px\" height=\"58px\" src={require(`../../photos/icons/avatars/animal-${generateRandomNumber()}.svg`).default} alt=\"avatar\"/>\n                        </div>\n                        <ListItemText\n                        primary={\n                        <>\n                            <div className=\"message-left\">\n                                <div className=\"message-heading\">\n                                    <p><small>To: </small></p>\n                                        <Stack direction=\"row\" spacing={1}>\n                                            {\n                                                recipients.map((recipient: any) => {\n                                                    console.log(recipients)\n                                                    return (\n                                                        <Chip\n                                                            key={recipient}\n                                                            color=\"primary\"\n                                                            label={checkSenderInLocalStorage(recipients)}\n                                                            variant=\"outlined\"\n                                                        />\n                                                    )\n                                                })\n                                            }\n                                        </Stack>\n                                    <p><small>{messageTime}</small></p>\n                                </div>\n                                <p className={`message \n                                        ${message === props.message.fetchedMessage.data ? \n                                        \"message-overflow\" : \"\"}` }\n                                    dangerouslySetInnerHTML={{ __html: message }}>\n                                </p>\n                            </div>\n                            {isDecrypted ? \n                                <div className=\"message-right\">\n                                    <div className=\"message-heading\">\n                                        <p><small>To: </small></p>\n                                            <Stack direction=\"row\" spacing={1}>\n                                                {\n                                                    checkSenderInLocalStorage(recipients)\n                                                }\n                                            </Stack>\n                                        <p><small>{messageTime}</small></p>\n                                    </div>\n                                    <p className={`message ${message === props.message.fetchedMessage.data ? \"message-overflow\" : \"\"}` }\n                                        dangerouslySetInnerHTML={{ __html: message }}>\n                                    </p>\n                                </div> : <></>}\n                        </>\n                        \n                        }/>\n                            \n                    </ListItemButton>\n                </Tooltip>\n            </ListItem>\n            )\n    }\n\n    function GetMessages() {\n        const [fetchedMessages, setFetchedMessages] = useState<any>([]);\n        const [previousIndex,setPreviousIndex] = useState<number>();\n\n        useEffect(() => {\n            processMessages()\n        }, []);\n\n        async function processMessages() {\n            const deb0xContract = Deb0x(library, deb0xAddress)\n            \n            const sentMessages = await deb0xContract.fetchSentMessages(account)   \n            console.log(sentMessages)\n\n            const sentMessagesRetrieved = sentMessages.map(async function (item: any) {\n                return { fetchedMessage: await fetchMessage(item.cid), recipients: item.recipients}\n            })\n\n            const messages = await Promise.all(sentMessagesRetrieved)\n\n            setFetchedMessages(messages)\n            setLoading(false)\n        }\n\n        if(!loading) {\n            if (fetchedMessages.length == 0) {\n                return (\n                    <>\n                        <div className='clouds'>\n                            <div className=\"cloudOne\">\n                                <img src={require(`../../photos/icons/clouds/cloud-2.svg`).default} alt=\"cloud-1\" />\n                            </div>\n                            <div className=\"cloudTwo\">\n                                <img src={require(`../../photos/icons/clouds/cloud-1.svg`).default} alt=\"cloud-2\" />\n                            </div>\n                            <div className=\"cloudThree\">\n                                <img src={require(`../../photos/icons/clouds/cloud-3.svg`).default} alt=\"cloud-3\" />\n                            </div>\n                            <div className=\"cloudText\">\n                                Cloudy with a chance of messages\n                            </div>\n                        </div>\n                    </>\n                )\n            } else {\n                return (\n                    <div className=\"row messages-list\">\n                        <List className=\"col-md-4 col-sm-12\">\n                            {fetchedMessages.map((message: any, i: any) => {\n                                return (\n                                    <Message message={message} index={i} \n                                        key={i} previousIndex={previousIndex} \n                                        setPreviousIndex={setPreviousIndex} />\n                                )\n                            })}\n                        </List>\n                        <Box className=\"intro-box sent col-md-8\">\n                            <div className=\"open-message\">\n                                <p>Come on, don't be shy. Open a message</p>\n                            </div>\n                        </Box>\n                    </div>\n                )\n            }\n        } else {\n            return (\n                <div className=\"spinner\">\n                    <CircularProgress/>\n                </div>\n            )\n        }\n\n    }\n    \n    if(encryptionKeyInitialized == true){\n        return (\n            <div className=\"content-box\">\n                <Box>\n                    <Box className=\"pagination\" sx={{display:\"flex\"}}>\n                        <Pagination count={1} showFirstButton showLastButton />\n                        <IconButton size=\"large\" onClick={()=> setLoading(true) }>\n                            <RefreshIcon fontSize=\"large\"/>\n                        </IconButton>\n                    </Box>\n                    <Box>\n                        <GetMessages />\n                    </Box>\n                </Box>\n           </div>\n        )\n    } else if(encryptionKeyInitialized == false){\n        return (\n            <Stepper onDeboxInitialization={getPublicEncryptionKey}/>\n        )\n    } else{\n        return(\n            <div className=\"spinner\">\n                <CircularProgress/>\n            </div>\n        )\n    }\n}","import { useState, useEffect } from \"react\";\nimport ThemeContext, { initialThemeState } from \"./ThemeContext\";\n\ntype Props = {\n    children: JSX.Element|JSX.Element[],\n};\n\nconst ThemeProvider = ( { children }: Props ) => {\n  const [theme, setTheme] = useState<any>(initialThemeState.theme);\n\n  const localStorage = window.localStorage;\n\n  useEffect(() => {\n    const savedThemeLocal = localStorage.getItem(\"globalTheme\");\n\n    if (!!savedThemeLocal) {\n      setTheme(savedThemeLocal);\n    }\n  }, [localStorage]);\n\n  useEffect(() => {\n    localStorage.setItem(\"globalTheme\", theme);\n  }, [theme, localStorage]);\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      <div className={`theme theme--${theme}`}>{children}</div>\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeProvider;\n","import { useState, useEffect } from 'react';\nimport './App.css';\nimport { \n    Web3ReactProvider,\n    useWeb3React,\n    UnsupportedChainIdError\n} from '@web3-react/core';\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { ethers } from \"ethers\";\nimport { useEagerConnect, useInactiveListener } from './hooks'\nimport { PermanentDrawer } from './components/App/PermanentDrawer'\nimport { create } from 'ipfs-http-client'\nimport { Encrypt } from './components/App/Encrypt';\nimport { Decrypt } from './components/App/Decrypt';\nimport {Stake} from './components/App/Stake';\nimport { Sent } from './components/App/Sent';\nimport { Box,Typography, Fab, Button} from '@mui/material';\nimport ThemeProvider from './components/Contexts/ThemeProvider';\nimport './index.scss';\nimport { injected, network } from './connectors';\nimport ContactsProvider from './components/Contexts/ContactsProvider';\nimport elephant from './photos/icons/elephant.svg';\nimport logoGreen from './photos/icons/logo-green.svg';\nimport logoDark from \"./photos/logo-dark.svg\";\nimport { Spinner } from './components/App/Spinner';\n\nconst client = create({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'http'\n})\n\nconst ethUtil = require('ethereumjs-util')\n//old address: 0x218c10BAb451BE6A897db102b2f608bC7D3441a0\n// 0x13dA6EDcdD7F488AF56D0804dFF54Eb17f41Cc61\nconst deb0xAddress = \"0x13dA6EDcdD7F488AF56D0804dFF54Eb17f41Cc61\";\n\n\nenum ConnectorNames { Injected = 'Injected', Network = 'Network' };\n\nconst connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.Network]: network\n}\n\nfunction getErrorMessage(error: Error) {\n    let networkName;\n\n    injected.supportedChainIds?.forEach(chainId => networkName = (ethers.providers.getNetwork(chainId)).name)\n    if (error instanceof NoEthereumProviderError) {\n        return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\n    } else if (error instanceof UnsupportedChainIdError) {\n        return `You're connected to an unsupported network. Switch to ${networkName}`\n    } else if (\n        error instanceof UserRejectedRequestErrorInjected\n    ) {\n        return 'Please authorize this website to access your Ethereum account.'\n    } else {\n        console.error(error)\n        return 'An unknown error occurred. Check the console for more details.'\n    }\n}\n\nfunction getLibrary(provider: any): ethers.providers.Web3Provider {\n  const library = new ethers.providers.Web3Provider(provider)\n\n  library.pollingInterval = 12000\n  return library\n}\n\nexport default function () {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  )\n}\n\nfunction App() {\n    const context = useWeb3React<ethers.providers.Web3Provider>()\n    const { connector, library, chainId, account, active, error, activate } = context\n\n    // handle logic to recognize the connector currently being activated\n    const [activatingConnector, setActivatingConnector] = useState<any>()\n    const [selectedOption, setSelectedOption] = useState('Deb0x');\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const [networkName, setNetworkName] = useState<any>();\n    let errorMsg;\n\n    useEffect(() => {\n        injected.supportedChainIds?.forEach(chainId => \n            setNetworkName((ethers.providers.getNetwork(chainId).name)));\n        if (activatingConnector && activatingConnector === connector) {\n            setActivatingConnector(undefined)\n        }\n    }, [activatingConnector, connector])\n\n    // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n    const triedEager = useEagerConnect()\n\n    // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n    useInactiveListener(!triedEager || !!activatingConnector)\n\n    function handleChange(newValue: any) {\n        setSelectedOption(newValue)\n    }\n\n    useEffect(() => {\n        localStorage.removeItem('input')\n    }, [])\n\n    function handleClick (event: React.MouseEvent<HTMLElement>) {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n    };\n\n    useEffect(() => {    \n        window.ethereum ?\n            window.ethereum.request({method: \"eth_requestAccounts\"}).then(() => {\n                switchNetwork();               \n            }).catch((err: any) => displayErrorMsg(err))\n            : displayErrorMsg(\"Please install MetaMask\")\n        }, [])\n\n    async function switchNetwork() {\n        try {\n            await window.ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{ chainId: \"0x4\"}],\n            }).then(\n                displayErrorMsg(\"You have switched to the right network\")\n            );            \n        } catch (switchError) {\n            try {\n                await window.ethereum.request({\n                method: 'wallet_addEthereumChain',\n                params: [\n                    {\n                        chainId: '0x4', \n                        chainName:'Rinkeby Test Network',\n                        rpcUrls:['https://rinkeby.infura.io/v3/'],                   \n                        blockExplorerUrls:['https://rinkeby.etherscan.io'],  \n                        nativeCurrency: { \n                        symbol:'ETH',   \n                        decimals: 18\n                        }     \n                    }\n                    ]});\n            } catch (err) {\n                displayErrorMsg(\"Cannot switch to the network\");\n            }\n        }\n        \n    }\n\n    function displayErrorMsg(error: string) {\n        errorMsg = error;\n        return errorMsg;\n    }  \n    return (\n\n    <>\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        {!!errorMsg &&\n            <p className='alert alert-danger position-fixed' style={{ marginTop: '4rem', marginBottom: '0' }}>\n                {displayErrorMsg(errorMsg)}\n            </p>\n        }\n    </div>\n    <ThemeProvider>\n        {\n            account ? \n            <ContactsProvider>\n                <div className=\"app-container\">\n                <PermanentDrawer onChange={handleChange}/>\n                {\n                account ? \n                !!(library && account) && (\n                    <Box className=\"main-container\" sx={{marginTop: 12}}>\n                        {selectedOption === \"Compose\" && <Encrypt />}\n                        {selectedOption === \"Deb0x\" && <Decrypt account={account}/>}\n                        {selectedOption === \"Stake\" && <Stake />}\n                        {selectedOption === \"Sent\" && <Sent />}\n                    </Box>\n                ):\n                    <Box className=\"home-page-box\">\n                        <Typography sx={{textAlign:\"center\",color:\"gray\"}} variant=\"h1\">\n                            The End To End Encrypted \n                            <br></br>\n                            Decentralized Email Protocol \n                            <br></br> \n                            Owned By Its Users\n                        </Typography>\n                        <Typography sx={{ mt:10,textAlign:\"center\"}} variant=\"h3\">\n                            Please connect your wallet\n                        </Typography>\n                    </Box>\n                }\n                </div>\n            </ContactsProvider> :\n            <>\n                <div className=\"app-container p-0\">\n                    <div className=\"initial-page\">\n                        <div className=\"row\">\n                            <div className=\"col-md-7 img-container mr-4\">\n                                <img className=\"image--left\" src={elephant} />\n                                <div className=\"img-content\">\n                                    <p>Hey, you!</p>\n                                    \n                                    <p>To use <img className=\"content-logo\" src={logoGreen} /> you need to have your wallet connected</p>\n                                    <div>\n                                    { (() =>  {\n                                        const currentConnector = connectorsByName[ConnectorNames.Injected]\n                                        const activating = currentConnector === activatingConnector\n                                        const connected = currentConnector === connector\n                                        const disabled = !triedEager || !!activatingConnector || connected || !!error\n\n                                        return (\n                                            <Button variant=\"contained\"\n                                                key={ConnectorNames.Injected}\n                                                // aria-describedby={id}\n                                                onClick={!connected ? \n                                                    () => {\n                                                        setActivatingConnector(currentConnector)\n                                                        activate(currentConnector)\n                                                    } : \n                                                    handleClick}\n                                                    className=\"connect-button\">\n                                                \n                                                { activating ? \n                                                    <Spinner color={'black'} /> :\n                                                    !connected ? \n                                                        \"Connect Wallet\" :\n                                                        <span>\n                                                            {account === undefined ? \n                                                                `Unsupported Network. Switch to ${networkName}` : \n                                                                ''}\n                                                        </span>\n                                                }\n                                            </Button>\n                                        )\n                                    }) ()}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-5\">\n                                <div className=\"text-container\">\n                                    <img className=\"dark-logo\" src={logoGreen} />\n                                    <p>\n                                        The End to End Encrypted Decentralized \n                                        Email Protocol <br />\n                                        <span className=\"text-green\">\n                                            Owned by its Users\n                                        </span>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </>\n        }\n    </ThemeProvider>\n    </>\n  )\n}\n\n\n","import { useState, useEffect } from \"react\";\nimport ContactsContext, { initialContacts } from './ContactsContext';\n\ntype Props = {\n    children: JSX.Element|JSX.Element[],\n};\n\nconst ContactsProvider = ( { children }: Props ) => {\n    const [contacts, setContacts] = useState<any>(initialContacts.contacts);\n  \n    const localStorage = window.localStorage;\n  \n    useEffect(() => {\n        const savedContacts = JSON.parse(localStorage.getItem('contacts') || 'null');\n        \n        if (!!savedContacts) {\n            setContacts(savedContacts);\n        }\n    }, [localStorage]);\n  \n  \n    useEffect(() => {\n        localStorage.setItem('contacts', JSON.stringify(contacts));\n    }, [contacts, localStorage]);\n    \n    return (\n      <ContactsContext.Provider value={{ contacts, setContacts }}>\n        <>{children}</>\n      </ContactsContext.Provider>\n    );\n  };\n  \n  export default ContactsProvider;","export default __webpack_public_path__ + \"static/media/elephant.2a77170b.svg\";","export default __webpack_public_path__ + \"static/media/logo-green.a6b7a360.svg\";","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { useState, forwardRef, useEffect } from 'react'\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\n\nconst Alert = forwardRef<HTMLDivElement, AlertProps>(function Alert(\n  props,\n  ref,\n) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nexport default function SnackbarNotification(props: any) {\n\n  const [state, setState] = useState({ severity: props.state.severity, open: props.state.open, message: props.state.message })\n\n  useEffect(() => {\n    setState({severity: props.state.severity, open: props.state.open, message: props.state.message})\n  }, [props])\n\n  const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setState({\n      message: state.message, open: false,\n      severity: state.severity\n    })\n  };\n\n  return (\n    <Snackbar open={state.open} autoHideDuration={6000} onClose={handleClose}>\n      <Alert onClose={handleClose} severity={state.severity} sx={{ width: '100%' }}>\n        {state.message}\n      </Alert>\n    </Snackbar>\n  )\n}","var map = {\n\t\"./animal-1.svg\": 964,\n\t\"./animal-10.svg\": 965,\n\t\"./animal-11.svg\": 966,\n\t\"./animal-12.svg\": 967,\n\t\"./animal-13.svg\": 968,\n\t\"./animal-14.svg\": 969,\n\t\"./animal-15.svg\": 970,\n\t\"./animal-16.svg\": 971,\n\t\"./animal-17.svg\": 972,\n\t\"./animal-18.svg\": 973,\n\t\"./animal-19.svg\": 974,\n\t\"./animal-2.svg\": 975,\n\t\"./animal-20.svg\": 976,\n\t\"./animal-21.svg\": 977,\n\t\"./animal-22.svg\": 978,\n\t\"./animal-23.svg\": 979,\n\t\"./animal-24.svg\": 980,\n\t\"./animal-25.svg\": 981,\n\t\"./animal-26.svg\": 982,\n\t\"./animal-27.svg\": 983,\n\t\"./animal-28.svg\": 984,\n\t\"./animal-29.svg\": 985,\n\t\"./animal-3.svg\": 986,\n\t\"./animal-30.svg\": 987,\n\t\"./animal-31.svg\": 988,\n\t\"./animal-32.svg\": 989,\n\t\"./animal-33.svg\": 990,\n\t\"./animal-34.svg\": 991,\n\t\"./animal-35.svg\": 992,\n\t\"./animal-36.svg\": 993,\n\t\"./animal-37.svg\": 994,\n\t\"./animal-38.svg\": 995,\n\t\"./animal-39.svg\": 996,\n\t\"./animal-4.svg\": 997,\n\t\"./animal-40.svg\": 998,\n\t\"./animal-41.svg\": 999,\n\t\"./animal-42.svg\": 1000,\n\t\"./animal-43.svg\": 1001,\n\t\"./animal-44.svg\": 1002,\n\t\"./animal-45.svg\": 1003,\n\t\"./animal-46.svg\": 1004,\n\t\"./animal-47.svg\": 1005,\n\t\"./animal-48.svg\": 1006,\n\t\"./animal-49.svg\": 1007,\n\t\"./animal-5.svg\": 1008,\n\t\"./animal-50.svg\": 1009,\n\t\"./animal-6.svg\": 1010,\n\t\"./animal-7.svg\": 1011,\n\t\"./animal-8.svg\": 1012,\n\t\"./animal-9.svg\": 1013\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 427;","export default __webpack_public_path__ + \"static/media/cloud-2.38b567a5.svg\";","export default __webpack_public_path__ + \"static/media/cloud-1.ef57dc90.svg\";","export default __webpack_public_path__ + \"static/media/cloud-3.e5323624.svg\";","import { useState, useEffect, useContext } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { encrypt } from '@metamask/eth-sig-util'\nimport Deb0x from \"../../ethereum/deb0x\"\nimport { create } from 'ipfs-http-client'\nimport SendIcon from '@mui/icons-material/Send';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport {\n    Box, TextField, Typography\n} from '@mui/material';\nimport { ethers } from \"ethers\";\nimport SnackbarNotification from './Snackbar';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport '../../componentsStyling/encrypt.scss';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { PropaneSharp } from '@mui/icons-material';\n\nconst deb0xAddress = \"0x13dA6EDcdD7F488AF56D0804dFF54Eb17f41Cc61\";\nconst ethUtil = require('ethereumjs-util')\n\n\nconst client = create({\n    host: 'ipfs.infura.io',\n    port: 5001,\n    protocol: 'https'\n})\n\nexport function Encrypt(): any {\n    const { account, library } = useWeb3React()\n    const [encryptionKey, setKey] = useState('')\n    const [textToEncrypt, setTextToEncrypt] = useState('')\n    const [encryptionKeyInitialized, setEncryptionKeyInitialized] = useState('')\n    const [senderAddress, setSenderAddress] = useState('')\n    const [notificationState, setNotificationState] = useState({})\n    const [messageSessionSentCounter, setMessageSessionSentCounter] = useState(0)\n    const [loading, setLoading] = useState(false)\n    const [estimatedReward, setEstimatedReward] = useState(\"9.32\");\n    const [addressList, setAddressList] = useState<string[]>([])\n    const [error, setError] = useState<string | null>(null);\n    const [ input, setInput ] = useState(JSON.parse(localStorage.getItem('input') || 'null'));\n\n    useEffect(() => {\n        if(input !== null && input.match(/^0x[a-fA-F0-9]{40}$/g))\n            addressList.push(input)\n    }, []);\n\n    useEffect(() => {\n        if (!encryptionKeyInitialized) {\n            getPublicEncryptionKey()\n        }\n    }, []);\n\n    function handleKeyDown(evt: any) {\n        if ([\"Enter\", \"Tab\", \",\"].includes(evt.key)) {\n            evt.preventDefault();\n\n            var value = senderAddress.trim();\n\n            if (value && isValid(value)) {\n                setAddressList([...addressList, senderAddress])\n                setSenderAddress(\"\")\n            }\n        }\n    }\n\n    function handleChange(evt: any) {\n        setSenderAddress(evt.target.value)\n        setError(null)\n    }\n\n    function handleDelete(item: any) {\n        setAddressList(addressList.filter(i => i !== item))\n    }\n\n    function handlePaste(evt: any) {\n        evt.preventDefault()\n\n        var paste = evt.clipboardData.getData(\"text\")\n        var addresses = paste.match(/^0x[a-fA-F0-9]{40}$/g)\n\n        if (addresses) {\n            var toBeAdded = addresses.filter((address: any) => !isInList(address))\n\n            setAddressList([...addressList, ...toBeAdded])\n        }\n    }\n\n    function isValid(address: any) {\n        let error = null;\n\n        if (isInList(address)) {\n            error = `${address} has already been added.`;\n        }\n\n        if (!isAddress(address)) {\n            error = `${address} is not a valid ethereum address.`;\n        }\n\n        if (error) {\n            setNotificationState({\n                message: error, open: true,\n                severity: \"error\"\n            })\n            setError(error);\n\n            return false;\n        }\n\n        return true;\n    }\n\n    function isInList(address: any) {\n        return addressList.includes(address);\n    }\n\n    function isAddress(address: any) {\n        return ethers.utils.isAddress(address);\n    }\n\n    async function encryptText(messageToEncrypt: any, destinationAddresses: any)\n    {\n        setLoading(true);\n        const signer = await library.getSigner(0);\n        let cids:any = []\n        let recipients = destinationAddresses.flat()\n        recipients.push(await signer.getAddress())\n        const deb0xContract = Deb0x(signer, deb0xAddress);\n        for (let address of recipients) {\n            console.log(recipients, address)\n            const destinationAddressEncryptionKey = await deb0xContract.getKey(address);\n            const encryptedMessage = ethUtil.bufferToHex(\n                Buffer.from(\n                    JSON.stringify(\n                        encrypt({\n                            publicKey: destinationAddressEncryptionKey,\n                            data: messageToEncrypt,\n                            version: 'x25519-xsalsa20-poly1305'\n                        }\n                        )\n                    ),\n                    'utf8'\n                )\n            )\n            const message = await client.add(encryptedMessage)\n            cids.push(message.path)\n        }\n\n        try {\n            const overrides = \n                { value: ethers.utils.parseUnits(\"0.001\", \"ether\"), }\n            const tx = await deb0xContract.send(recipients, cids, overrides)\n\n            await tx.wait()\n                .then((result: any) => {\n                    setNotificationState({\n                        message: \"Message was succesfully sent.\",\n                        open: true,\n                        severity: \"success\"\n                    })\n\n                    let count = messageSessionSentCounter + 1;\n                    setMessageSessionSentCounter(count);\n                })\n                .catch((error: any) => {\n                    setNotificationState({\n                        message: \"Message couldn't be sent!\",\n                        open: true,\n                        severity: \"error\"\n                    })\n                    console.log(error)\n                })\n        } catch (error: any) {\n            console.log(error)\n            setNotificationState({\n                message: \"You rejected the transaction. Message was not sent.\",\n                open: true,\n                severity: \"info\"\n            })\n        }\n\n        setTextToEncrypt('');\n        setSenderAddress(\"\");\n        setAddressList([])\n        setLoading(false);\n\n    }\n\n    async function initializeDeb0x() {\n        const signer = await library.getSigner(0);\n        const deb0xContract = Deb0x(signer, deb0xAddress);\n        const tx = await deb0xContract.setKey(encryptionKey);\n        const receipt = await tx.wait();\n\n        return receipt.transactionHash;\n    }\n\n    async function getEncryptionKey() {\n        library.provider.request({\n            method: 'eth_getEncryptionPublicKey',\n            params: [account],\n        })\n            .then((result: any) => {\n                setKey(result);\n            });\n    }\n\n    const getPublicEncryptionKey = async () => {\n        const deb0xContract = Deb0x(library, deb0xAddress)\n        const key = await deb0xContract.getKey(account)\n        console.log(key)\n        console.log(encryptionKey)\n        setEncryptionKeyInitialized(key)\n    }\n    const [editorState, setEditorState] = useState(() =>\n        EditorState.createEmpty()\n    );\n\n    const handleEditorChange = (state: any) => {\n        setEditorState(state);\n        sendContent();\n    };\n\n    const sendContent = () => {\n        setTextToEncrypt(draftToHtml(convertToRaw(editorState.getCurrentContent())));\n    };\n\n    return (\n        <>\n            <SnackbarNotification state={notificationState} \n                setNotificationState={setNotificationState} />\n            <div className=\"form-container container\">\n                <Box component=\"form\"\n                    noValidate\n                    autoComplete=\"off\">\n                    <TextField id=\"standard-basic\"\n                        placeholder=\"Type or paste addresses and press `Enter`...\"\n                        value={senderAddress}\n                        onPaste={handlePaste}\n                        onKeyDown={handleKeyDown}\n                        onChange={handleChange} />\n                    <Stack direction=\"row\" spacing={1}>\n                        <Box sx={{ width: '100%', margin: '0 auto' }}\n                            className=\"address-list\">\n                            {\n                                addressList.map((address: any) => {\n                                    return (\n                                        <Chip\n                                            key={address}\n                                            label={address}\n                                            onDelete={() => handleDelete(address)}\n                                            deleteIcon={<DeleteIcon />}\n                                        />\n                                    )\n                                })\n                            }\n                        </Box>\n                    </Stack>\n                    <Editor\n                        editorState={editorState}\n                        onEditorStateChange={handleEditorChange}\n                        toolbarClassName=\"toolbar\"\n                        wrapperClassName=\"wrapper\"\n                        editorClassName=\"editor\"\n                    />\n                    <div className=\"editor-overlay\"></div>\n\n                    { messageSessionSentCounter === 0 ?\n                        <Box sx={{ display: \"flex\", \n                            alignItems: \"end\", \n                            justifyContent: \"flex-end\", \n                            flexDirection: \"column\", \n                            mr: 1 }}>\n                            {textToEncrypt != '' && senderAddress != '' ?\n                                <Box>\n                                    <Typography>\n                                        <small>\n                                            est. rewards: {estimatedReward} DBX\n                                        </small>\n                                    </Typography>\n                                </Box> : \n                                null\n                            }\n\n                            <LoadingButton className=\"send-btn\" \n                                loading={loading} endIcon={ loading ? null : <SendIcon className=\"SEND\" />}\n                                loadingPosition=\"end\"\n                                sx={{ marginLeft: 2, marginTop: 1 }}\n                                disabled={textToEncrypt == '' || addressList == []}\n                                onClick={() => \n                                    encryptText(textToEncrypt, addressList)\n                                } >\n                                { loading ? 'Sending...' : 'Send'}\n                            </LoadingButton>\n                        </Box>\n                        :\n                        <Box sx={{ display: \"flex\", \n                            alignItems: \"end\", \n                            justifyContent: \"flex-end\",\n                            flexDirection: \"column\",\n                            mr: 1 }}>\n                            {textToEncrypt != '' && senderAddress != '' ?\n                                <Box>\n                                    <Typography>\n                                        <small>\n                                            est. rewards: {estimatedReward} DBX\n                                        </small>\n                                    </Typography>\n                                </Box> : \n                                null\n                            }\n\n                            <LoadingButton className=\"send-btn\" \n                                loading={loading} variant=\"contained\" \n                                endIcon={ <SendIcon /> }\n                                sx={{ marginLeft: 2, marginTop: 1 }}\n                                onClick={() => encryptText(textToEncrypt, senderAddress)}>\n                                Send another message\n                            </LoadingButton>\n                        </Box>\n                    }\n                </Box>\n            </div>\n        </>\n    )\n}","import { sign } from \"crypto\";\nimport { Contract, ethers } from \"ethers\";\n\nconst {abi} = require(\"./Deb0x.json\");\n\nexport default (signerOrProvider, address) => {\n    return new ethers.Contract(address, abi, signerOrProvider);\n}","export default __webpack_public_path__ + \"static/media/plus-circle-fill.a335cd64.svg\";","export default __webpack_public_path__ + \"static/media/animal-1.ce0a7c89.svg\";","export default __webpack_public_path__ + \"static/media/animal-10.1ec63741.svg\";","export default __webpack_public_path__ + \"static/media/animal-11.60d27046.svg\";","export default __webpack_public_path__ + \"static/media/animal-12.96b14f32.svg\";","export default __webpack_public_path__ + \"static/media/animal-13.cc352efd.svg\";","export default __webpack_public_path__ + \"static/media/animal-14.c036bd2f.svg\";","export default __webpack_public_path__ + \"static/media/animal-15.f66fd334.svg\";","export default __webpack_public_path__ + \"static/media/animal-16.f1d1c8e7.svg\";","export default __webpack_public_path__ + \"static/media/animal-17.54c2921c.svg\";","export default __webpack_public_path__ + \"static/media/animal-18.a79f5287.svg\";","export default __webpack_public_path__ + \"static/media/animal-19.4e1f038c.svg\";","export default __webpack_public_path__ + \"static/media/animal-2.3cbc9f33.svg\";","export default __webpack_public_path__ + \"static/media/animal-20.582e64c1.svg\";","export default __webpack_public_path__ + \"static/media/animal-21.f994a910.svg\";","export default __webpack_public_path__ + \"static/media/animal-22.614f36ff.svg\";","export default __webpack_public_path__ + \"static/media/animal-23.fe8cb713.svg\";","export default __webpack_public_path__ + \"static/media/animal-24.14d93b91.svg\";","export default __webpack_public_path__ + \"static/media/animal-25.f89249c7.svg\";","export default __webpack_public_path__ + \"static/media/animal-26.eadc71e3.svg\";","export default __webpack_public_path__ + \"static/media/animal-27.bf6ff131.svg\";","export default __webpack_public_path__ + \"static/media/animal-28.09ad8851.svg\";","export default __webpack_public_path__ + \"static/media/animal-29.c4891a44.svg\";","export default __webpack_public_path__ + \"static/media/animal-3.b9cd90a5.svg\";","export default __webpack_public_path__ + \"static/media/animal-30.32b79d90.svg\";","export default __webpack_public_path__ + \"static/media/animal-31.cbbd4ac7.svg\";","export default __webpack_public_path__ + \"static/media/animal-32.dd4496ad.svg\";","export default __webpack_public_path__ + \"static/media/animal-33.bf71ffc1.svg\";","export default __webpack_public_path__ + \"static/media/animal-34.a42b2762.svg\";","export default __webpack_public_path__ + \"static/media/animal-35.05a0f752.svg\";","export default __webpack_public_path__ + \"static/media/animal-36.87183ca8.svg\";","export default __webpack_public_path__ + \"static/media/animal-37.601a5569.svg\";","export default __webpack_public_path__ + \"static/media/animal-38.7c8e43d8.svg\";","export default __webpack_public_path__ + \"static/media/animal-39.a19f4cd1.svg\";","export default __webpack_public_path__ + \"static/media/animal-4.3b05a1a7.svg\";","export default __webpack_public_path__ + \"static/media/animal-40.81b1b2fa.svg\";","export default __webpack_public_path__ + \"static/media/animal-41.98e86830.svg\";"],"sourceRoot":""}